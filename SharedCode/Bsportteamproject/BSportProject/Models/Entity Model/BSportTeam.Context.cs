//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BSportProject.Models.Entity_Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BSportDBEntities : DbContext
    {
        public BSportDBEntities()
            : base("name=BSportDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppFunction> AppFunctions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<AuditMonitorTableColumn> AuditMonitorTableColumns { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<PlayerTeam> PlayerTeams { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<ScheduleBook> ScheduleBooks { get; set; }
        public virtual DbSet<TeamSport> TeamSports { get; set; }
        public virtual DbSet<Time> Times { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Stadium> Stadia { get; set; }
        public virtual DbSet<UserFunction> UserFunctions { get; set; }
        public virtual DbSet<AuditData> AuditDatas { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
    
        [DbFunction("BSportDBEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[BSportDBEntities].[fn_Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("BSportDBEntities", "fnValidateIdentifier")]
        public virtual IQueryable<fnValidateIdentifier_Result> fnValidateIdentifier(string identifier, Nullable<bool> includeInBuild)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var includeInBuildParameter = includeInBuild.HasValue ?
                new ObjectParameter("IncludeInBuild", includeInBuild) :
                new ObjectParameter("IncludeInBuild", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnValidateIdentifier_Result>("[BSportDBEntities].[fnValidateIdentifier](@Identifier, @IncludeInBuild)", identifierParameter, includeInBuildParameter);
        }
    
        public virtual int CreateAccount(string email, string pass)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAccount", emailParameter, passParameter);
        }
    
        public virtual int uspLogError(string errorMessage, Nullable<int> errorNumber, Nullable<int> errorSeverity, Nullable<int> errorState, Nullable<int> errorLine, string errorProcedure)
        {
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var errorNumberParameter = errorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", errorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorSeverityParameter = errorSeverity.HasValue ?
                new ObjectParameter("ErrorSeverity", errorSeverity) :
                new ObjectParameter("ErrorSeverity", typeof(int));
    
            var errorStateParameter = errorState.HasValue ?
                new ObjectParameter("ErrorState", errorState) :
                new ObjectParameter("ErrorState", typeof(int));
    
            var errorLineParameter = errorLine.HasValue ?
                new ObjectParameter("ErrorLine", errorLine) :
                new ObjectParameter("ErrorLine", typeof(int));
    
            var errorProcedureParameter = errorProcedure != null ?
                new ObjectParameter("ErrorProcedure", errorProcedure) :
                new ObjectParameter("ErrorProcedure", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspLogError", errorMessageParameter, errorNumberParameter, errorSeverityParameter, errorStateParameter, errorLineParameter, errorProcedureParameter);
        }
    
        public virtual int uspPrintError()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPrintError");
        }
    }
}
