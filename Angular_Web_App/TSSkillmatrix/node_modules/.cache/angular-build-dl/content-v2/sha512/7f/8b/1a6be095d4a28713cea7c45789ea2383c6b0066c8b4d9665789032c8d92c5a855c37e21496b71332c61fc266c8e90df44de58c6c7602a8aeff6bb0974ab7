{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/home/dashboard/dashboard.component.ts","webpack:///src/app/home/dashboard/dashboard.component.html","webpack:///src/app/home/engineer-detail/engineer-detail.component.ts","webpack:///src/app/home/engineer-detail/engineer-detail.component.html","webpack:///src/app/home/engineer-skill/add-engineer.component.ts","webpack:///src/app/home/engineer-skill/add-engineer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/list-engineers/list-engineer.component.ts","webpack:///src/app/home/list-engineers/list-engineer.component.html","webpack:///src/app/home/machine-maker/machine-maker.component.ts","webpack:///src/app/home/machine-maker/machine-maker.component.html","webpack:///src/app/home/pagenotfound/pagenotfound.component.ts","webpack:///src/app/home/pagenotfound/pagenotfound.component.html","webpack:///src/app/home/pop-up/confirmation/confirmation.component.ts","webpack:///src/app/home/pop-up/confirmation/confirmation.component.html","webpack:///src/app/home/pop-up/download-machine/download-machine.component.ts","webpack:///src/app/home/pop-up/download-machine/download-machine.component.html","webpack:///src/app/home/pop-up/filter-maker/filter-maker.component.ts","webpack:///src/app/home/pop-up/filter-maker/filter-maker.component.html","webpack:///src/app/home/pop-up/filter/filter.component.ts","webpack:///src/app/home/pop-up/filter/filter.component.html","webpack:///src/app/home/register/register.component.ts","webpack:///src/app/home/register/register.component.html","webpack:///src/app/home/skillexplaination/explaination.component.ts","webpack:///src/app/home/skillexplaination/explaination.component.html","webpack:///src/app/home/update-engineer/update-engineer.component.ts","webpack:///src/app/home/update-engineer/update-engineer.component.html","webpack:///src/app/login/login-popup/popup.component.ts","webpack:///src/app/login/login-popup/popup.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/register/register.component.ts","webpack:///src/app/login/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/shared/ViewModels/MachineSKillAssign.model.ts","webpack:///src/app/shared/ViewModels/MachinesMaker.model.ts","webpack:///src/app/shared/constant/TSconstands.component.ts","webpack:///src/app/shared/materials/material-module.ts","webpack:///src/app/shared/models/FilterModel.model.ts","webpack:///src/app/shared/models/Industry.model.ts","webpack:///src/app/shared/models/MachineSkill.model.ts","webpack:///src/app/shared/models/QuerySearchModel.model.ts","webpack:///src/app/shared/models/maker.model.ts","webpack:///src/app/shared/models/technician.model.ts","webpack:///src/app/shared/models/user.model.ts","webpack:///src/app/shared/ng-prime/prime.module.ts","webpack:///src/app/shared/services/authService.service.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/skillservice.service.ts","webpack:///src/app/shared/services/technicianservice.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","router","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","next","state","AuthInterceptor","injector","count","isRefreshingToken","tokenSubject","token","clone","setHeaders","Authorization","authService","get","headers","handle","pipe","addToken","getAuthToken","error","console","log","status","handle400Error","handle401Error","logoutUser","refreshToken","newToken","localStorage","clear","navigate","DashboardComponent","spinner","skillService","technicianService","canEdit","show","listIndustries","Array","GetListIndustries","GetQuerySeach","subscribe","data","objects","hide","err","userClaims","getUserClaims","setItem","UserId","toString","UserName","userName","getItem","CheckPermission","EngineerDetailsComponent","route","dialogService","_snackBar","currentPage","isActive","text","snapshot","paramMap","userid","parseInt","Engineer","GetEngineerDetail","Deactive","event","page","GetListEngineer","totalItem","mes","type","openConfirmDialog","afterClosed","res","UpdateStatusOfTechnician","TechId","open","duration","horizontalPosition","verticalPosition","pageChanged","AddTechSkillComponent","toastr","techService","noResult","IndResult","StaResult","machineNoReuslt","listProskill","listMachineSkill","technician","ProSkill","listAssign","listAssignmachine","TechMachineIndutry","selectedRelMachine","listEnIndustries","IndustryId","IndId","selectedInd","GetListMachineSKill","GetListStationedEngineer","listStationed","StationId","GetListProskill","userSource","create","observer","asyncSelected","SearchUserInitialByCountry","StationedSource","staasyncSelected","SearchStationed","industrySource","indasyncSelected","SearchIndustry","machinedustrySource","maasyncSelected","SearchMachineMakerByIndustry","eve","MakerName","checkisesxit","find","item","Maker","RelMachineId","assignskill","MachineSkill","Model","MaId","push","Comment","model","typeaheadLoading","splice","findIndex","x","number","value","checked","checkexisted","filter","target","machine","MSId","SkillNumber","Userid","UpdatedBy","AddTechnicianSkill","success","index","flag","length","changeTypeaheadLoading","typeaheadOnSelect","typeaheadNoResults","onOptionsStationSelected","matypeaheadOnSelect","matypeaheadNoResults","onChange","onOptionsSelected","AddMachineSkill","BackHome","SubmitEngineer","HomeComponent","breakpointObserver","isHandset$","observe","Handset","result","matches","sessionStorage","Logout","path","component","canActivate","children","redirectTo","pathMatch","HomeModule","forChild","entryComponents","modalRef","ListEngineerComponent","modalService","userService","isFilter","isClear","selected","disableSelect","config","animated","selectedProskill","selectedMachineSkill","listEngineer","professionals","machineSkills","pagenumber","pagesize","GetListIndustriesAll","Industry","GetListStationedAll","selectedSta","Stationed","dataSource","SearchTechnicianByName","currentdate","Date","url","getDate","getMonth","getFullYear","getMilliseconds","DownloadTechniciansReport","blob","UpdatePageNumber","FilterListEngineer","getTechFilter","openDiagnosedDialog","template","openFilerModal","GetlistEngineer","ExportListEngineers","MachineMakerComponent","changeDetection","listIndustry","listIndustries1","listIndustries2","listIndustriesUpdate1","listIndustriesUpdate2","jsonIndustry","listMachineMaker","selectedMaker","industries","forEach","object","GetListIndustriesMachine","SearchMachineMaker","GetListIndustriesMachineByKey","getMakerFilter","openFilterMachineMakerDialog","FilterListMakers","openDownloadMachineDialog","makerId","DeleteMaker","AddMachineMaker","UpdateMakerIndustry","GetSelectedMachineMaker","UpdatePageNumberOfMachine","industry","OpenDownloadMachineReport","onSubmit","GeneralPageNotFoundComponent","isRemember","isLoginError","max","rate","isReadonly","overStar","percent","ConfirmationDialogComponent","dialogRef","close","closeDialog","DownloadMachineDialogComponent","save","FilterMakerComponent","searchMoviesCtrl","isLoading","selectedMachine","filteredMovies","slice","indexOf","valueChanges","errorMsg","undefined","setValue","option","AddNewMakerFilter","UpdateListIndustry","forbiddenNamesValidator","Services","control","Service","RegExp","test","forbiddenNames","RequireMatch","selection","incorrect","FilterComponent","list1","list2","machineSelection","proskillSelection","AddNewTechFilter","SkillId","machineSkillNumber","professionalNumber","element","onProSkillChanged","onMachineSkillChanged","UpdateStationed","RegisterComponent","messageService","_formBuilder","isLinear","searchMachinesCtrl","activeIndex","displayedColumns","matcher","MyErrorStateMatcher","isSelectMaker","filteredMachines","firstFormGroup","group","Country","required","Email","FullName","Title","Remark","secondFormGroup","application","Description","source","displayValue","resetMachineAssignments","reset","DisplayName","EmailAddress","addOption","SelectMaker","form","invalid","dirty","untouched","touched","ExplainationComponent","UpdateTechSkillComponent","Initials","StationName","IndustryName","CanEdit","SearchUserByInitial","relMaker","check","isexist","UpdateTechnicianSkill","onOptionsIndSelected","PopupLoginDialogComponent","fb","username","password","userAuthentication","timeexpires","access_token","UserNo","toLocaleString","refresh_token","events","errormes","message","error_description","OnSubmit","onFilterChange","LoginComponent","LoginModule","appRoutes","MachineSkillAssign","MachinesMaker","AppSettings","itemname","itemid","typeid","note","query","name","API_service","Role_Admin","Role_Manager","Role_Technician","MaterialModule","FilterModel","QuerySearch","Technician","User","PrimeModule","AuthService","http","authTokenStale","authTokenNew","currentToken","rootUrl","post","removeItem","DialogService","dialog","msg","width","disableClose","position","top","providedIn","SkillService","body","JSON","stringify","responseType","TechnicianService","UserService","pagename","userrole","userRole","techFilterModel","makerFilterModel","cast","asObservable","castuserrole","val","selectItem","ind","environment","production","bootstrapModule"],"mappings":"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,4B,EAA4B,uH;AAAA,K;;;YAA5BA,4B;AAA4B,8B;AAAA,gB;AAAA,a;AAAA,q4d;AAAA;AAAA;ACXzC;;AACQ;;AACE;;AAAA;;AACF;;AACE;;AACA;;AACE;;AACA;;AACF;;AACA;;AACA;;AACA;;AACE;;AACF;;AACA;;AACE;;AACA;;AACA;;AACF;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACE;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACA;;AACA;;AACE;;AACA;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AACA;;AACF;;AACA;;AACE;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACA;;AACA;;AACF;;AACF;;AACA;;AACF;;AACF;;AACF;;AACE;;AACF;;;;;;;;sEDpROA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACT1Q,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;AEXzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagR,2B;AACX,2CACkC9N,IADlC,EAES+N,SAFT,EAE6D;AAAA;;AAD3B,aAAA/N,IAAA,GAAAA,IAAA;AACzB,aAAA+N,SAAA,GAAAA,SAAA;AACL;;;;mCACO,CAAE;;;sCAEC;AACZ,eAAKA,SAAL,CAAeC,KAAf,CAAqB,KAArB;AACD;;;;;;;uBATUF,2B,EAA2B,gEAE5B,wEAF4B,C,EAEb,sI;AAAA,K;;;YAFdA,2B;AAA2B,8C;AAAA,c;AAAA,a;AAAA,4P;AAAA;AAAA;ACRxC;;AACE;;AAAuB;;AAAgB;;AACzC;;AACA;;AACA;;AACE;;AAA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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Industry } from './shared/models/Industry.model';\nimport { AppSettings } from './shared/constant/TSconstands.component';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './shared/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Skill Matrix';\n\n  constructor(private router: Router){}\n\n  ngOnInit() {\n  }\n}\n","<router-outlet></router-outlet>\n\n","import { DialogService } from \"./shared/services/dialog.service\";\nimport { TechnicianService } from \"./shared/services/technicianservice.service\";\nimport { appRoutes } from \"./routes\";\nimport { SkillService } from \"./shared/services/skillservice.service\";\nimport { LoginModule } from \"./login/login.module\";\nimport { AuthInterceptor } from \"./auth/auth.interceptor\";\nimport { UserService } from \"./shared/services/user.service\";\nimport { AuthService } from \"./shared/services/authService.service\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"./auth/auth.guard\";\nimport { GeneralPageNotFoundComponent } from \"./home/pagenotfound/pagenotfound.component\";\nimport { HomeModule } from \"./home/home.module\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { NgxPrettyCheckboxModule } from \"ngx-pretty-checkbox\";\nimport { MaterialModule } from \"./shared/materials/material-module\";\nimport { PrimeModule } from \"./shared/ng-prime/prime.module\";\n\n@NgModule({\n  declarations: [AppComponent, GeneralPageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    LoginModule,\n    HomeModule,\n    RouterModule.forRoot(appRoutes),\n    NgxSpinnerModule,\n    NgxPrettyCheckboxModule,\n    MaterialModule,\n    PrimeModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    SkillService,\n    TechnicianService,\n    AuthGuard,\n    DialogService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../shared/services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router : Router){\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot):  boolean {\r\n      // if (localStorage.getItem('userToken') != null){\r\n      //       let expiretime = new Date(localStorage.getItem('TokenExpire'));\r\n      //       let currenttime = new Date();\r\n      //       var timeDiff = Math.abs(currenttime.getTime() - expiretime.getTime());\r\n      //       var diffDays = Math.ceil(timeDiff / (1000));\r\n    \r\n      //       if(diffDays >3580){\r\n      //         this.router.navigate([\"login\"]);\r\n      //       }\r\n      //       else{\r\n      //         return true;\r\n      //       }    \r\n      //     }\r\n     return true;\r\n  }\r\n}\r\n","\r\nimport {throwError as observableThrowError,  Observable ,  BehaviorSubject } from 'rxjs';\r\n\r\nimport {take, filter, catchError, switchMap, finalize, timeout} from 'rxjs/operators';\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse, HttpUserEvent, HttpErrorResponse } from \"@angular/common/http\";\r\n\r\nimport {  Router } from '@angular/router';\r\nimport { AuthService } from '../shared/services/authService.service';\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    count = 0;\r\n    isRefreshingToken: boolean = false;\r\n    tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n    constructor(private router : Router,private injector: Injector, ) {}\r\n\r\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n        return req.clone({ setHeaders: { Authorization: 'Bearer ' + token }})\r\n    }\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n        const authService = this.injector.get(AuthService);\r\n        if (req.headers.get('No-Auth') == \"True\"){\r\n            return next.handle(req.clone()).pipe(timeout(100000));\r\n        }\r\n        return next.handle(this.addToken(req, authService.getAuthToken())).pipe(\r\n            timeout(100000),\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    this.count++;\r\n                    console.log(error.status);\r\n                    switch ((<HttpErrorResponse>error).status) {\r\n                        case 400:\r\n                            return this.handle400Error(error);\r\n                        case 498:\r\n                            return this.handle401Error(req, next);\r\n                    }\r\n                } else {\r\n                    return observableThrowError(error);\r\n                }\r\n            }));\r\n    }\r\n\r\n    handle400Error(error) {\r\n        if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\r\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\r\n            console.log(error.status);\r\n            return this.logoutUser();\r\n        }\r\n\r\n        return observableThrowError(error);\r\n    }\r\n\r\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (!this.isRefreshingToken) {\r\n            this.isRefreshingToken = true;\r\n            // Reset here so that the following requests wait until the token\r\n            // comes back from the refreshToken call.\r\n            this.tokenSubject.next(null);\r\n\r\n            const authService = this.injector.get(AuthService);\r\n            \r\n            return authService.refreshToken().pipe(\r\n                switchMap((newToken: string) => {\r\n                    console.log('this.newToken :' + newToken)\r\n                    if (newToken) {\r\n                        this.tokenSubject.next(newToken);\r\n                        return next.handle(this.addToken(req, newToken));\r\n                    }\r\n\r\n                    // If we don't get a new token, we are in trouble so logout.\r\n                    return this.logoutUser();\r\n                }),\r\n                catchError(error => {\r\n                    // If there is an exception calling 'refreshToken', bad news so logout.\r\n                    return this.logoutUser();\r\n                }),\r\n                finalize(() => {\r\n                    this.isRefreshingToken = false;\r\n                }),);\r\n        } else {\r\n            return this.tokenSubject.pipe(\r\n                filter(token => token != null),\r\n                take(1),\r\n                switchMap(token => {\r\n                    return next.handle(this.addToken(req, token));\r\n                }),);\r\n        }\r\n    }\r\n\r\n\r\n    logoutUser() {\r\n        // Route to the login page (implementation up to you)\r\n        localStorage.clear();\r\n        this.router.navigate([\"login\"]);\r\n        return observableThrowError(\"\");\r\n    }\r\n}\r\n\r\n\r\n","import { TechnicianService } from \"./../../shared/services/technicianservice.service\";\r\nimport { User } from \"./../../shared/models/user.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Component, OnInit, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  listIndustries: Array<Industry>;\r\n  userClaims: User;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.listIndustries = new Array<Industry>();\r\n\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.userClaims = new User();\r\n    this.technicianService.getUserClaims().subscribe((data: User) => {\r\n      this.userClaims = data;\r\n      localStorage.setItem(\"UserNo\", this.userClaims.UserId.toString());\r\n      localStorage.setItem(\"UserName\", this.userClaims.UserName);\r\n\r\n      this.userName = localStorage.getItem(\"UserName\");\r\n\r\n      this.skillService\r\n        .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.canEdit = data;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","<main>\r\n  <section class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 top-container\">\r\n        <p>Welcome,</p>\r\n        <h1 id=\"userName\"><strong>{{userClaims.DispplayName}}</strong></h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"row feature-box\">\r\n      <div class=\"col-12\">\r\n        <p><strong>FEATURES</strong></p>\r\n      </div>\r\n      <div id=\"expId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/skill-explaination\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/skill-icon.svg\" />\r\n            <h1>Skill Explaination</h1>\r\n            <p class=\"text-fade\">\r\n              Definitions of the abbreviations for skill levels and engineer background.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"engiId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/list-engineer\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/engineer-icon.svg\" />\r\n            <h1>Engineers</h1>\r\n            <p class=\"text-fade\">\r\n              Searchable list of all TS Engineers.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"addId\" class=\"col-6 col-sm-6 col-lg-3 card-box\" *ngIf=\"canEdit\">\r\n        <a routerLink=\"/home/add-skill\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/add-engineer-icon.svg\" />\r\n            <h1>Manager Engineer</h1>\r\n            <p class=\"text-fade\">\r\n              Add, update or delete engineers from the engineer page.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"addId\" class=\"col-6 col-sm-6 col-lg-3 card-box\" *ngIf=\"!canEdit\">\r\n        <div class=\"card shadow-sm\">\r\n          <img class=\"card-icon\" src=\"assets/img/add-engineer-icon.svg\" />\r\n          <h1>Add Engineer</h1>\r\n          <p class=\"text-fade\">\r\n            Add, update or delete engineers from the engineer page.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"machineId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/machine-maker\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/machine-maker-icon.svg\" />\r\n            <h1>Manage Machine Maker</h1>\r\n            <p class=\"text-fade\">\r\n              Add, update or delete machine makers.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</main>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\"\r\n  [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SkillService } from '../../shared/services/skillservice.service';\r\nimport { TechnicianService } from '../../shared/services/technicianservice.service';\r\nimport { Technician } from '../../shared/models/technician.model';\r\nimport { AppSettings } from '../../shared/constant/TSconstands.component';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-engineer-detail',\r\n    templateUrl: './engineer-detail.component.html',\r\n  })\r\n\r\n  export class EngineerDetailsComponent implements OnInit {\r\n    Engineer : Technician;\r\n    totalItem : number;\r\n    currentPage: number=1;\r\n    userid:number;\r\n    userName :string;\r\n    isActive : boolean = true;\r\n    text = \"Set as Inactive\";\r\n    constructor(private spinner: NgxSpinnerService,\r\n      private route: ActivatedRoute,private router: Router,\r\n      public skillService : SkillService,\r\n      public technicianService : TechnicianService,\r\n      private dialogService : DialogService,\r\n      private _snackBar: MatSnackBar) { }\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get('id');\r\n        this.userName = localStorage.getItem('UserName');\r\n        this.userid = parseInt(id);\r\n\r\n        this.spinner.show();\r\n        this.Engineer = new Technician();\r\n        \r\n        this.technicianService.GetEngineerDetail(AppSettings.GetQuerySeach(1,1,this.userName,this.userid,)).subscribe((data:any)=>{     \r\n          this.Engineer= data.objects;\r\n          this.isActive = !this.Engineer.Deactive;\r\n          this.text = this.Engineer.Deactive ? \"Set as Active\" : \"Set as Inactive\";\r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n          this.spinner.hide();\r\n        })\r\n    }\r\n\r\n    pageChanged(event: any): void {\r\n        this.spinner.show();\r\n        this.currentPage = event.page;\r\n        this.technicianService.GetListEngineer(AppSettings.GetQuerySeach(10,event.page,\"\",13,)).subscribe((data:any)=>{\r\n          this.Engineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n    \r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n          this.spinner.hide();\r\n        })\r\n    \r\n      }\r\n\r\n      UpdateStatus() {\r\n        let mes = this.isActive ? \"De-active technician ? \" : \"Active technician ?\";\r\n        let type = this.isActive ? 1: 0;\r\n        this.dialogService.openConfirmDialog(mes).afterClosed()\r\n        .subscribe((res)=>{\r\n          if(res){\r\n            this.technicianService.UpdateStatusOfTechnician(AppSettings.GetQuerySeach(10,1,\"\",this.Engineer.TechId,type)).subscribe((data:any)=>{\r\n              this._snackBar.open('Update success',\"\", {\r\n                duration: 5000,\r\n                horizontalPosition: \"center\",\r\n                verticalPosition: \"top\",\r\n              });\r\n              this.Engineer.Deactive = !this.Engineer.Deactive;\r\n              this.text = this.Engineer.Deactive ? \"Set as Active\" : \"Set as Inactive\";\r\n              this.spinner.hide();\r\n            },\r\n            (err : HttpErrorResponse)=>{\r\n              this.spinner.hide();\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n    gotoAddEngineer(){\r\n        this.router.navigate(['home/add-skill']);\r\n    }\r\n\r\n    GotoEdit(){\r\n        this.router.navigate(['home/update-detail/',this.userid]);\r\n    }\r\n\r\n    BackHome() {\r\n      this.router.navigate(['/home/list-engineer']);\r\n    }\r\n  }\r\n  \r\n","<section class=\"container\">\r\n  <div class=\"row form-header\">\r\n    <div class=\"col-12 right-box d-flex justify-content-end\">\r\n      <div class=\"d-flex right-box-btn\" *ngIf=\"Engineer.CanEdit\">\r\n        <div class=\"top-add\">\r\n          <button id=\"editId\" (click)=\"GotoEdit()\" [disabled]=\"Engineer.Deactive\" type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\"\r\n            data-target=\"#addMachineModal\">\r\n            <i class=\"fa fa-pencil\"></i>\r\n            <span class=\"item-label\">Edit</span>\r\n          </button>\r\n          <button (click)=\"UpdateStatus()\" style=\"margin-left: 10px;\" id=\"editId\"  type=\"button\" class=\"btn btn-default\" \r\n          >\r\n          <span class=\"item-label\">{{text}}</span>\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>BASIC INFORMATION</strong></p>\r\n      <div class=\"eng-details shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td class=\"title\">Initial</td>\r\n              <td class=\"info\">{{Engineer.Initials}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Name</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.DisplayName}}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Email</td>\r\n              <td class=\"info\">\r\n                <p><a href=\"mailto:{{Engineer.EmailAddress}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{Engineer.EmailAddress}}</a></p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Stationed</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.StationName}}</p>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"title\">Professional Background</td>\r\n              <td class=\"info\">\r\n                <p>\r\n                  <span *ngFor=\"let subitem of Engineer.Professionals; let i = index\"\r\n                    tooltip=\"{{subitem.Explain}}\">{{subitem.SkillCode}}<span\r\n                      *ngIf=\"i < Engineer.Professionals.length -1\">,</span></span>\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Status</td>\r\n              <td class=\"info\">\r\n                <p *ngIf=\"!Engineer.Deactive\">Activate</p>\r\n                <p *ngIf=\"Engineer.Deactive\">Inactive</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Remark</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.Remark}}</p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>MACHINE SKILLS</strong></p>\r\n      <div class=\"eng-details shadow-sm table-responsive\" *ngFor=\"let item of Engineer.listAssign\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td class=\"title\">Machine Name</td>\r\n              <td class=\"info\">{{item.Maker.MakerName}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Machine Application</td>\r\n              <td class=\"info\">{{item.Maker.Model}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Skill(s)</td>\r\n              <!-- <td class=\"info\">\r\n                  <p>{{item.SkillName}}</p>\r\n                </td> -->\r\n              <td class=\"info\">\r\n                <p>\r\n                  <span *ngFor=\"let subitem of item.MachineSkill; let i = index\" tooltip=\"{{subitem.Explain}}\"\r\n                    [adaptivePosition]=\"false\">\r\n                    {{subitem.MSName}}<span *ngIf=\"i < item.MachineSkill.length -1\">,</span>\r\n                  </span>\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Skill Summary</td>\r\n              <td class=\"info\">\r\n                <p>\r\n                  {{item.Comment}}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <pagination [totalItems]=\"totalItem\" [(ngModel)]=\"currentPage\" (pageChanged)=\"pageChanged($event)\"></pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { MachineSkillAssign } from \"./../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { MachineSkill } from \"./../../shared/models/MachineSkill.model\";\r\nimport { Maker } from \"./../../shared/models/maker.model\";\r\nimport { Industry } from \"./../../shared/models/Industry.model\";\r\nimport { Technician } from \"./../../shared/models/technician.model\";\r\nimport { TechnicianService } from \"./../../shared/services/technicianservice.service\";\r\nimport { ProfessionalSkill } from \"./../../shared/models/ProfessionalSkill.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TypeaheadMatch } from \"ngx-bootstrap\";\r\nimport { TechMachineIndutry } from \"../../shared/models/techmachineind.model\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { PrettyRadioChange } from \"ngx-pretty-checkbox\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\n\r\n@Component({\r\n  selector: \"app-engineer-skill\",\r\n  templateUrl: \"./add-engineer.component.html\",\r\n  styleUrls: [\"./add-engineer.component.css\"],\r\n})\r\nexport class AddTechSkillComponent implements OnInit {\r\n  listIndustries: Array<Industry>;\r\n  listEnIndustries: Array<Industry>;\r\n  listStationed: Array<Stationed>;\r\n  TechMachineIndutry: Array<TechMachineIndutry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listAssignmachine: Array<MachineSkillAssign>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  StationedSource: Observable<any>;\r\n  userSource: Observable<any>;\r\n  industrySource: Observable<any>;\r\n  machinedustrySource: Observable<any>;\r\n  asyncSelected: string;\r\n  staasyncSelected: string;\r\n  indasyncSelected: string;\r\n  maasyncSelected: string;\r\n  comment: string;\r\n  model: string;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  IndResult = false;\r\n  StaResult = false;\r\n  machineNoReuslt = false;\r\n\r\n  technician: Technician;\r\n  selectedInd: number;\r\n  selectedRelMachine: Maker;\r\n  userName: string;\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public techService: TechnicianService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.technician = new Technician();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.listAssignmachine = new Array<MachineSkillAssign>();\r\n    this.TechMachineIndutry = new Array<TechMachineIndutry>();\r\n    this.selectedRelMachine = new Maker();\r\n\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listEnIndustries = data.objects;\r\n          this.technician.IndustryId = this.listEnIndustries[0].IndId;\r\n          this.selectedInd = this.listIndustries[0].IndId;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.technician.StationId = this.listStationed[0].StationId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    //Get Source to search Initial\r\n    this.userSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.techService.SearchUserInitialByCountry(\r\n          AppSettings.GetQuerySeach(10, 1, token, null, 1, this.userName)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.StationedSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.staasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.techService.SearchStationed(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.industrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.indasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.machinedustrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.maasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, token, null, this.selectedInd)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  onOptionsSelected(event) {\r\n    this.selectedInd = event;\r\n  }\r\n  onOptionsIndSelected(event) {\r\n    this.technician.IndustryId = event;\r\n  }\r\n  onOptionsStationSelected(event) {\r\n    this.technician.StationId = event;\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\" || eve != this.selectedRelMachine.MakerName) {\r\n      this.selectedRelMachine = new Maker();\r\n    }\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    let checkisesxit = this.technician.listAssign.find(\r\n      (item) => item.Maker.RelMachineId == this.selectedRelMachine.RelMachineId\r\n    );\r\n\r\n      let assignskill = new MachineSkillAssign();\r\n      assignskill.Maker = new Maker();\r\n      assignskill.MachineSkill = new Array<MachineSkill>();\r\n\r\n      assignskill.Maker.MakerName = this.selectedRelMachine.MakerName;\r\n      assignskill.Maker.Model = this.selectedRelMachine.Model;\r\n      assignskill.Maker.MaId = this.selectedRelMachine.MaId;\r\n      assignskill.Maker.RelMachineId = this.selectedRelMachine.RelMachineId;\r\n\r\n      this.listAssignmachine.push(assignskill);\r\n      this.technician.listAssign.push(assignskill);\r\n      assignskill.Comment = \"\";\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n      this.model = \"\";\r\n    \r\n  }\r\n\r\n  onTextChange(eve: any, item: MachineSkillAssign) {\r\n    item.Comment = eve;\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  RemoveMachineSkill(item: MachineSkillAssign) {\r\n    this.technician.listAssign.splice(\r\n      this.technician.listAssign.findIndex(\r\n        (x) => x.Maker.RelMachineId == x.Maker.RelMachineId\r\n      ),\r\n      1\r\n    );\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician = e.item;\r\n    this.technician.StationId = this.listStationed[0].StationId;\r\n    this.technician.IndustryId = this.listEnIndustries[0].IndId;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n  }\r\n\r\n  indtypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician.IndustryId = e.item.IndId;\r\n  }\r\n\r\n  statypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician.StationId = e.item.StationId;\r\n  }\r\n\r\n  matypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.selectedRelMachine = e.item;\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  indtypeaheadNoResults(event: boolean): void {\r\n    this.IndResult = event;\r\n  }\r\n  statypeaheadNoResults(event: boolean): void {\r\n    this.StaResult = event;\r\n  }\r\n\r\n  matypeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  changeOps(event: PrettyRadioChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  onFilterChange(eve: any, model: MachineSkillAssign) {\r\n    let checkexisted = this.technician.listAssign.filter(\r\n      (x) => x.Maker.RelMachineId == model.Maker.RelMachineId\r\n    )[0];\r\n    if (checkexisted != null) {\r\n      let value = eve.target.value;\r\n      let number = parseInt(eve.target.value);\r\n      if (eve.target.checked) {\r\n        let machine = new MachineSkill();\r\n        machine.MSId = value;\r\n        checkexisted.MachineSkill.push(machine);\r\n        checkexisted.SkillNumber = checkexisted.SkillNumber + number;\r\n      } else {\r\n        checkexisted.SkillNumber = checkexisted.SkillNumber - number;\r\n        checkexisted.MachineSkill.splice(\r\n          checkexisted.MachineSkill.findIndex((x) => x.MSId == value),\r\n          1\r\n        );\r\n      }\r\n      console.log(checkexisted.SkillNumber);\r\n    }\r\n  }\r\n\r\n  SubmitEngineer() {\r\n    this.spinner.show();\r\n    let Userid = parseInt(localStorage.getItem(\"UserNo\"));\r\n    this.technician.UpdatedBy = Userid;\r\n    this.techService.AddTechnicianSkill(this.technician).subscribe(\r\n      (data: any) => {\r\n        this.toastr.success(\"Add machine skill for technician success\");\r\n        this.spinner.hide();\r\n        this.technician = new Technician();\r\n        this.technician.listAssign = new Array<MachineSkillAssign>();\r\n        this.asyncSelected = \"\";\r\n        this.indasyncSelected = \"\";\r\n        this.staasyncSelected = \"\";\r\n\r\n        this.router.navigate([\"home/engineer-detail/\", data]);\r\n      },\r\n      (err: HttpErrorResponse) => {}\r\n    );\r\n  }\r\n\r\n  trackByItems(index: number, item: MachineSkillAssign) {}\r\n\r\n  ValidateSubmitEngineer() {\r\n    let flag = false;\r\n    if (this.technician.listAssign.length < 1) {\r\n      flag = true;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"container\">\r\n    <form class=\"form-engineer\">\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Engineer Details</h3>\r\n            <p>Please fill in all the engineer details below</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row info\">\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"initial\">Initial</label>\r\n              <input class=\"form-control input-icon\" id=\"initial\" type=\"text\" [(ngModel)]=\"asyncSelected\"\r\n                [typeahead]=\"userSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\"\r\n                typeaheadOptionField=\"Initials\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n                name=\"asyncSelected\" placeholder=\"&#61442; Search User Initial\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"stationed\">Stationed</label>\r\n              <select name=\"stationed\" class=\"form-control\" [disabled]=\"technician.UserName == null\"\r\n                [(ngModel)]=\"technician.StationId\" (ngModelChange)='onOptionsStationSelected($event)'>\r\n                <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                  {{item.StationName}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"industry\">Industry</label>\r\n              <select style=\"margin-top:3px;\" name=\"industry\" class=\"form-control\"\r\n                [disabled]=\"technician.UserName == null\" [(ngModel)]=\"technician.IndustryId\"\r\n                (ngModelChange)='onOptionsIndSelected($event)'>\r\n                <option *ngFor=\"let item of listEnIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n            </div> -->\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Remark</label>\r\n              <textarea class=\"form-control\" id=\"Remark\" name=\"Remark\" [(ngModel)]=\"technician.Remark\"\r\n                type=\"text\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Full Name</label>\r\n              <input class=\"form-control\" id=\"fullName\" name=\"fullName\" [(ngModel)]=\"technician.DisplayName\"\r\n                type=\"text\">\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"uname\">Username</label>\r\n              <input class=\"form-control\" id=\"userName\" name=\"userName\" [(ngModel)]=\"technician.UserName\" type=\"text\">\r\n            </div> -->\r\n            <div class=\"form-group\">\r\n              <label for=\"mail\">Email Address</label>\r\n              <input class=\"form-control\" name=\"EmailAddress\" [(ngModel)]=\"technician.EmailAddress\" id=\"emailAdd\"\r\n                type=\"email\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Title</label>\r\n              <input class=\"form-control\" id=\"Title\" name=\"Title\" [(ngModel)]=\"technician.Title\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Professional Background</h3>\r\n            <p>Please select engineer professional background</p>\r\n          </div>\r\n          <div class=\"info eng-background col-12\">\r\n            <div class=\"form-check\" *ngFor=\"let item of listProskill\">\r\n              <p-checkbox name=\"animation\" (change)=\"changeOps($event)\" [value]=\"item.SkillId\" outline=\"true\"\r\n                shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                {{item.SkillName}}\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Machine/Maker Skills</h3>\r\n            <p>Please assign machine skill to each machine</p>\r\n          </div>\r\n          <div class=\"info col-12\">\r\n            <div class=\"add-machine\" >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\"  fxLayoutAlign=\"space-between center\" >\r\n                <div fxFlex=\"35\">\r\n                  <input class=\"input-icon\" placeholder=\"&#61442; Search machine maker\" type=\"text\"\r\n                  [(ngModel)]=\"maasyncSelected\" [typeahead]=\"machinedustrySource\"\r\n                  (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"matypeaheadOnSelect($event)\"\r\n                  [typeaheadOptionsLimit]=\"10\" typeaheadOptionField=\"MakerName\" autocomplete=\"off\"\r\n                  (typeaheadNoResults)=\"matypeaheadNoResults($event)\" name=\"maasyncSelected\"\r\n                  (ngModelChange)=\"onChange($event)\">\r\n                </div>\r\n                <div fxFlex=\"15\">\r\n                  <input class=\"input-icon\" placeholder=\"Application\" type=\"text\" [(ngModel)]=\"selectedRelMachine.Model\" name=\"Model\">\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                  <select class=\"shadow-sm\" style=\"width:100%\" name=\"selectedInd\" [(ngModel)]=\"selectedInd\"\r\n                (ngModelChange)='onOptionsSelected($event)'>\r\n                <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n                </div>\r\n                \r\n                <div fxFlex=\"20\">\r\n                  <button id=\"addRowId\" type=\"button\" class=\"btn btn-default\" (click)=\"AddMachineSkill()\"\r\n                [disabled]=\"selectedRelMachine.MaId == 0\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n                </div>\r\n      \r\n              </div>             \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 section-title\" *ngIf=\"technician.listAssign.length > 0\">\r\n            <br>\r\n            <p><strong>List of Machine/Maker Skills</strong></p>\r\n          </div>\r\n          <div class=\"info col-12\" *ngFor=\"let item of technician.listAssign;  trackBy: trackByItems\">\r\n            <div class=\"selected-machine shadow-sm\">\r\n              <div class=\"btn-icon-group\">\r\n                <button (click)=\"RemoveMachineSkill(item)\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\"><span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span></button>\r\n\r\n              </div>\r\n              <p class=\"font-weight-bold\" id=\"machineSkill\">{{item.Maker.MakerName}} -\r\n                {{item.Maker.Model}}</p>\r\n              <div class=\"check-container\">\r\n                <div class=\"form-check\" *ngFor=\"let subitem of listMachineSkill\">\r\n                  <input value=\"{{subitem.MSId}}\" (change)=\"onFilterChange($event,item)\" class=\"form-check-input\"\r\n                    id=\"installation\" type=\"checkbox\">\r\n                  <label class=\"form-check-label\" for=\"bg1\">{{subitem.MSName}}</label>\r\n                </div>\r\n              </div>\r\n              <textarea name=\"comment\" (ngModel)=\"item.Comment\" (ngModelChange)=\"onTextChange($event, item)\"\r\n                placeholder=\"Please write your comment for this machine skill\">{{item.Comment}}</textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 form-footer\">\r\n            <button (click)=\"BackHome()\" class=\"btn btn-o btn-cancel\" type=\"button\">\r\n              <span aria-hidden=\"true\">Cancel</span>\r\n            </button>\r\n            <button (click)=\"SubmitEngineer()\" [disabled]=\"ValidateSubmitEngineer()\" style=\"margin-left: 5px;\"\r\n              id=\"addEngineerId\" type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Add Engineer</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { SkillService } from \"./../shared/services/skillservice.service\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TechnicianService } from \"../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { User } from \"../shared/models/user.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userName: string;\r\n  userClaims: User;\r\n  canEdit: boolean = false;\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => result.matches),\r\n      shareReplay()\r\n    );\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private technicianService: TechnicianService,\r\n    private breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.technicianService.getUserClaims().subscribe((data: User) => {\r\n      this.userClaims = data;\r\n      localStorage.setItem(\"UserNo\", this.userClaims.UserId.toString());\r\n      localStorage.setItem(\"UserName\", this.userClaims.UserName);\r\n\r\n      this.userName = localStorage.getItem(\"UserName\");\r\n\r\n      this.skillService\r\n        .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.canEdit = data;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","<body class=\"main\">\r\n  <header>\r\n    <mat-sidenav-container class=\"sidenav-container\">\r\n      <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n        [ngClass]=\"{ hidden: !(isHandset$ | async) }\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n        [opened]=\"(isHandset$ | async) === false\" (click)=\"drawer.toggle()\">\r\n        <mat-toolbar>\r\n          <img class=\"logo\" src=\"assets/img/logo.png\" />\r\n        </mat-toolbar>\r\n        <mat-nav-list>\r\n          <!-- <mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/dashboard\">\r\n            <mat-icon>home</mat-icon>DASHBOARD\r\n          </mat-list-item> -->\r\n          <mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/skill-explaination\">\r\n            <mat-icon>home</mat-icon>SKILL EXPLAINATION\r\n          </mat-list-item>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/list-engineer\">ENGINEERS</a>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/add-skill\">\r\n            <mat-icon>build_circle</mat-icon>MANAGE ENGINEERS\r\n          </a>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/machine-maker\">MACHINE MAKER</a>\r\n\r\n        </mat-nav-list>\r\n      </mat-sidenav>\r\n      <mat-sidenav-content>\r\n        <mat-toolbar>\r\n          <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\r\n            *ngIf=\"isHandset$ | async\">\r\n            <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n          </button>\r\n\r\n          <img class=\"logo\" src=\"assets/img/logo.png\" />\r\n\r\n          <div [ngClass]=\"{hidden: isHandset$ | async }\" class=\"containerflex\">\r\n            <!-- <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/dashboard\">DASHBOARD\r\n            </a> -->\r\n            <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/list-engineer\">SEARCH ENGINEERS</a>\r\n            <a *ngIf=\"canEdit\" mat-list-item routerLinkActive=\"active\" routerLink=\"/home/add-skill\">ADD/MANAGE ENGINEERS</a>           \r\n            <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/machine-maker\">ADD/MANAGE MACHINE MAKER</a>\r\n            <!-- <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/skill-explaination\">HELP \r\n            </a>-->\r\n          </div>\r\n\r\n          <span class=\"example-spacer\"></span>\r\n          <span class=\"header-user-name\">\r\n          </span>\r\n          <button color=\"accent\" matTooltip=\"Logout\" (click)=\"Logout()\" mat-icon-button class=\"example-icon\"\r\n            aria-label=\"Example icon-button with menu icon\">\r\n            <mat-icon>login</mat-icon>\r\n          </button>\r\n        </mat-toolbar>\r\n        <!-- Add Content Here -->\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n  </header>\r\n\r\n\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</body>\r\n","import { AppRoutingModule } from \"./../app-routing.module\";\r\nimport { FilterComponent } from \"./pop-up/filter/filter.component\";\r\nimport { ListEngineerComponent } from \"./list-engineers/list-engineer.component\";\r\nimport { MachineMakerComponent } from \"./machine-maker/machine-maker.component\";\r\nimport { ExplainationComponent } from \"./skillexplaination/explaination.component\";\r\nimport { AuthGuard } from \"./../auth/auth.guard\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { TypeaheadModule, TooltipModule, ModalModule } from \"ngx-bootstrap\";\r\nimport { PaginationModule } from \"ngx-bootstrap\";\r\nimport { AddTechSkillComponent } from \"./engineer-skill/add-engineer.component\";\r\nimport { NgxPrettyCheckboxModule } from \"ngx-pretty-checkbox\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { EngineerDetailsComponent } from \"./engineer-detail/engineer-detail.component\";\r\nimport { UpdateTechSkillComponent } from \"./update-engineer/update-engineer.component\";\r\nimport { MaterialModule } from \"../shared/materials/material-module\";\r\nimport { ConfirmationDialogComponent } from \"./pop-up/confirmation/confirmation.component\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { ListboxModule } from \"primeng/listbox\";\r\nimport { FilterMakerComponent } from \"./pop-up/filter-maker/filter-maker.component\";\r\nimport { DownloadMachineDialogComponent } from \"./pop-up/download-machine/download-machine.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { PrimeModule } from \"../shared/ng-prime/prime.module\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"home\",\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"list-engineer\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent,\r\n      },\r\n      {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n      },\r\n      {\r\n        path: \"skill-explaination\",\r\n        component: ExplainationComponent,\r\n      },\r\n      {\r\n        path: \"machine-maker\",\r\n        component: MachineMakerComponent,\r\n      },\r\n      {\r\n        path: \"list-engineer\",\r\n        component: ListEngineerComponent,\r\n      },\r\n      {\r\n        path: \"add-skill\",\r\n        component: AddTechSkillComponent,\r\n      },\r\n      {\r\n        path: \"engineer-detail/:id\",\r\n        component: EngineerDetailsComponent,\r\n      },\r\n      {\r\n        path: \"update-detail/:id\",\r\n        component: UpdateTechSkillComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"home/dashboard\",\r\n    pathMatch: \"full\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    TypeaheadModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgxPrettyCheckboxModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    ListboxModule,\r\n    PrimeModule\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ExplainationComponent,\r\n    MachineMakerComponent,\r\n    AddTechSkillComponent,\r\n    ListEngineerComponent,\r\n    EngineerDetailsComponent,\r\n    UpdateTechSkillComponent,\r\n    ConfirmationDialogComponent,\r\n    FilterComponent,\r\n    FilterMakerComponent,\r\n    DownloadMachineDialogComponent,\r\n    RegisterComponent\r\n  ],\r\n  entryComponents: [\r\n    ConfirmationDialogComponent,\r\n    FilterComponent,\r\n    FilterMakerComponent,\r\n    DownloadMachineDialogComponent\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n","import { filter, mergeMap } from \"rxjs/operators\";\r\nimport { Stationed } from \"./../../shared/models/Stationed.model\";\r\nimport { FilterModel } from \"./../../shared/models/FilterModel.model\";\r\nimport { Component, OnInit, TemplateRef } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TypeaheadMatch, BsModalService, BsModalRef } from \"ngx-bootstrap\";\r\nimport { DialogService } from \"../../shared/services/dialog.service\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-list-engineer\",\r\n  templateUrl: \"./list-engineer.component.html\",\r\n  styleUrls: [\"./list-engineer.component.css\"],\r\n})\r\nexport class ListEngineerComponent implements OnInit {\r\n  listEngineer: Array<Technician>;\r\n  totalItem: number;\r\n  currentPage: number = 1;\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  selectedProskill: Array<number>;\r\n  selectedMachineSkill: Array<number>;\r\n  listStationed: Array<Stationed>;\r\n  selectedInd: number;\r\n  selectedSta: number;\r\n  dataSource: Observable<any>;\r\n  asyncSelected: string;\r\n  machineDataSource: Observable<any>;\r\n  machineasyncSelected: string;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  isFilter: boolean = false;\r\n  isClear: boolean = false;\r\n  value = \"Clear me\";\r\n  selected = \"1\";\r\n  disableSelect = new FormControl(false);\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n  };\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private modalService: BsModalService,\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    public userService: UserService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.selectedProskill = new Array<number>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.selectedMachineSkill = new Array<number>();\r\n    this.listEngineer = new Array<Technician>();\r\n    this.listStationed = new Array<Stationed>();\r\n    this.filter = new FilterModel();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter.pagenumber = 1;\r\n    this.filter.pagesize = 10;\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.canEdit = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0].IndId;\r\n          this.filter.Industry = this.listIndustries[0].IndId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.technicianService\r\n      .GetListStationedAll(AppSettings.GetQuerySeach(50, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.selectedSta = this.listStationed[0].StationId;\r\n          this.filter.Stationed = this.listStationed[0].StationId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n          this.selectedMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n          this.selectedProskill = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.dataSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.technicianService.SearchTechnicianByName(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n  }\r\n\r\n  GetlistEngineer(){\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  ExportListEngineers(){\r\n    let currentdate = new Date();\r\n    let url = \"http://xcasrvmds001/ReportServer/Pages/ReportViewer.aspx?/LODReport/TSSkillMatrix/rptTechnician&rs:Format=EXCELOPENXML&rs:ClearSession=True&Time=\"+\r\n        currentdate.getDate().toString() +\r\n        (currentdate.getMonth() + 1).toString() +\r\n        currentdate.getFullYear().toString() +\r\n        currentdate.getMilliseconds().toString();\r\n\r\n        this.spinner.show();\r\n    this.technicianService\r\n        .DownloadTechniciansReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        .subscribe(\r\n          (blob) => {\r\n            FileSaver.saveAs(blob, \"Technician-skills-matrix\" + \".xlsx\");\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (error) => {\r\n            console.log(\"Something went wrong\");\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.spinner.show();\r\n    this.currentPage = event.page;\r\n    if (this.isFilter) {\r\n      this.spinner.show();\r\n      this.userService.UpdatePageNumber(this.currentPage);\r\n      this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.isClear = true;\r\n          this.isFilter = true;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else {\r\n      this.technicianService\r\n        .GetListEngineer(AppSettings.GetQuerySeach(10, event.page, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.listEngineer = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  openFilerModal() {\r\n    this.filter = this.userService.getTechFilter();\r\n    this.dialogService\r\n      .openDiagnosedDialog(this.filter)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.selected = \"1\";\r\n          this.filter = res;\r\n          this.spinner.show();\r\n          this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n            (data: any) => {\r\n              this.listEngineer = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.isClear = true;\r\n              this.isFilter = true;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.router.navigate([\"home/engineer-detail/\", e.item.TechId]);\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\") {\r\n      //Get list Machine maker\r\n      this.technicianService\r\n        .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.listEngineer = data.objects;\r\n            this.totalItem = data.totalItem;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  gotoAddEngineer() {\r\n    this.router.navigate([\"home/add-skill\"]);\r\n  }\r\n\r\n  ClearFilter() {\r\n    this.spinner.show();\r\n    this.selected = \"1\";\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.isClear = false;\r\n          this.isFilter = false;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  SubmitFilter() {\r\n    this.spinner.show();\r\n    this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n      (data: any) => {\r\n        this.listEngineer = data.objects;\r\n        this.totalItem = data.totalItem;\r\n        this.isClear = true;\r\n        this.spinner.hide();\r\n        this.filter = new FilterModel();\r\n        this.filter.professionals = new Array<number>();\r\n        this.filter.machineSkills = new Array<number>();\r\n        this.filter.pagenumber = 1;\r\n        this.filter.pagesize = 10;\r\n        this.filter.Industry = this.listIndustries[0].IndId;\r\n        this.filter.Stationed = this.listStationed[0].StationId;\r\n        this.modalRef.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  changeTypeaheadMachineLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadMachineOnSelect(e: TypeaheadMatch): void {}\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n}\r\n","<section class=\"container top-container\">\r\n    <div class=\"row form-header\">\r\n      <div class=\"col-12 right-box d-flex\">     \r\n        <div class=\"top-drop\">\r\n          <input class=\"input-icon\" type=\"text\" placeholder=\"&#61442;  Search engineer name\" [(ngModel)]=\"asyncSelected\"\r\n            [typeahead]=\"dataSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n            (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\"\r\n            typeaheadOptionField=\"UserName\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n            name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\" />\r\n          <!-- <mat-form-field class=\"example-form-field\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n            <mat-label>search name</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"asyncSelected\" [typeahead]=\"dataSource\"\r\n              (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\r\n              [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\" typeaheadOptionField=\"UserName\" autocomplete=\"off\"\r\n              (typeaheadNoResults)=\"typeaheadNoResults($event)\" name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\">\r\n          </mat-form-field> -->\r\n        </div>\r\n        <div class=\"d-flex right-box-btn\">\r\n          <div class=\"top-add\">\r\n            <button type=\"button\" class=\"btn btn-default btn-o\" (click)=\"openFilerModal()\"><i\r\n                class=\"fa fa-filter\"></i><span class=\"item-label\">Filters</span>\r\n            </button>\r\n          </div>\r\n          <!-- <div class=\"top-add\" *ngIf=\"canEdit\">\r\n            <button id=\"addId\" (click)=\"gotoAddEngineer()\" type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\"\r\n              data-target=\"#addMachineModal\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Add Engineer</span>\r\n            </button>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [hidden]=\"isFilter\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Select status</mat-label>\r\n        <mat-select (selectionChange)=\"GetlistEngineer()\" [(ngModel)]=\"selected\">\r\n          <mat-option value=\"1\">Active</mat-option>\r\n          <mat-option value=\"2\">Inactive</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <button (click)=\"ExportListEngineers()\" mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a home icon\">\r\n        <mat-icon>get_app</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"table-list table-responsive\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Initial</th>\r\n                <th>Name</th>\r\n                <th>Title</th>\r\n                <th>Industry</th>\r\n                <th>Stationed</th>\r\n                <th>Skills <i class=\"fa fa-info-circle\" data-toggle=\"tooltip\"\r\n                    title=\"More info at skill explanation page\"></i></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"shadow-sm\" *ngFor=\"let item of listEngineer\">\r\n                <td><a [routerLink]=\"['/home/engineer-detail',item.TechId]\">{{item.Initials}}</a></td>\r\n                <td>{{item.DisplayName}}</td>\r\n                <td>{{item.Title}}</td>\r\n                <td>{{item.IndustryName}}</td>\r\n                <td>{{item.StationName}}</td>\r\n                <td>\r\n                  <p><span *ngFor=\"let subitem of item.Professionals;let i = index\"\r\n                      tooltip=\"{{subitem.Explain}}\">{{subitem.SkillCode}}<span\r\n                        *ngIf=\"i < item.Professionals.length -1\">,</span></span></p>\r\n                </td>\r\n                <td class=\"action\"></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <pagination [totalItems]=\"totalItem\" name=\"currentPage\" [(ngModel)]=\"currentPage\"\r\n              (pageChanged)=\"pageChanged($event)\"></pagination>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" *ngIf=\"isClear\" (click)=\"ClearFilter()\"\r\n              class=\"btn btn-secondary pull-right\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>    \r\n  <ng-template #template>\r\n    <div aria-hidden=\"true\" aria-labelledby=\"searchModalLAbel\" class=\"search-modal\" id=\"searchModal\" role=\"dialog\"\r\n      tabindex=\"-1\">\r\n      <form class=\"search-form\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button aria-label=\"Close\" class=\"close\" type=\"button\" (click)=\"modalRef.hide()\"><span aria-hidden=\"true\"><i\r\n                  class=\"fa fa-times-circle\"></i></span></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <h5 class=\"modal-title\" id=\"searchModalLabel\">SEARCH ENGINEER</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Username/Fullname</label>\r\n                  <input name=\"filtername\" [(ngModel)]=\"filter.name\" class=\"form-control\" id=\"username\" type=\"text\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Professional Skills</label>\r\n                  <div class=\"form-check-fix\" *ngFor=\"let item of listProskill\">\r\n                    <p-checkbox (change)=\"changeProskillMachines($event)\" name=\"animation\" [value]=\"item.SkillId\"\r\n                      outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                      {{item.SkillName}}\r\n                    </p-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Machine Skills</label>\r\n                  <div class=\"form-check-fix\" *ngFor=\"let item of listMachineSkill\">\r\n                    <p-checkbox (change)=\"changeSkillMachines($event)\" name=\"animation\" [value]=\"item.MSId\"\r\n                      outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                      {{item.MSCode}}\r\n                    </p-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group option-list\">\r\n                  <label for=\"username\">Industry</label>\r\n                  <select name=\"industry\" class=\"shadow-sm\" [(ngModel)]=\"filter.Industry\"\r\n                    (ngModelChange)='onOptionsSelected($event)'>\r\n                    <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                      {{item.Description}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group option-list\">\r\n                  <label for=\"username\">Stationed</label>\r\n                  <select name=\"stationed\" class=\"shadow-sm\" [(ngModel)]=\"filter.Stationed\"\r\n                    (ngModelChange)='onOptionsStationSelected($event)'>\r\n                    <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                      {{item.StationName}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-o\" data-dismiss=\"modal\" (click)=\"modalRef.hide()\" type=\"button\">Close</button>\r\n            <button class=\"btn btn-default\" (click)=\"SubmitFilter()\" type=\"button\"><i class=\"fa fa-search\"></i>\r\n              Search</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div><!-- Modal End-->\r\n  </ng-template>\r\n</section>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { DialogService } from \"./../../shared/services/dialog.service\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { Industry } from \"./../../shared/models/Industry.model\";\r\nimport { MachinesMaker } from \"./../../shared/ViewModels/MachinesMaker.model\";\r\nimport { JsonMachineMaker } from \"./../../shared/ViewModels/JsonMachineMaker.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n} from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { TypeaheadMatch, BsModalRef, BsModalService } from \"ngx-bootstrap\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport { FilterModel } from \"../../shared/models/FilterModel.model\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\n\r\n@Component({\r\n  selector: \"app-machinemaker\",\r\n  templateUrl: \"./machine-maker.component.html\",\r\n  styleUrls: [\"./machine-maker.component.css\"],\r\n})\r\nexport class MachineMakerComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  listIndustries1: Array<Industry>;\r\n  listIndustries2: Array<Industry>;\r\n  listIndustriesUpdate1: Array<Industry>;\r\n  listIndustriesUpdate2: Array<Industry>;\r\n  jsonIndustry: Array<JsonMachineMaker>;\r\n  listMachineMaker: MachinesMaker;\r\n  dataSource: Observable<any>;\r\n  asyncSelected: string;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  totalItem: number;\r\n  currentPage: number = 1;\r\n  selectedMaker: MachinesMaker;\r\n  listIndustry: Array<Industry>;\r\n  filter = new FilterModel();\r\n  isFilter: boolean = false;\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private spinner: NgxSpinnerService,\r\n    private modalService: BsModalService,\r\n    private changeDetection: ChangeDetectorRef,\r\n    private userService: UserService,\r\n    private technicianService: TechnicianService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.listIndustry = new Array<Industry>();\r\n    this.listIndustries1 = new Array<Industry>();\r\n    this.listIndustries2 = new Array<Industry>();\r\n    this.listIndustriesUpdate1 = new Array<Industry>();\r\n    this.listIndustriesUpdate2 = new Array<Industry>();\r\n    this.jsonIndustry = new Array<JsonMachineMaker>();\r\n    this.listMachineMaker = new MachinesMaker();\r\n    this.selectedMaker = new MachinesMaker();\r\n    this.listMachineMaker.industries = new Array<Industry>();\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n\r\n    // Get list Industry\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          let count = 1;\r\n          this.listIndustry = data.objects;\r\n\r\n          data.objects.forEach((object) => {\r\n            if (count <= 6) {\r\n              this.listIndustries1.push(object);\r\n              this.listIndustriesUpdate1.push(object);\r\n            } else {\r\n              this.listIndustries2.push(object);\r\n              this.listIndustriesUpdate2.push(object);\r\n            }\r\n            count = count + 1;\r\n          });\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.canEdit = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    //Get list Machine maker\r\n    this.skillService\r\n      .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    //Get Source to search maker name\r\n    this.dataSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchMachineMaker(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListIndustriesMachineByKey(\r\n        AppSettings.GetQuerySeach(10, 1, \"\", e.item.MaId)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  openFilerModal() {\r\n    this.filter = this.userService.getMakerFilter();\r\n    this.dialogService\r\n      .openFilterMachineMakerDialog(this.filter)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.filter = res;\r\n          this.spinner.show();\r\n          this.skillService.FilterListMakers(this.filter).subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.isFilter = true;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  OpenDownloadMachineReport(){\r\n    let currentdate = new Date();\r\n    \r\n\r\n    this.dialogService.openDownloadMachineDialog().afterClosed()\r\n    .subscribe((res) => {\r\n      \r\n      if (res) {\r\n        console.log(res.data);\r\n        let url = \"http://xcasrvmds001/ReportServer/Pages/ReportViewer.aspx?/LODReport/TSSkillMatrix/rptMachineMaker\"+\r\n    \"&IndustryID=\"\r\n    +res.data.IndId+\r\n    \"&rs:Format=EXCELOPENXML&rs:ClearSession=True&Time=\"+\r\n        currentdate.getDate().toString() +\r\n        (currentdate.getMonth() + 1).toString() +\r\n        currentdate.getFullYear().toString() +\r\n        currentdate.getMilliseconds().toString();\r\n        // this.spinner.show();\r\n        // this.skillService\r\n        // .DownloadMachinesReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        // .subscribe(\r\n        //   (blob) => {\r\n        //     FileSaver.saveAs(blob, \"Technician-skills-matrix\" + \".xlsx\");\r\n\r\n        //     this.spinner.hide();\r\n        //   },\r\n        //   (error) => {\r\n        //     console.log(\"Something went wrong\");\r\n        //     this.spinner.hide();\r\n        //   }\r\n        // );\r\n        this.spinner.show();\r\n        this.technicianService\r\n        .DownloadTechniciansReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        .subscribe(\r\n          (blob) => {\r\n            FileSaver.saveAs(blob, \"Machine-maker\" + \".xlsx\");\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (error) => {\r\n            console.log(\"Something went wrong\");\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  openConfirmDeleteMachineMaker(makerId: number) {\r\n    this.dialogService\r\n      .openConfirmDialog(\"Are you sure want to delete Maker ?\")\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.spinner.show();\r\n          this.skillService\r\n            .DeleteMaker(AppSettings.GetQuerySeach(10, 1, \"\", makerId))\r\n            .subscribe(\r\n              (data: any) => {\r\n                //Get list Machine maker\r\n                this.toastr.success(\"Delete maker success\");\r\n                this.skillService\r\n                  .GetListIndustriesMachine(\r\n                    AppSettings.GetQuerySeach(10, 1, \"\", 13)\r\n                  )\r\n                  .subscribe(\r\n                    (data: any) => {\r\n                      this.jsonIndustry = data.objects;\r\n                      this.totalItem = data.totalItem;\r\n                      this.spinner.hide();\r\n                    },\r\n                    (err: HttpErrorResponse) => {\r\n                      this.spinner.hide();\r\n                    }\r\n                  );\r\n              },\r\n              (err: HttpErrorResponse) => {\r\n                this.spinner.hide();\r\n                this.toastr.error(err.error);\r\n              }\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\") {\r\n      //Get list Machine maker\r\n      this.skillService\r\n        .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.jsonIndustry = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.spinner.show();\r\n\r\n    this.skillService.AddMachineMaker(this.listMachineMaker).subscribe(\r\n      (data: any) => {\r\n        //Get list Machine maker\r\n        this.skillService\r\n          .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n          .subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        //end get list\r\n      },\r\n      (err: HttpErrorResponse) => {}\r\n    );\r\n  }\r\n\r\n  UpdateMaker() {\r\n    this.spinner.show();\r\n\r\n    this.skillService.UpdateMakerIndustry(this.selectedMaker).subscribe(\r\n      (data: any) => {\r\n        //Get list Machine maker\r\n        this.toastr.success(\"Update machine skill for technician success\");\r\n        this.skillService\r\n          .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n          .subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        //end get list\r\n        this.modalRef.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n        this.toastr.error(err.error);\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, makerId: number) {\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetSelectedMachineMaker(AppSettings.GetQuerySeach(10, 1, \"\", makerId))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.modalRef = this.modalService.show(template);\r\n          this.selectedMaker = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  CheckCondition(eve: any) {\r\n    let number = this.selectedMaker.industries.findIndex((x) => x.IndId == eve);\r\n    if (number != -1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.currentPage = event.page;\r\n    this.userService.UpdatePageNumberOfMachine(this.currentPage);\r\n    if (this.isFilter) {\r\n      this.skillService.FilterListMakers(this.filter).subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.isFilter = true;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else {\r\n      this.skillService\r\n        .GetListIndustriesMachine(\r\n          AppSettings.GetQuerySeach(10, this.currentPage, \"\", 13)\r\n        )\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.jsonIndustry = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  changeSkillMachines(event: PrettyCheckBoxChange) {\r\n    let id = parseInt(event.value);\r\n\r\n    if (event.checked) {\r\n      let industry = new Industry();\r\n      industry.IndId = id;\r\n      this.selectedMaker.industries.push(industry);\r\n    } else {\r\n      this.selectedMaker.industries.splice(\r\n        this.selectedMaker.industries.findIndex((x) => x.IndId == id),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  ClearFilter() {\r\n    this.isFilter = false;\r\n    this.currentPage = 1;\r\n    this.skillService\r\n      .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  onFilterChange(eve: any, model: Industry) {\r\n    if (eve.target.checked) {\r\n      this.listMachineMaker.industries.push(model);\r\n    } else {\r\n      this.listMachineMaker.industries.splice(\r\n        this.listMachineMaker.industries.findIndex(\r\n          (x) => x.IndId == model.IndId\r\n        ),\r\n        1\r\n      );\r\n    }\r\n  }\r\n}\r\n","<main>\r\n  <section class=\"container top-container\">\r\n    <form>\r\n      <div class=\"row form-header\">\r\n        <div class=\"col-12 right-box d-flex\">\r\n          <div class=\"top-drop\">\r\n            <input class=\"input-icon\" type=\"text\" placeholder=\"&#61442;  Search machine maker\"\r\n              [(ngModel)]=\"asyncSelected\" [typeahead]=\"dataSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n              (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\"\r\n              typeaheadOptionField=\"MakerName\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n              name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\" />\r\n          </div>\r\n          <div class=\"d-flex right-box-btn\">\r\n            <div class=\"top-add\">\r\n              <button type=\"button\" class=\"btn btn-default btn-o\" (click)=\"openFilerModal()\"><i\r\n                  class=\"fa fa-filter\"></i><span class=\"item-label\">Filters</span>\r\n              </button>\r\n            </div>\r\n           \r\n            <div class=\"top-add\" *ngIf=\"canEdit\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#addMachineModal\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"table-list table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Maker Name</th>\r\n                  <th>Industry</th>\r\n                  <th>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start end\" > <button style=\"padding-top: 10px;\" matTooltip=\"Download list machine/maker\" (click)=\"OpenDownloadMachineReport()\" mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\r\n                      <mat-icon>get_app</mat-icon>\r\n                    </button></div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr class=\"shadow-sm\" *ngFor=\"let item of jsonIndustry\">\r\n                  <td>{{ item.MakerName }}</td>\r\n                  <td>{{ item.industries }}</td>\r\n                  <td class=\"action\">\r\n                    <button *ngIf=\"canEdit\" (click)=\"openModal(template, item.MaId)\" mat-icon-button\r\n                      aria-label=\"Example icon-button with a heart icon\">\r\n                      <mat-icon class=\"icon-title green-text\">edit</mat-icon>\r\n                    </button>\r\n                    <button *ngIf=\"canEdit\" (click)=\"openConfirmDeleteMachineMaker(item.MaId)\" mat-icon-button\r\n                      aria-label=\"Example icon-button with a heart icon\">\r\n                      <mat-icon class=\"icon-title red-text\">delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <pagination [totalItems]=\"totalItem\" name=\"currentPage\" [(ngModel)]=\"currentPage\"\r\n              (pageChanged)=\"pageChanged($event)\"></pagination>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" *ngIf=\"isFilter\" (click)=\"ClearFilter()\"\r\n              class=\"btn btn-secondary pull-right\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <!-- Modal -->\r\n    <div class=\"modal fade search-modal\" id=\"addMachineModal\" tabindex=\"-1\" role=\"dialog\"\r\n      aria-labelledby=\"searchModalLAbel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"search-form\" #machinemakerForm=\"ngForm\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"modal-title\" id=\"searchModalLabel\">\r\n                    ADD MACHINE MAKER\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"machineMaker\">Machine/Maker Name</label>\r\n                    <input class=\"form-control\" name=\"MakerName\" id=\"machineMaker\" #MakerName=\"ngModel\" required\r\n                      [(ngModel)]=\"listMachineMaker.MakerName\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Description</label>\r\n                    <textarea class=\"form-control\" id=\"desc\" name=\"MakerDescription\" #MakerDescription=\"ngModel\"\r\n                      required [(ngModel)]=\"listMachineMaker.MakerDescription\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Industry</label>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-check\" *ngFor=\"let item of listIndustries1\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"pharma\"\r\n                            (change)=\"onFilterChange($event, item)\" />\r\n                          <label class=\"form-check-label\" for=\"pharma\">{{\r\n                            item.Description\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-check\" *ngFor=\"let item of listIndustries2\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"oilgas\"\r\n                            (change)=\"onFilterChange($event, item)\" />\r\n                          <label class=\"form-check-label\" for=\"oilgas\">{{\r\n                            item.Description\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-o\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button [disabled]=\"\r\n                  !machinemakerForm.form.valid ||\r\n                  listMachineMaker.industries.length < 1\r\n                \" (click)=\"onSubmit()\" id=\"addNewId\" type=\"submit\" data-dismiss=\"modal\" class=\"btn btn-default\">\r\n                <i class=\"fa fa-plus\"></i> Add machine\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <!-- Modal End-->\r\n\r\n    <!-- Modal -->\r\n\r\n    <ng-template #template>\r\n      <div class=\"search-modal\" id=\"addMachineModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"searchModalLAbel\"\r\n        aria-hidden=\"true\">\r\n        <form class=\"search-form\" #UpdatemachinemakerForm=\"ngForm\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n                <span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"modal-title\" id=\"searchModalLabel\">\r\n                    UPDATE MACHINE MAKER\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"machineMaker\">Machine/Maker Name</label>\r\n                    <input class=\"form-control\" name=\"MakerName\" id=\"machineMaker\" #MakerName=\"ngModel\" required\r\n                      [(ngModel)]=\"selectedMaker.MakerName\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Description</label>\r\n                    <textarea class=\"form-control\" id=\"desc\" name=\"MakerDescription\" #MakerDescription=\"ngModel\"\r\n                      required [(ngModel)]=\"selectedMaker.MakerDescription\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Industry</label>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div *ngFor=\"let item of listIndustriesUpdate1\">\r\n                          <p-checkbox name=\"animation\" (change)=\"changeSkillMachines($event)\"\r\n                            [checked]=\"CheckCondition(item.IndId)\" [value]=\"item.IndId\" outline=\"true\" shape=\"curve\"\r\n                            color=\"primary\" animation=\"smooth\">\r\n                            {{ item.Description }}\r\n                          </p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div *ngFor=\"let item of listIndustriesUpdate2\">\r\n                          <p-checkbox name=\"animation\" (change)=\"changeSkillMachines($event)\"\r\n                            [checked]=\"CheckCondition(item.IndId)\" [value]=\"item.IndId\" outline=\"true\" shape=\"curve\"\r\n                            color=\"primary\" animation=\"smooth\">\r\n                            {{ item.Description }}\r\n                          </p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" (click)=\"modalRef.hide()\" class=\"btn btn-o\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button [disabled]=\"\r\n                  !UpdatemachinemakerForm.form.valid ||\r\n                  selectedMaker.industries.length < 1\r\n                \" (click)=\"UpdateMaker()\" id=\"addNewId\" type=\"submit\" data-dismiss=\"modal\" class=\"btn btn-default\">\r\n                <i class=\"fa fa-plus\"></i> Update machine\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Modal End-->\r\n  </section>\r\n</main>\r\n<ngx-spinner bdOpacity=\"0.6\" bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\">Loading...</p>\r\n</ngx-spinner>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { OnInit,Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-pnf',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class GeneralPageNotFoundComponent implements OnInit {\r\n  isRemember:boolean=false;\r\n  isLoginError : boolean = false;\r\n  errormes :string;\r\n  max: number = 10;\r\n  rate: number = 0;\r\n  isReadonly: boolean = false;\r\n\r\n  overStar: number | undefined;\r\n  percent: number;\r\n \r\n  hoveringOver(value: number): void {\r\n    this.overStar = value;\r\n    this.percent = (value / this.max) * 100;\r\n  }\r\n \r\n  resetStar(): void {\r\n    this.overStar = void 0;\r\n  }\r\n\r\n\r\n  constructor(private router : Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<div class=\"main\">\r\n        <div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 355\">\r\n        <g id=\"ocean\">\r\n          <path id=\"sky\" class=\"st0\" d=\"M0 0h1000v203.1H0z\"/>\r\n          <linearGradient id=\"water_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"500\" y1=\"354\" x2=\"500\" y2=\"200.667\">\r\n            <stop offset=\"0\" stop-color=\"#fff\"/>\r\n            <stop offset=\"1\" stop-color=\"#b3dcdf\"/>\r\n          </linearGradient>\r\n          <path id=\"water\" fill=\"url(#water_1_)\" d=\"M0 200.7h1000V354H0z\"/>\r\n          <path id=\"land\" class=\"st0\" d=\"M0 273.4h1000V354H0z\"/>\r\n          <g id=\"bumps\">\r\n            <path class=\"st0\" d=\"M0 275.2s83.8-28 180-28 197 28 197 28H0z\"/>\r\n          <path class=\"st0\" d=\"M377 275.2s54.7-28 117.5-28 128.6 28 128.6 28H377z\"/>\r\n          <path class=\"st0\" d=\"M623.2 275.2s83.7-28 179.9-28 196.9 28 196.9 28H623.2z\"/>\r\n            <path class=\"st0\" d=\"M-998 275.2s83.8-28 180-28 197 28 197 28h-377z\"/>\r\n            <path class=\"st0\" d=\"M-621 275.2s54.7-28 117.5-28 128.6 28 128.6 28H-621z\"/>\r\n            <path class=\"st0\" d=\"M-374.8 275.2s83.7-28 179.9-28S2 275.2 2 275.2h-376.8z\"/>\r\n          </g>\r\n        </g>\r\n        <g id=\"tracks\">\r\n          <path class=\"st2\" d=\"M9.8 282.4h-3L0 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M19.8 282.4h-3L10 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M29.8 282.4h-3L20 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M39.8 282.4h-3L30 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M49.8 282.4h-3L40 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M59.8 282.4h-3L50 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M69.8 282.4h-3L60 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M79.8 282.4h-3L70 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M89.8 282.4h-3L80 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M99.8 282.4h-3L90 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M109.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M119.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M129.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M139.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M149.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M159.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M169.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M179.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M189.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M199.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M209.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M219.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M229.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M239.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M249.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M259.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M269.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M279.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M289.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M299.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M309.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M319.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M329.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M339.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M349.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M359.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M369.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M379.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M389.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M399.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M409.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M419.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M429.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M439.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M449.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M459.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M469.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M479.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M489.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M499.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M1000 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M990 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M980 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M970 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M960 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M950 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M940 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M930 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M920 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M910 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M900 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M890 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M880 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M870 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M860 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M850 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M840 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M830 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M820 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M810 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M800 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M790 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M780 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M770 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M760 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M750 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M740 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M730 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M720 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M710 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M700 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M690 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M680 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M670 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M660 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M650 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M640 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M630 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M620 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M610 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M600 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M590 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M580 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M570 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M560 282.4h-3l-6.8 25.2h3z\"/>\r\n          <g>\r\n            <path class=\"st2\" d=\"M-490.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-480.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-470.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-460.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-450.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-440.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-430.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-420.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-410.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-400.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-390.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-380.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-370.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-360.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-350.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-340.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-330.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-320.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-310.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-300.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-290.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-280.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-270.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-260.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-250.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-240.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-230.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-220.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-210.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-200.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-190.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-180.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-170.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-160.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-150.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-140.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-130.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-120.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-110.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-100.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-90.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-80.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-70.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-60.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-50.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-40.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-30.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-20.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-10.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M500 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M490 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M480 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M470 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M460 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M450 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M440 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M430 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M420 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M410 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M400 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M390 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M380 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M370 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M360 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M350 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M340 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M330 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M320 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M310 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M300 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M290 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M280 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M270 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M260 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M250 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M240 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M230 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M220 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M210 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M200 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M190 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M180 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M170 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M160 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M150 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M140 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M130 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M120 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M110 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M100 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M90 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M80 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M70 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M60 282.4h-3l-6.8 25.2h3z\"/>\r\n          </g>\r\n          <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st3\" d=\"M-499.5 300.2H1000v5.1H-499.5z\"/>\r\n          <path class=\"st3\" d=\"M-499.5 283.8H1000v2.8H-499.5z\"/>\r\n        </g>\r\n        <g id=\"cloudsAll\">\r\n          <path id=\"cloud1\" class=\"st4\" d=\"M19.5 69.7s-21.3.5-25-12.2c0 0-4.3-21.3 16-21.8 0 0-2.1-12.2 12.2-14.9 0 0 15-3.2 21.3 6.9 0 0 3.6-20.7 17.8-22.3 0 0 24-3 26.6 13.1 0 0 .1 9.5-2.8 13.5 0 0 9.5-15 26.5-4.8 0 0 12.1 7.9 7 20.2 0 0 16 4.8 10.1 18.1 0 0-10.2 8.5-17.1-1.1 0 0-5.5 16-32.5 16 0 0-19.1 2.1-27-13.3 0 0 .5 10.1-13.3 10.6-.1 0-20.3 3.2-19.8-8z\"/>\r\n          <path id=\"cloud3\" class=\"st4\" d=\"M836 132s-18.3 2.1-22.2-4.9c0 0-4.9-11.8 12.5-13.8 0 0-2.5-6.8 9.7-9.6 0 0 12.7-3.1 18.7 2.1 0 0 2-12.2 14-14.3 0 0 16.6-3.3 23.7 2.1 0 0 4.8 3.9 2.4 6.5 0 0 3.1-4.8 18.4-.4 0 0 10.9 3.5 7.2 11 0 0 13.8-1.5 9.7 9.5 0 0-4.1 10.8-15.5 4.8 0 0-3.1 5.6-26.4 7.9 0 0-16.3 2.8-24-5.3 0 0 1 5.7-10.8 7.2-.1.1-17.2 3.6-17.4-2.8z\"/>\r\n          <path id=\"cloud2\" class=\"st4\" d=\"M19.3 159.5s-15.9.6-18.8-5.1c0 0-3.4-9.5 11.7-10.1 0 0-1.7-5.5 9-6.9 0 0 11.2-1.7 16 2.8 0 0 2.5-9.4 13.1-10.3 0 0 17.9-1.8 20 5.4 0 0 .2 4.3-2 6.1 0 0 6.9-6.9 19.8-2.6 0 0 9.1 3.4 5.5 9 0 0 6.5 0 4.5 6.7 0 0-2.6 5.6-9.6 1 0 0-4 7.3-24.2 7.7 0 0-14.2 1.3-20.4-5.5 0 0 .5 4.5-9.8 5 0 .1-15 1.8-14.8-3.2z\"/>\r\n          <path id=\"cloud4\" class=\"st4\" d=\"M370.3 109.5s15.9.6 18.8-5.1c0 0 3.4-9.5-11.7-10.1 0 0 1.7-5.5-9-6.9 0 0-11.2-1.7-16 2.8 0 0-2.5-9.4-13.1-10.3 0 0-17.9-1.8-20 5.4 0 0-.2 4.3 2 6.1 0 0-6.9-6.9-19.8-2.6 0 0-9.1 3.4-5.5 9 0 0-12 1.9-7.7 8 0 0 7.5 4 12.8-.2 0 0 4 7.3 24.2 7.7 0 0 14.2 1.3 20.4-5.5 0 0-.5 4.5 9.8 5 0 0 15.1 1.7 14.8-3.3z\"/>\r\n          <path id=\"cloud5\" class=\"st4\" d=\"M511.7 12.4s-21.3-.3-25 7c0 0-4.3 12.2 16 12.5 0 0-2.1 7 12.2 8.6 0 0 15 1.8 21.3-4 0 0 3.6 11.9 17.8 12.8 0 0 19.5 1.6 27-4.4 0 0 5-4.4 2.1-6.7 0 0 4.1 4.4 21.2-1.5 0 0 12.1-4.6 7-11.6 0 0 16-2.8 10.1-10.4 0 0-10.2-4.9-17.1.6 0 0-5.5-9.2-32.5-9.2 0 0-19.1-1.2-27 7.6 0 0 .5-5.8-13.3-6.1-.1.2-20.3-1.6-19.8 4.8z\"/>\r\n        </g>\r\n        <g id=\"train\">\r\n          <path fill=\"#b3dcdf\" d=\"M344.5 248.5h507.2v37.8H344.5z\"/>\r\n          <g id=\"wheels\">\r\n            <circle class=\"st6\" cx=\"384.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M384.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"416.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M416.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"469.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M469.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"734.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M734.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"766.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M766.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"821.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M821.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n          </g>\r\n          <path id=\"bracefront\" class=\"st7\" d=\"M383.2 285.6h88.1\"/>\r\n          <path id=\"braceback\" class=\"st7\" d=\"M733.2 285.6h88.1\"/>\r\n          <g id=\"car-layers\">\r\n            <path id=\"car\" class=\"st8\" d=\"M321.8 300.7v-32.4s1.2.7-1.5-2.4v-29.1s3.1-11.6 10.7-21.1c0 0 7.6-12 15.5-17.5h1.3s10.2-4.9 30.9-28h.6s-.9-1.4 0-2.7c0 0 10.1-10.5 21-12.3 0 0 9.4-1.8 20.2-1.8h47.7V151H492v-1.1h10.1v1.1h19v2.2s8.2.9 19.2-4.2c0 0 1.4-1.1 28.8-1.1h291.5v6.8h7.5v2.2s12.2-.6 12.2 9.8V177l-10-.1v57.9s14.9-.5 14.9 10.2c0 0 1 9-14.9 8.9v3.8H719.5s-2.4.1-4.3 3l-15 29s-2.9 5.1-10.8 5.1H504.3s-2.9.1-6.1-5l-13.1-25s-4.5-7.1-11.8-7.1H369v2.4s-3.2 1.3-7.1 8.7L351.4 289s-2.9 6.3-6.9 6.4h-17.8l-4.9 5.3z\"/>\r\n            <path id=\"streamline-outine\" class=\"st8\" d=\"M320.3 236.6s1.4-6.8 4.4-11.3c0 0 .1-2.3 23.2-6.3l78-16.6s103.3-21.1 134.9-26.1c0 0 93.3-16 120.5-17.9 0 0 57.6-4.3 100-4.1h88.9v63.4s-10.3 5.4-17.1 5.3c0 0-305.6 4.9-366.3 8.1 0 0-100.3 4.8-119.1 6.8 0-.1-46.6 1.2-47.4-1.3z\"/>\r\n            <g id=\"window-grate\">\r\n              <path class=\"st9\" d=\"M739.5 182.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 177.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 172.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 167.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 161.4H854v26.1H739.5z\"/>\r\n            </g>\r\n            <path class=\"st9\" d=\"M320.3 257.8h549.9\"/>\r\n            <g id=\"Text\">\r\n              <text transform=\"translate(377.037 230.025)\" class=\"st8 st10\" font-size=\"21\">\r\n                404\r\n              </text>\r\n              <text transform=\"translate(659.5 213.994)\" class=\"st8 st10\" font-size=\"24.025\">\r\n              Page not found.\r\n              </text>\r\n            </g>\r\n            <g id=\"ladders\">\r\n              <g id=\"ladder-f\">\r\n                <path id=\"front-ladder\" class=\"st8\" d=\"M433.8 258.4h17.8v34.8h-17.8z\"/>\r\n                <path id=\"fb-rung\" class=\"st9\" d=\"M433.8 281.1h17.7\"/>\r\n                <path id=\"ft-rung\" class=\"st9\" d=\"M433.8 268.6h17.7\"/>\r\n              </g>\r\n              <g id=\"ladder-b\">\r\n                <path id=\"ladder-back\" class=\"st8\" d=\"M851.8 257.8h17.8v34.8h-17.8z\"/>\r\n                <path id=\"bt-rung\" class=\"st9\" d=\"M851.8 268.6h17.7\"/>\r\n                <path id=\"bb-rung\" class=\"st9\" d=\"M851.8 281.1h17.7\"/>\r\n              </g>\r\n            </g>\r\n            <path id=\"window-front\" class=\"st8\" d=\"M350.5 196.4s-.4 3.9 15.2 4.3l32.3-30.3s-18.2 1.1-19-.8l-28.5 26.8z\"/>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n        </div>\r\n      </div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n@Component({\r\n  selector: \"app-confirmation-dialog\",\r\n  templateUrl: \"./confirmation.component.html\",\r\n  styleUrls: [\"./confirmation.component.css\"],\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>\r\n  ) {}\r\n  ngOnInit() {}\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n  <p class=\"text-center\">{{data.message}}</p>\r\n</div>\r\n<br>\r\n<div mat-dialog-actions class=\"confirm-dialog\">\r\n  <button mat-flat-button (click)=\"closeDialog()\" class=\"no-button\" [mat-dialog-close]=\"false\">NO</button>\r\n  <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"true\">YES</button>\r\n</div>\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {MatSelectModule} from '@angular/material/select'\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\n\r\n@Component({\r\n  selector: \"app-download-machine-dialog\",\r\n  templateUrl: \"./download-machine.component.html\",\r\n  styleUrls: [\"./download-machine.component.css\"],\r\n})\r\n\r\nexport class DownloadMachineDialogComponent implements OnInit {\r\n    listIndustries = new Array<Industry>()\r\n    selected = new Industry();\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<DownloadMachineDialogComponent>,\r\n    public skillService: SkillService,\r\n    private spinner: NgxSpinnerService,\r\n  ) {}\r\n  ngOnInit() {\r\n    this.skillService\r\n    .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n    .subscribe(\r\n      (res: any) => {\r\n        this.listIndustries = res.objects;\r\n        this.selected = this.listIndustries[0];\r\n        this.spinner.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  save(){\r\n      this.dialogRef.close({data: this.selected})\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    <mat-toolbar color=\"primary\">\r\n        <span class=\"fill-remaining-space text-center\">DOWNLOAD MACHINE MAKER</span>\r\n        <button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n      <div class=\"header-download\" fxLayout=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-between stretch\">\r\n        <p class=\"text-center\">Please choose Industry of Machine Macker</p>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Select an industry</mat-label>\r\n            <mat-select [(value)]=\"selected\" cdkFocusInitial>\r\n                <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                    {{industry.Description}}\r\n                  </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n      </div>\r\n    \r\n  </div>\r\n  <br>\r\n  <div mat-dialog-actions class=\"confirm-dialog\">\r\n    <div class=\"col-md-12 text-center footer-group\">\r\n        <button mat-flat-button (click)=\"closeDialog()\" class=\"no-button\" [mat-dialog-close]=\"false\">Cancel</button>\r\n        <button mat-flat-button color=\"primary\" (click)=\"save()\">Download</button>\r\n    </div> \r\n  </div>\r\n  ","import { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MachinesMaker } from \"./../../../shared/ViewModels/MachinesMaker.model\";\r\nimport { OnInit, Component, Inject } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\nimport { FilterModel } from \"../../../shared/models/FilterModel.model\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { TechnicianService } from \"../../../shared/services/technicianservice.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { debounceTime, finalize, switchMap, tap } from \"rxjs/operators\";\r\nimport { AbstractControl, FormControl, ValidatorFn } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserService } from \"../../../shared/services/user.service\";\r\nimport { MatListOption, MatSelectionListChange } from \"@angular/material/list\";\r\n@Component({\r\n  selector: \"app-filter-maker\",\r\n  templateUrl: \"./filter-maker.component.html\",\r\n  styleUrls: [\"./filter-maker.component.css\"],\r\n})\r\nexport class FilterMakerComponent implements OnInit {\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listIndustries1 = new Array<Industry>();\r\n  listIndustries2 = new Array<Industry>();\r\n  searchMoviesCtrl = new FormControl();\r\n  filteredMovies: Array<MachinesMaker>;\r\n  filteredOptions: Observable<MachinesMaker[]>;\r\n  isLoading = false;\r\n  errorMsg: string;\r\n  value = \"\";\r\n  selectedCategories: any[];\r\n\r\n  selectedMachine = new MachinesMaker();\r\n  constructor(\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    private userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<FilterMakerComponent>\r\n  ) {}\r\n  ngOnInit() {\r\n    this.listIndustries = new Array<Industry>();\r\n\r\n    this.filter = new FilterModel();\r\n    this.filteredMovies = new Array<MachinesMaker>();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter = this.data.model;\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listIndustries1 = this.listIndustries.slice(\r\n            1,\r\n            this.listIndustries.length / 2 + 1\r\n          );\r\n          this.listIndustries2 = this.listIndustries.filter(\r\n            (x) => this.listIndustries1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    this.searchMoviesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap((token: string) =>\r\n          this.skillService\r\n            .SearchMachineMaker(AppSettings.GetQuerySeach(10, 1, token))\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              })\r\n            )\r\n        )\r\n      )\r\n      .subscribe((data: MachinesMaker[]) => {\r\n        if (data == undefined) {\r\n          this.filteredMovies = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = data;\r\n        }\r\n      });\r\n\r\n    this.searchMoviesCtrl.setValue(\"Nancy\");\r\n  }\r\n\r\n  UpdateListIndustry(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listIndustry.push(event.option.value.IndId);\r\n    } else {\r\n      this.filter.listIndustry.splice(\r\n        this.filter.listIndustry.indexOf(event.option.value.IndId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewMakerFilter(this.filter);\r\n  }\r\n\r\n  IndustriesSelected(value: Industry) {\r\n    return this.filter.listIndustry.indexOf(value.IndId) === -1 ? false : true;\r\n  }\r\n\r\n  displayFn(state) {\r\n    return state.MakerName;\r\n  }\r\n\r\n  onOptionsSelected(event) {\r\n    this.filter.Industry = event;\r\n  }\r\n\r\n  onOptionsStationSelected(event) {\r\n    this.filter.Stationed = event;\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close(this.filter);\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\nexport function forbiddenNamesValidator(Services: any[]): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const index = Services.findIndex((Service) => {\r\n      return new RegExp(\"^\" + Service.MakerName + \"$\").test(control.value);\r\n    });\r\n    return index < 0 ? { forbiddenNames: { value: control.value } } : null;\r\n  };\r\n}\r\n\r\nexport function RequireMatch(control: AbstractControl) {\r\n  const selection: any = control.value;\r\n  if (typeof selection === \"string\") {\r\n    return { incorrect: true };\r\n  }\r\n  return null;\r\n}\r\n","<div mat-dialog-content>\r\n  <mat-toolbar color=\"primary\">\r\n    <span class=\"fill-remaining-space text-center\"></span>\r\n    <div\r\n        fxLayout=\"row\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"end center\"\r\n      ><button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar>\r\n  <div fxLayout=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-between stretch\">\r\n    <!-- full name -->\r\n    <div class=\"working-time\" fxFlex=\"100\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input matInput [(ngModel)]=\"filter.name\" placeholder=\"Machine Maker Name\" cdkFocusInitial />\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-selection-list (selectionChange)=\"UpdateListIndustry($event)\" #Industry1 fxFlex=\"50\" fxLayout=\"column\"\r\n        fxLayoutAlign=\"start center\">\r\n        <mat-list-option color=\"primary\" checkboxPosition=\"before\" [selected]=\"IndustriesSelected(item)\"\r\n          *ngFor=\"let item of listIndustries1\" [value]=\"item\">\r\n          {{ item.Description }}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n      <mat-selection-list (selectionChange)=\"UpdateListIndustry($event)\" #Industry2 fxFlex=\"50\" fxLayout=\"column\"\r\n        fxLayoutAlign=\"start center\">\r\n        <mat-list-option color=\"primary\" checkboxPosition=\"before\" *ngFor=\"let item of listIndustries2\"\r\n          [selected]=\"IndustriesSelected(item)\" [value]=\"item\">\r\n          {{ item.Description }}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 text-center footer-group\">\r\n    <button mat-raised-button class=\"no-button\" [mat-dialog-close]=\"false\">\r\n      Cancel\r\n    </button>\r\n    <button [disabled]=\"filter.listIndustry.length === 0 || filter.name === null\" mat-raised-button color=\"primary\"\r\n      type=\"button\" class=\"button\" (click)=\"save()\">\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MachinesMaker } from \"./../../../shared/ViewModels/MachinesMaker.model\";\r\nimport { OnInit, Component, Inject } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\n\r\nimport { FilterModel } from \"../../../shared/models/FilterModel.model\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { ProfessionalSkill } from \"../../../shared/models/ProfessionalSkill.model\";\r\nimport { MachineSkill } from \"../../../shared/models/MachineSkill.model\";\r\nimport { Stationed } from \"../../../shared/models/Stationed.model\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { TechnicianService } from \"../../../shared/services/technicianservice.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { debounceTime, finalize, switchMap, tap } from \"rxjs/operators\";\r\nimport { AbstractControl, FormControl, ValidatorFn } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserService } from \"../../../shared/services/user.service\";\r\nimport { MatListOption, MatSelectionListChange } from \"@angular/material/list\";\r\n@Component({\r\n  selector: \"app-filter\",\r\n  templateUrl: \"./filter.component.html\",\r\n  styleUrls: [\"./filter.component.css\"],\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  listStationed: Array<Stationed>;\r\n  list1 = new Array<Stationed>();\r\n  list2 = new Array<Stationed>();\r\n  listIndustries1 = new Array<Industry>();\r\n  listIndustries2 = new Array<Industry>();\r\n  machineSelection = new Array<MatListOption>();\r\n  proskillSelection = new Array<MatListOption>();\r\n  searchMoviesCtrl = new FormControl();\r\n  filteredMovies: Array<MachinesMaker>;\r\n  filteredOptions: Observable<MachinesMaker[]>;\r\n  isLoading = false;\r\n  errorMsg: string;\r\n  value = \"\";\r\n  selectedCategories: any[];\r\n\r\n  selectedMachine = new MachinesMaker();\r\n  constructor(\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    private userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<FilterComponent>\r\n  ) {}\r\n  ngOnInit() {\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.listStationed = new Array<Stationed>();\r\n    this.filter = new FilterModel();\r\n    this.filteredMovies = new Array<MachinesMaker>();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter = this.data.model;\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listIndustries1 = this.listIndustries.slice(\r\n            1,\r\n            this.listIndustries.length / 2 + 1\r\n          );\r\n          this.listIndustries2 = this.listIndustries.filter(\r\n            (x) => this.listIndustries1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    this.searchMoviesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap((token: string) =>\r\n          this.skillService\r\n            .SearchMachineMaker(AppSettings.GetQuerySeach(10, 1, token))\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              })\r\n            )\r\n        )\r\n      )\r\n      .subscribe((data: MachinesMaker[]) => {\r\n        if (data == undefined) {\r\n          this.filteredMovies = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = data;\r\n        }\r\n      });\r\n\r\n    this.searchMoviesCtrl.setValue(\"Nancy\");\r\n\r\n    this.spinner.show();\r\n    this.technicianService\r\n      .GetListStationedAll(AppSettings.GetQuerySeach(50, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.list1 = this.listStationed.slice(\r\n            1,\r\n            this.listStationed.length / 2 + 1\r\n          );\r\n          this.list2 = this.listStationed.filter(\r\n            (x) => this.list1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    // if (this.filter.makerId != 0 || this.filter.makerId != null) {\r\n    //   this.skillService\r\n    //     .GetSelectedMachineMaker(\r\n    //       AppSettings.GetQuerySeach(10, 1, \"\", this.filter.makerId)\r\n    //     )\r\n    //     .subscribe(\r\n    //       (data: MachinesMaker[]) => {\r\n    //         this.selectedMachine = data[0];\r\n    //         this.filteredMovies = data;\r\n\r\n    //         this.spinner.hide();\r\n    //       },\r\n    //       (err: HttpErrorResponse) => {\r\n    //         this.spinner.hide();\r\n    //       }\r\n    //     );\r\n    // }\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  UpdateStationed(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listStationed.push(event.option.value.StationId);\r\n    } else {\r\n      this.filter.listStationed.splice(\r\n        this.filter.listStationed.indexOf(event.option.value.StationId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  UpdateListIndustry(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listIndustry.push(event.option.value.IndId);\r\n    } else {\r\n      this.filter.listIndustry.splice(\r\n        this.filter.listIndustry.indexOf(event.option.value.IndId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  StationedSelected(value: Stationed) {\r\n    return this.filter.listStationed.indexOf(value.StationId) === -1\r\n      ? false\r\n      : true;\r\n  }\r\n\r\n  IndustriesSelected(value: Industry) {\r\n    return this.filter.listIndustry.indexOf(value.IndId) === -1 ? false : true;\r\n  }\r\n\r\n  displayFn(state) {\r\n    return state.MakerName;\r\n  }\r\n\r\n  onMachineSkillChanged(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.machineSkills.push(event.option.value.MSId);\r\n    } else {\r\n      this.filter.machineSkills.splice(\r\n        this.filter.machineSkills.indexOf(event.option.value.MSId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  onProSkillChanged(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.professionals.push(event.option.value.SkillId);\r\n    } else {\r\n      this.filter.professionals.splice(\r\n        this.filter.professionals.indexOf(event.option.value.SkillId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  changeSkillMachines(event: PrettyCheckBoxChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.filter.machineSkills.push(number);\r\n      this.filter.machineSkillNumber += number;\r\n    } else {\r\n      this.filter.machineSkills.splice(\r\n        this.filter.machineSkills.indexOf(\r\n          this.filter.machineSkills.indexOf(number)\r\n        ),\r\n        1\r\n      );\r\n      this.filter.machineSkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  changeProskillMachines(event: PrettyCheckBoxChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.filter.professionals.push(number);\r\n      this.filter.professionalNumber += number;\r\n    } else {\r\n      this.filter.professionalNumber -= number;\r\n      this.filter.professionals.splice(\r\n        this.filter.professionals.indexOf(\r\n          this.filter.professionals.indexOf(number)\r\n        ),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  MachineIsSelected(value: MachineSkill) {\r\n    return this.filter.machineSkills.indexOf(value.MSId) !== -1;\r\n  }\r\n\r\n  ProSkillIsSelected(value: ProfessionalSkill) {\r\n    return this.filter.professionals.indexOf(value.SkillId) !== -1;\r\n  }\r\n  onOptionsSelected(event) {\r\n    this.filter.Industry = event;\r\n  }\r\n\r\n  onOptionsStationSelected(event) {\r\n    this.filter.Stationed = event;\r\n  }\r\n\r\n  save() {\r\n    if (this.machineSelection.length > 0) {\r\n      this.machineSelection.forEach((element) => {\r\n        this.filter.machineSkills.push(element.value.MSId);\r\n      });\r\n    }\r\n\r\n    if (this.proskillSelection.length > 0) {\r\n      this.proskillSelection.forEach((element) => {\r\n        if (this.filter.professionals.indexOf(element.value.SkillId) === -1) {\r\n          this.filter.professionals.push(element.value.SkillId);\r\n        }\r\n      });\r\n    }\r\n    this.dialogRef.close(this.filter);\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\nexport function forbiddenNamesValidator(Services: any[]): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const index = Services.findIndex((Service) => {\r\n      return new RegExp(\"^\" + Service.MakerName + \"$\").test(control.value);\r\n    });\r\n    return index < 0 ? { forbiddenNames: { value: control.value } } : null;\r\n  };\r\n}\r\n\r\nexport function RequireMatch(control: AbstractControl) {\r\n  const selection: any = control.value;\r\n  if (typeof selection === \"string\") {\r\n    return { incorrect: true };\r\n  }\r\n  return null;\r\n}\r\n","<div mat-dialog-content>\r\n  <mat-toolbar color=\"primary\">\r\n    <span class=\"fill-remaining-space text-center\"></span>\r\n    <div\r\n        fxLayout=\"row\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"end center\"\r\n      ><button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    \r\n  </mat-toolbar>\r\n  <mat-tab-group>\r\n    <mat-tab label=\"Machine/Maker\">\r\n      <div\r\n        fxLayout=\"column\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"space-between stretch\"\r\n      >\r\n        <!-- full name -->\r\n        <div class=\"working-time\" fxFlex=\"100\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"filter.name\"\r\n              placeholder=\"User name/Full name\"\r\n              cdkFocusInitial\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n          <!-- Professional Skills -->\r\n          <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <p class=\"title\">Professional Skills</p>\r\n            <mat-selection-list\r\n              (selectionChange)=\"onProSkillChanged($event)\"\r\n              #proskills\r\n            >\r\n              <mat-list-option\r\n                color=\"primary\"\r\n                [selected]=\"ProSkillIsSelected(proskill)\"\r\n                checkboxPosition=\"before\"\r\n                *ngFor=\"let proskill of listProskill\"\r\n                [value]=\"proskill\"\r\n              >\r\n                {{ proskill.SkillName }}\r\n              </mat-list-option>\r\n            </mat-selection-list>\r\n          </div>\r\n          <!-- Machine SKills -->\r\n          <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <p class=\"title\">Machine Skills</p>\r\n            <mat-selection-list\r\n              (selectionChange)=\"onMachineSkillChanged($event)\"\r\n              #machineskill\r\n            >\r\n              <mat-list-option\r\n                color=\"primary\"\r\n                [selected]=\"MachineIsSelected(machine)\"\r\n                checkboxPosition=\"before\"\r\n                *ngFor=\"let machine of listMachineSkill\"\r\n                [value]=\"machine\"\r\n              >\r\n                {{ machine.MSName }}\r\n              </mat-list-option>\r\n            </mat-selection-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Industry\">\r\n      <div fxFlex=\"100\">\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateListIndustry($event)\"\r\n          #Industry1\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            checkboxPosition=\"before\"\r\n            [selected]=\"IndustriesSelected(item)\"\r\n            *ngFor=\"let item of listIndustries1\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.Description }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateListIndustry($event)\"\r\n          #Industry2\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of listIndustries2\"\r\n            [selected]=\"IndustriesSelected(item)\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.Description }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Stationed\">\r\n      <!-- Stationed -->\r\n      <div fxFlex=\"100\">\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateStationed($event)\"\r\n          #Stationed1\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            [selected]=\"StationedSelected(item)\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of list1\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.StationName }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n        <mat-selection-list\r\n          #Stationed2\r\n          (selectionChange)=\"UpdateStationed($event)\"\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            [selected]=\"StationedSelected(item)\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of list2\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.StationName }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </div>\r\n    </mat-tab>\r\n    \r\n  </mat-tab-group>\r\n\r\n  <div class=\"col-md-12 text-center footer-group\">\r\n    <button mat-raised-button class=\"no-button\" [mat-dialog-close]=\"false\">\r\n      Cancel\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      class=\"button\"\r\n      (click)=\"save()\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport {MenuItem} from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { debounceTime, finalize, startWith, switchMap, tap } from \"rxjs/operators\";\r\nimport { MatAutocompleteActivatedEvent, MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { MachineSkillAssign } from \"../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { Maker } from \"../../shared/models/maker.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  providers: [MessageService],\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  isLinear = false;\r\n  listAssignmachine= new Array<MachineSkillAssign>();\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  searchMachinesCtrl = new FormControl();\r\n  listProskill = new Array<ProfessionalSkill>();\r\n  listStationed = new Array<Stationed>();\r\n  listMachineSkill = new Array<MachineSkill>();\r\n  activeIndex: number = 1;\r\n  userName : string;\r\n  listIndustries= new Array<Industry>();\r\n  filteredMachines: any;\r\n  selectedInd = new  Industry();\r\n  selectedMachine = new MachineSkillAssign();\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['name', 'application', 'comment', 'action'];\r\n  technician = new Technician();\r\n  matcher = new MyErrorStateMatcher();\r\n  isSelectMaker : boolean = false;\r\n  dataSource = new MatTableDataSource<MachineSkillAssign>();\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private techService: TechnicianService,\r\n    private messageService: MessageService,\r\n    private _formBuilder: FormBuilder\r\n  ) {}\r\n  ngOnInit() {\r\n    this.filteredMachines = [];\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.dataSource.data = this.listAssignmachine;\r\n    this.selectedMachine.Maker = new Maker();\r\n    this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.searchMachinesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.filteredMachines = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value =>  this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, value, null, this.selectedInd.IndId)\r\n        )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe(data => {\r\n        if (data == undefined) {\r\n          this.filteredMachines = [];\r\n        } else {\r\n          this.filteredMachines = data;\r\n        }\r\n      });\r\n\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n      \r\n      this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0];\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n      \r\n      \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      Country : ['', Validators.required],\r\n      Email : ['',Validators.required],\r\n      FullName : ['',Validators.required],\r\n      Title : ['',Validators.required],\r\n      Remark: ['',Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  OptionSelectChange(eve: MatCheckboxChange){\r\n    let number = parseInt(eve.source.value);\r\n    if (eve.checked) {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      this.selectedMachine.MachineSkill.push(model);\r\n      this.selectedMachine.SkillNumber += number;\r\n    } else {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      let index = this.selectedMachine.MachineSkill.indexOf(model);\r\n      this.selectedMachine.MachineSkill.splice(index,\r\n        1\r\n      );\r\n      this.selectedMachine.SkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  displayFn(value: any | string): string | undefined {\r\n    let displayValue: string;\r\n    if(value == undefined || value == null) {\r\n      displayValue == '';\r\n    }else{\r\n      displayValue = value.MakerName;\r\n    }\r\n    \r\n    return displayValue;\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    \r\n      this.selectedMachine.Maker.Model = this.secondFormGroup.get('application').value;\r\n      this.selectedMachine.Comment = this.secondFormGroup.get('Description').value;\r\n\r\n      this.listAssignmachine.push(this.selectedMachine);\r\n      this.technician.listAssign.push(this.selectedMachine);\r\n       this.selectedMachine = new MachineSkillAssign();\r\n       this.selectedMachine.Maker = new Maker();\r\n       this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n       this.isSelectMaker = false;\r\n       this.resetMachineAssignments();\r\n       this.searchMachinesCtrl.setValue('');\r\n      this.dataSource.data =  this.listAssignmachine;\r\n  }\r\n\r\n  resetMachineAssignments(){\r\n    this.secondFormGroup.reset();\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  changeProfessionalSkillLevel(event : MatCheckboxChange) : void {\r\n    let number = parseInt(event.source.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  addOption(eve : MatAutocompleteSelectedEvent){\r\n      this.selectedMachine.Maker = eve.option.value;\r\n  }\r\n  RemoveMakerAction(model : MachineSkillAssign){\r\n\r\n      let index = this.listAssignmachine.indexOf(model);\r\n      if(index  != -1){\r\n        this.listAssignmachine.splice(index,1);\r\n      }\r\n      this.dataSource.data =  this.listAssignmachine;\r\n      console.log(this.listAssignmachine);\r\n  }\r\n\r\n  AddBasicInformation(){\r\n    this.technician.DisplayName = this.firstFormGroup.get('FullName').value;\r\n    this.technician.EmailAddress = this.firstFormGroup.get('Email').value;\r\n    this.technician.Title = this.firstFormGroup.get('Title').value;\r\n    this.technician.Remark = this.firstFormGroup.get('Remark').value;\r\n  }\r\n\r\n  SelectMaker(){\r\n    this.isSelectMaker = true; \r\n  }\r\n\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.untouched || control.touched)\r\n    );\r\n  }\r\n}","<p-toast></p-toast>\r\n\r\n<div fxLayout=\"column\" fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around stretch\">\r\n  <h3 class=\"header-title text-center\">Register Form</h3>\r\n\r\n  <!-- registerForm -->\r\n  <div fxFlex=\"100\" xLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-horizontal-stepper [linear]=\"false\" #stepper class=\"form-register\">\r\n      <mat-step [stepControl]=\"firstFormGroup\">\r\n        \r\n        <form [formGroup]=\"firstFormGroup\" >\r\n          <ng-template matStepLabel>Fill out basic information</ng-template>\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">      \r\n              <p>Please fill in all the engineer details below</p>    \r\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                  <div fxFlex=\"50\">\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Full Name</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"FullName\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['FullName'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"Email\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Email'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"50\">                 \r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Country</mat-label>\r\n                      <mat-select [errorStateMatcher]=\"matcher\" formControlName=\"Country\" required>\r\n                        <mat-option *ngFor=\"let country of listStationed\" [value]=\"country\">\r\n                          {{country.StationName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                       <mat-error *ngIf=\"firstFormGroup.controls['Country'].hasError('required')\">Please choose country</mat-error>\r\n                      \r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Title</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Title\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Title'].valid\r\n              \">\r\n              Required field\r\n            </mat-error>\r\n                    </mat-form-field>                  \r\n                  </div>\r\n                </div>                                         \r\n                <div fxFlex=\"100\">\r\n                  <mat-form-field class=\"form-element\">\r\n                    <mat-label>Remark</mat-label>\r\n                    <textarea formControlName=\"Remark\" [errorStateMatcher]=\"matcher\" [errorStateMatcher]=\"matcher\" matInput placeholder=\"Ex. It makes me feel...\"></textarea>\r\n                    <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Remark'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                                              \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-around center\">\r\n\r\n              </div>              \r\n              \r\n              <p class=\"bold\">Please select engineer professional background</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n                <div *ngFor=\"let item of listProskill\">\r\n                  <mat-checkbox [color]=\"primary\" [value]=\"item.SkillId\" (change)=\"changeProfessionalSkillLevel($event)\">\r\n                    {{item.SkillName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-error class=\"text-center\" *ngIf=\"\r\n                technician.ProSkill === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n                <!-- <button [disabled]=\"!firstFormGroup.valid || technician.ProSkill == 0\" mat-stroked-button color=\"primary\" (click)=\"AddBasicInformation()\" matStepperNext>Next</button> -->\r\n                <button mat-stroked-button color=\"primary\" matStepperNext>Next</button>\r\n              </div>\r\n            </div>        \r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Select Machine Maker\">\r\n        \r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <ng-template matStepLabel>Select Machine Maker</ng-template>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\r\n            <p>Please fill in all the engineer details below</p> \r\n            <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"stretch stretch\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around center\">\r\n                <mat-form-field class=\"form-element\" fxFlex=\"50\">\r\n                  <mat-label>Search Machine Maker</mat-label>\r\n                  <input [disabled]=\"isSelectMaker\" matInput placeholder=\"Search\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"searchMachinesCtrl\">\r\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addOption($event)\" [displayWith]=\"displayFn\">\r\n                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                        <ng-container *ngIf=\"!isLoading\">\r\n                          <mat-option *ngFor=\"let machine of filteredMachines\" [value]=\"machine\">\r\n                            <span><b>{{machine.MakerName}}</b></span>\r\n                          </mat-option>\r\n                        </ng-container>\r\n                      </mat-autocomplete>\r\n                </mat-form-field>   \r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Industry</mat-label>\r\n                  <mat-select [disabled]=\"isSelectMaker\" [(value)]=\"selectedInd\">\r\n                    <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                      {{industry.Description}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  \r\n                </mat-form-field> \r\n                <button mat-raised-button color=\"primary\" (click) = \"SelectMaker()\">Select</button>\r\n                <!-- <button mat-raised-button color=\"primary\" [disabled]=\"selectedMachine.Maker.MaId == 0 || isSelectMaker\" (click) = \"SelectMaker()\">Select</button> -->\r\n              </div>\r\n              <div *ngIf=\"isSelectMaker\">\r\n              <p class=\"text-center\">Please assign machine skill to machine</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n             \r\n                <div *ngFor=\"let item of listMachineSkill\">\r\n                  <mat-checkbox (change)=\"OptionSelectChange($event)\" [value]=\"item.MSId\" [color]=\"primary\" matTooltip=\"{{item.Explain}}\">\r\n                    {{item.MSName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <mat-error class=\"text-center\" *ngIf=\"\r\n              selectedMachine.MachineSkill.length === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">            \r\n                <mat-form-field fxFlex=\"25\">                \r\n                  <mat-label>Application</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"application\"\r\n                         >\r\n                </mat-form-field> \r\n                <mat-form-field fxFlex=\"75\">                \r\n                  <mat-label>Description</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Description\" placeholder=\"Ex. 1 Main St, New York, NY\">\r\n                  <mat-error *ngIf=\"\r\n                !secondFormGroup.controls['Description'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                </mat-form-field> \r\n                <button  (click)=\"AddMachineSkill()\" mat-icon-button  mat-raised-button color=\"primary\" [disabled]=\"!secondFormGroup.valid || selectedMachine.MachineSkill.length === 0\">\r\n                  <mat-icon>done</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button  mat-raised-button>\r\n                    <mat-icon>clear</mat-icon>\r\n                    </button>\r\n              </div> \r\n            </div>\r\n            </div>\r\n            <p>List Machine Maker</p>  \r\n            <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n              <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n              \r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"application\">\r\n                  <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"comment\">\r\n                  <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Action Column -->\r\n                <ng-container matColumnDef=\"action\">\r\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> \r\n                    <button (click)=\"RemoveMakerAction(element)\" matTooltip=\"Remove Machine\" mat mat-icon-button color=\"primary\"\r\n                    aria-label=\"Example icon-button with a heart icon\">\r\n                    <mat-icon>remove_circle</mat-icon>\r\n                  </button>\r\n                  </td>\r\n                </ng-container>\r\n              \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"footer-gr\" fxFlex=\"100\" fxLayoutGap=\"10px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n              <button mat-stroked-button matStepperPrevious>Back</button>\r\n              <button mat-stroked-button matStepperNext>Next</button>\r\n              <!-- <button mat-stroked-button matStepperNext [disabled]=\"listAssignmachine.length === 0\">Next</button> -->\r\n            </div>  \r\n          </div>\r\n             \r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Confirm</ng-template>\r\n        <h4 class=\"font-weight-normal\">Technician Information</h4>\r\n        <mat-divider></mat-divider>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start stretch\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly start\">\r\n            <div fxFlex=\"50\" fxFlexOffset=\"2\">\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>whrhrehrehe</p>\r\n              <p class=\"font-weight-bold\">Email</p>\r\n              <p>erhrehreh</p>\r\n              <p class=\"font-weight-bold\">Title</p>\r\n              <p>erhrehrehreh</p>\r\n            </div>\r\n            <div fxFlex=\"50\">\r\n              <p class=\"font-weight-bold\">Country</p>\r\n              <p>erhrehrehreh</p>\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>ehrehrehrehrehreh</p>\r\n            </div>             \r\n          </div>\r\n          \r\n          <h4 class=\"font-weight-normal\">Machine Maker Information</h4>\r\n          <mat-divider></mat-divider>\r\n          <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n              <!--- Note that these columns can be defined in any order.\r\n                    The actual rendered columns are set as a property on the row definition\" -->\r\n            \r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"application\">\r\n                <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Action Column -->\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef>  </th>\r\n                <td mat-cell *matCellDef=\"let element\"> \r\n                </td>\r\n              </ng-container>\r\n            \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end center\">\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button color=\"primary\" (click)=\"stepper.reset()\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  </div>\r\n  \r\n</div>\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Industry } from '../../shared/models/Industry.model';\r\nimport { SkillService } from '../../shared/services/skillservice.service';\r\nimport { AppSettings } from '../../shared/constant/TSconstands.component';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ProfessionalSkill } from '../../shared/models/ProfessionalSkill.model';\r\nimport { MachineSkill } from '../../shared/models/MachineSkill.model';\r\n\r\n@Component({\r\n  selector: 'app-explaination',\r\n  templateUrl: './explaination.component.html',\r\n})\r\nexport class ExplainationComponent implements OnInit {\r\n    listIndustries : Array<Industry>;\r\n    listProskill :Array<ProfessionalSkill>;\r\n    listMachineSkill :Array<MachineSkill>;\r\n  constructor(private spinner: NgxSpinnerService,private router: Router,public skillService : SkillService) { }\r\n  ngOnInit() {\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    \r\n    this.skillService.GetListIndustries(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listIndustries= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n    })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListMachineSKill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listMachineSkill= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListProskill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n        this.listProskill= data.objects;\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n      })\r\n\r\n  }\r\n\r\n  BackHome(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}","<section class=\"jumbotron\">\r\n  <div class=\"container d-flex justify-content-between\">\r\n    <h1 class=\"text-white\">\r\n      <strong>Skill Explaination</strong>\r\n    </h1>\r\n  </div>\r\n</section>\r\n<section class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>BACKGROUND</strong></p>\r\n      <div class=\"list-skill shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngFor=\"let item of listProskill\">\r\n              <td class=\"code\">{{item.SkillCode}}</td>\r\n              <td class=\"meaning\">{{item.SkillName}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>MACHINE</strong></p>\r\n      <div class=\"list-skill shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngFor=\"let item of listMachineSkill\">\r\n              <td class=\"code\">{{item.MSCode}}</td>\r\n              <td class=\"meaning\">\r\n                <p>\r\n                  {{item.Explain}}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { MachineSkillAssign } from './../../shared/ViewModels/MachineSKillAssign.model';\r\nimport { MachineSkill } from './../../shared/models/MachineSkill.model';\r\nimport { Maker } from './../../shared/models/maker.model';\r\nimport { Industry } from './../../shared/models/Industry.model';\r\nimport { Technician } from './../../shared/models/technician.model';\r\nimport { TechnicianService } from './../../shared/services/technicianservice.service';\r\nimport { ProfessionalSkill } from './../../shared/models/ProfessionalSkill.model';\r\nimport { Observable } from 'rxjs';\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap';\r\nimport { TechMachineIndutry } from '../../shared/models/techmachineind.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PrettyRadioChange, PrettyCheckBoxChange } from 'ngx-pretty-checkbox';\r\nimport { Stationed } from '../../shared/models/Stationed.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-update-skill',\r\n    templateUrl: './update-engineer.component.html',\r\n    styleUrls: ['./update-engineer.component.css']\r\n  })\r\n\r\n  \r\nexport class UpdateTechSkillComponent implements OnInit {\r\n    listIndustries :    Array<Industry>;\r\n    listEnIndustries :    Array<Industry>;\r\n    listStationed  : Array<Stationed>;\r\n    TechMachineIndutry : Array<TechMachineIndutry>;\r\n    listProskill   :    Array<ProfessionalSkill>;\r\n    listAssignmachine : Array<MachineSkillAssign>;\r\n    listMachineSkill : Array<MachineSkill>;\r\n    StationedSource :   Observable<any>;\r\n    userSource :        Observable<any>;\r\n    industrySource:     Observable<any>;\r\n    machinedustrySource: Observable<any>;\r\n    asyncSelected       :string;\r\n    staasyncSelected    :string;\r\n    indasyncSelected    :string;\r\n    maasyncSelected     :string;\r\n\r\n    typeaheadLoading: boolean;\r\n    noResult = false;\r\n    IndResult = false;\r\n    StaResult = false;\r\n    machineNoReuslt=false;\r\n\r\n    technician : Technician;\r\n    selectedInd : number;\r\n    userid:number;\r\n    selectedRelMachine : Maker;\r\n    userName :string;\r\n\r\n  constructor(private toastr: ToastrService,private route: ActivatedRoute,private router: Router,public skillService : SkillService,public techService : TechnicianService,private spinner: NgxSpinnerService) { }\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.userName = localStorage.getItem('UserName');\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.technician = new Technician();;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.listAssignmachine = new Array<MachineSkillAssign>();\r\n    this.TechMachineIndutry = new Array<TechMachineIndutry>();\r\n    this.selectedRelMachine = new Maker();\r\n    \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.userid = parseInt(id);\r\n\r\n    this.techService.GetEngineerDetail(AppSettings.GetQuerySeach(1,1,this.userName,this.userid,)).subscribe((data:any)=>{     \r\n        this.technician= data.objects;\r\n        this.asyncSelected = this.technician.Initials;\r\n        this.staasyncSelected = this.technician.StationName;\r\n        this.indasyncSelected = this.technician.IndustryName;\r\n\r\n        if(!this.technician.CanEdit){\r\n          this.router.navigate(['pagenotfound']);\r\n        }\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListIndustries(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listIndustries= data.objects;\r\n      this.listEnIndustries = data.objects;\r\n      this.selectedInd = this.listIndustries[0].IndId;\r\n      this.spinner.hide();\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListMachineSKill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listMachineSkill= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n        this.techService.GetListStationedEngineer(AppSettings.GetQuerySeach(50,1,this.userName,13,)).subscribe((data:any)=>{     \r\n          this.listStationed= data.objects;         \r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n            this.spinner.hide();\r\n        })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListProskill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n        this.listProskill= data.objects;\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n      })\r\n\r\n\r\n      //Get Source to search Initial\r\n    this.userSource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.asyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.techService.SearchUserByInitial(AppSettings.GetQuerySeach(10,1,token,null,1)))\r\n        ); \r\n\r\n        //Get Source to search maker name\r\n    this.StationedSource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.staasyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.techService.SearchStationed(AppSettings.GetQuerySeach(10,1,token)))\r\n        ); \r\n\r\n\r\n        //Get Source to search maker name\r\n    this.industrySource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.indasyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.skillService.SearchIndustry(AppSettings.GetQuerySeach(10,1,token)))\r\n        ); \r\n\r\n          //Get Source to search maker name\r\n    this.machinedustrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.maasyncSelected);\r\n    })\r\n      .pipe(\r\n        mergeMap((token: string) => this.skillService.SearchMachineMakerByIndustry(AppSettings.GetQuerySeach(10,1,token,null,this.selectedInd)))\r\n      ); \r\n  }\r\n\r\n\r\n  onOptionsSelected(event){\r\n    this.selectedInd = event\r\n   }\r\n\r\n   onOptionsIndSelected(event){\r\n    this.technician.IndustryId = event\r\n   } \r\n   onOptionsStationSelected(event){\r\n    this.technician.StationId = event;\r\n   }\r\n\r\n   onChange(eve : any){\r\n    if(eve == ''|| eve != this.selectedRelMachine.MakerName)\r\n    {\r\n      this.selectedRelMachine = new Maker();\r\n    }\r\n  }\r\n\r\n  CheckConditionMachine(item:number,id:number){\r\n     let number = id & item ;\r\n     let flag = true;\r\n      if(number == 1 || number == id){\r\n        flag = true;\r\n      }\r\n      else{\r\n        flag = false;\r\n      }  \r\n      return flag;\r\n  }\r\n\r\n  onTextChange(eve : string, item:MachineSkillAssign){\r\n    item.Comment = eve;\r\n  }\r\n\r\n\r\n  AddMachineSkill(){\r\n    let checkisesxit = this.technician.listAssign.find(item=>item.Maker.RelMachineId == this.selectedRelMachine.RelMachineId);\r\n    if(checkisesxit !=null){\r\n      this.toastr.error(\"Can not add duplicate Machine\");\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n    }\r\n    else{\r\n      let assignskill = new MachineSkillAssign();\r\n      assignskill.Maker = new Maker();\r\n      assignskill.MachineSkill = new Array<MachineSkill>();\r\n\r\n      assignskill.Maker.MakerName = this.selectedRelMachine.MakerName;\r\n      assignskill.Maker.MaId = this.selectedRelMachine.MaId;\r\n      assignskill.Maker.RelMachineId = this.selectedRelMachine.RelMachineId;\r\n      this.listAssignmachine.push(assignskill);\r\n      this.technician.listAssign.push(assignskill);\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n    }\r\n    \r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if(e){\r\n      this.spinner.show();\r\n    }\r\n    else{\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  RemoveMachineSkill(item : MachineSkillAssign){\r\n      this.technician.listAssign.splice(this.technician.listAssign.findIndex(x=>x.Maker.RelMachineId == x.Maker.RelMachineId),1)\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {       \r\n    this.technician = e.item;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n  }\r\n\r\n  indtypeaheadOnSelect(e: TypeaheadMatch): void {  \r\n    this.technician.IndustryId = e.item.IndId    \r\n  }\r\n\r\n  statypeaheadOnSelect(e: TypeaheadMatch): void {       \r\n   this.technician.StationId = e.item.StationId        \r\n  }\r\n\r\n  matypeaheadOnSelect(e: TypeaheadMatch): void {      \r\n    this.selectedRelMachine = e.item; \r\n  }\r\n  \r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  indtypeaheadNoResults(event: boolean): void {\r\n    this.IndResult = event;\r\n  }\r\n  statypeaheadNoResults(event: boolean): void {\r\n    this.StaResult = event;\r\n  }\r\n\r\n  matypeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  changeOps(event:PrettyRadioChange){\r\n    let number = parseInt(event.value);\r\n    if(event.checked){\r\n      this.technician.ProSkill += number;   \r\n    }\r\n    else{\r\n      this.technician.ProSkill -= number;   \r\n    }\r\n    \r\n  }\r\n\r\n  changeSkillMachines(event:PrettyCheckBoxChange,relMaker:MachineSkillAssign){\r\n    let check = this.technician.listAssign.filter(x=>x.Maker.RelMachineId == relMaker.Maker.RelMachineId)[0];\r\n    if(check !=null){\r\n      let id = parseInt(event.value);\r\n     if(event.checked){\r\n       let machine = new MachineSkill();       \r\n       machine.MSId = id;\r\n       check.MachineSkill.push(machine);\r\n       check.SkillNumber = check.SkillNumber +id;\r\n     }\r\n     else{        \r\n      check.SkillNumber = check.SkillNumber - id;\r\n      check.MachineSkill.splice(check.MachineSkill.findIndex(x=>x.MSId == parseInt(event.value)),1)\r\n     }\r\n   }\r\n  }\r\n\r\n  CheckCondition(eve:any){\r\n      let number = eve & this.technician.ProSkill ;\r\n      if(number == 1 || number == eve){\r\n        return true;\r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n  }\r\n\r\n  SubmitEngineer(){\r\n    this.spinner.show();\r\n    let Userid = parseInt(localStorage.getItem('UserNo'));\r\n      this.technician.UpdatedBy = Userid;\r\n\r\n      this.technician.listAssign.forEach(element => {\r\n        let isexist = this.listAssignmachine.filter(x=>x.Maker.RelMachineId == element.Maker.RelMachineId)[0];\r\n        if(isexist !=null){\r\n            element.Comment = isexist.Comment;\r\n        }\r\n      });\r\n\r\n      this.techService.UpdateTechnicianSkill(this.technician).subscribe((data:any)=>{            \r\n        this.toastr.success(\"Update machine skill for technician success\");\r\n        this.spinner.hide()\r\n        this.technician = new Technician();\r\n        this.technician.listAssign = new Array<MachineSkillAssign>();\r\n        this.asyncSelected = \"\";\r\n        this.indasyncSelected= \"\";\r\n        this.staasyncSelected = \"\";\r\n        this.router.navigate(['home/engineer-detail/',this.userid]);\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n      })   \r\n\r\n  }\r\n\r\n  ValidateSubmitEngineer(){\r\n    let flag = false;\r\n    if(this.technician.listAssign.length < 1){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  BackHome(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}","<section class=\"jumbotron add-form\">\r\n  <div class=\"container d-flex justify-content-between\">\r\n    <h1 class=\"text-white\"><strong>Add Technical Service Engineer</strong></h1><button (click)=\"BackHome()\" id=\"backId\"\r\n      class=\"btn btn-default\" type=\"button\"><i class=\"fa fa-arrow-left\"></i> <span\r\n        class=\"item-label\">Back</span></button>\r\n  </div>\r\n</section>\r\n<div>\r\n  <div class=\"container\">\r\n    <form class=\"form-engineer\">\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Engineer Details</h3>\r\n            <p>Please fill in all the engineer details below</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row info\">\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"initial\">Initial</label>\r\n              <input class=\"form-control input-icon\" disabled=\"true\" id=\"initial\" type=\"text\"\r\n                [(ngModel)]=\"asyncSelected\" [typeahead]=\"userSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"500\"\r\n                typeaheadOptionField=\"Initials\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n                name=\"asyncSelected\" placeholder=\"&#61442; Search User Initial\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"stationed\">Stationed</label>\r\n              <select name=\"stationed\" class=\"form-control\" [disabled]=\"technician.UserName == null\"\r\n                [(ngModel)]=\"technician.StationId\" (ngModelChange)='onOptionsStationSelected($event)'>\r\n                <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                  {{item.StationName}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"industry\">Industry</label>\r\n              <select style=\"margin-top:3px;\" name=\"industry\" class=\"form-control\"\r\n                [disabled]=\"technician.UserName == null\" [(ngModel)]=\"technician.IndustryId\"\r\n                (ngModelChange)='onOptionsIndSelected($event)'>\r\n                <option *ngFor=\"let item of listEnIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Remark</label>\r\n              <textarea class=\"form-control\" id=\"Remark\" name=\"Remark\" [(ngModel)]=\"technician.Remark\"\r\n                type=\"text\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"uname\">Username</label>\r\n              <input class=\"form-control\" id=\"userName\" disabled=\"true\" name=\"userName\"\r\n                [(ngModel)]=\"technician.UserName\" type=\"text\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Full Name</label>\r\n              <input class=\"form-control\" id=\"fullName\" name=\"fullName\" [(ngModel)]=\"technician.DisplayName\"\r\n                type=\"text\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mail\">Email Address</label>\r\n              <input class=\"form-control\" name=\"EmailAddress\" [(ngModel)]=\"technician.EmailAddress\" id=\"emailAdd\"\r\n                type=\"email\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Title</label>\r\n              <input class=\"form-control\" id=\"Title\" name=\"Title\" [(ngModel)]=\"technician.Title\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Professional Background</h3>\r\n            <p>Please select engineer professional background</p>\r\n          </div>\r\n          <div class=\"info eng-background col-12\">\r\n            <div class=\"form-check\" *ngFor=\"let item of listProskill\">\r\n              <p-checkbox name=\"animation\" (change)=\"changeOps($event)\" [checked]=\"CheckCondition(item.SkillId)\"\r\n                [value]=\"item.SkillId\" outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                {{item.SkillName}}\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Machine/Maker Skills</h3>\r\n            <p>Please assign machine skill to each machine</p>\r\n          </div>\r\n          <div class=\"info col-12\">\r\n            <div class=\"add-machine\" >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\"  fxLayoutAlign=\"space-between center\" >\r\n                <div fxFlex=\"35\">\r\n                  <input class=\"input-icon\" placeholder=\"&#61442; Search machine maker\" type=\"text\"\r\n                  [(ngModel)]=\"maasyncSelected\" [typeahead]=\"machinedustrySource\"\r\n                  (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"matypeaheadOnSelect($event)\"\r\n                  [typeaheadOptionsLimit]=\"10\" typeaheadOptionField=\"MakerName\" autocomplete=\"off\"\r\n                  (typeaheadNoResults)=\"matypeaheadNoResults($event)\" name=\"maasyncSelected\"\r\n                  (ngModelChange)=\"onChange($event)\">\r\n                </div>\r\n                <div fxFlex=\"15\">\r\n                  <input class=\"input-icon\" placeholder=\"Model\" type=\"text\" [(ngModel)]=\"selectedRelMachine.Model\" name=\"Model\">\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                  <select class=\"shadow-sm\" style=\"width:100%\" name=\"selectedInd\" [(ngModel)]=\"selectedInd\"\r\n                (ngModelChange)='onOptionsSelected($event)'>\r\n                <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n                </div>\r\n                \r\n                <div fxFlex=\"20\">\r\n                  <button id=\"addRowId\" type=\"button\" class=\"btn btn-default\" (click)=\"AddMachineSkill()\"\r\n                [disabled]=\"selectedRelMachine.MaId == 0\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n                </div>\r\n      \r\n              </div>             \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 section-title\" *ngIf=\"technician.listAssign.length > 0\">\r\n            <br>\r\n            <p><strong>List of Machine/Maker Skills</strong></p>\r\n          </div>\r\n          <div class=\"info col-12\" *ngFor=\"let item of technician.listAssign\">\r\n            <div class=\"selected-machine shadow-sm\">\r\n              <div class=\"btn-icon-group\">\r\n                <button (click)=\"RemoveMachineSkill(item)\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\"><span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span></button>\r\n\r\n              </div>\r\n              <p class=\"font-weight-bold\" id=\"machineSkill\">{{item.Maker.MakerName}} - {{item.Maker.Model}}</p>\r\n              <div class=\"check-container\">\r\n                <div class=\"form-check\" *ngFor=\"let subitem of listMachineSkill\">\r\n                  <p-checkbox color=\"primary\" [value]=\"subitem.MSId\"\r\n                    [checked]=\"CheckConditionMachine(item.SkillNumber , subitem.MSId)\"\r\n                    (change)=\"changeSkillMachines($event,item)\">\r\n                    {{subitem.MSName}}\r\n                  </p-checkbox>\r\n                </div>\r\n              </div>\r\n              <textarea name=\"comment\" #comment (keyup)=\"onTextChange(comment.value, item)\"\r\n                placeholder=\"Please write your comment for this machine skill\">{{item.Comment}}</textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 form-footer\">\r\n            <button (click)=\"BackHome()\" class=\"btn btn-o btn-cancel\" type=\"button\">\r\n              <span aria-hidden=\"true\">Cancel</span>\r\n            </button>\r\n            <button (click)=\"SubmitEngineer()\" [disabled]=\"ValidateSubmitEngineer()\" style=\"margin-left: 5px;\"\r\n              id=\"addEngineerId\" type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Update Engineer</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { timeout } from \"rxjs/operators\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app--popup-login\",\r\n  templateUrl: \"./popup.component.html\",\r\n  styleUrls: [\"./popup.component.css\"],\r\n})\r\nexport class PopupLoginDialogComponent implements OnInit {\r\n  isRemember: boolean = false;\r\n  isLoginError: boolean = false;\r\n  errormes: string;\r\n  form: FormGroup;\r\n  constructor(\r\n    private router: Router,\r\n    public userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n    this.form = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  onFilterChange(eve: any) {\r\n    if (eve.target.checked) {\r\n      this.isRemember = true;\r\n    } else {\r\n      this.isRemember = false;\r\n    }\r\n  }\r\n\r\n  OnSubmit() {\r\n    this.spinner.show();\r\n    const username = this.form.get(\"username\").value;\r\n    const password = this.form.get(\"password\").value;\r\n    this.userService.userAuthentication(username, password).subscribe(\r\n      (data: any) => {\r\n        var timeexpires = new Date();\r\n        localStorage.setItem(\"userToken\", data.access_token);\r\n        localStorage.setItem(\"userNo\", data.UserNo);\r\n        localStorage.setItem(\"TokenExpire\", timeexpires.toLocaleString());\r\n        localStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        localStorage.setItem(\"F5TokenExpire\", timeexpires.toLocaleString());\r\n        sessionStorage.setItem(\"IsLogin\", \"true\");\r\n        this.spinner.hide();\r\n        this.router.navigate([\"/home\"]);\r\n        this.router.events.subscribe((e) => {\r\n          console.log(e);\r\n          if (e instanceof NavigationEnd) {\r\n          }\r\n          console.log(e);\r\n        });\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n        console.log(typeof err.status);\r\n        if (typeof err.status == \"undefined\") {\r\n          this.errormes = err.message;\r\n        } else {\r\n          if (err.status != 400) {\r\n            this.errormes = \"The user name or password is incorrect.\";\r\n          } else {\r\n            this.errormes = err.error.error_description;\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n<div mat-dialog-content>\r\n    <mat-toolbar color=\"primary\">\r\n      </mat-toolbar>\r\n      <div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <mat-card class=\"box\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\" id=\"logo-container center\">\r\n            <img src=\"assets/img/jr-icon.png\">\r\n          </div>\r\n          <mat-card-header>\r\n            <mat-card-title>GLOBAL SKILL LIST</mat-card-title>\r\n            <mat-card-subtitle>Login to access your account</mat-card-subtitle>\r\n          </mat-card-header>\r\n      \r\n          <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"OnSubmit()\">\r\n            <mat-card-content>\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Username\" formControlName=\"username\" required />\r\n                <mat-error>\r\n                  User name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n      \r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Password\" required />\r\n                <mat-error>\r\n                  Password is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-checkbox (change)=\"onFilterChange($event)\" color=\"primary\">Remember me\r\n              </mat-checkbox>\r\n              <mat-error *ngIf=\"isLoginError\">\r\n                The username and password were not recognised\r\n              </mat-error>\r\n            </mat-card-content>\r\n            <button mat-stroked-button color=\"primary\" class=\"btn-block\">\r\n              Log in\r\n            </button>\r\n            <div class=\"footer-login text-center\">\r\n              <a href=\"https://rieckermann.com\" target=\"_blank\">www.rieckermann.com</a>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    \r\n  </div>\r\n\r\n  \r\n  <ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n    <p style=\"color: white\"> Loading... </p>\r\n  </ngx-spinner>\r\n  ","import { AppSettings } from \"./../shared/constant/TSconstands.component\";\r\nimport { UserService } from \"./../shared/services/user.service\";\r\nimport { SkillService } from \"./../shared/services/skillservice.service\";\r\nimport { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { timeout } from \"rxjs/operators\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isRemember: boolean = false;\r\n  isLoginError: boolean = false;\r\n  errormes: string;\r\n  form: FormGroup;\r\n  constructor(\r\n    private router: Router,\r\n    public userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n    this.form = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  onFilterChange(eve: any) {\r\n    if (eve.target.checked) {\r\n      this.isRemember = true;\r\n    } else {\r\n      this.isRemember = false;\r\n    }\r\n  }\r\n\r\n  OnSubmit() {\r\n    this.spinner.show();\r\n    const username = this.form.get(\"username\").value;\r\n    const password = this.form.get(\"password\").value;\r\n    this.userService.userAuthentication(username, password).subscribe(\r\n      (data: any) => {\r\n        var timeexpires = new Date();\r\n        localStorage.setItem(\"userToken\", data.access_token);\r\n        localStorage.setItem(\"userNo\", data.UserNo);\r\n        localStorage.setItem(\"TokenExpire\", timeexpires.toLocaleString());\r\n        localStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        localStorage.setItem(\"F5TokenExpire\", timeexpires.toLocaleString());\r\n        sessionStorage.setItem(\"IsLogin\", \"true\");\r\n        this.spinner.hide();\r\n        this.router.navigate([\"/home\"]);\r\n        this.router.events.subscribe((e) => {\r\n          console.log(e);\r\n          if (e instanceof NavigationEnd) {\r\n          }\r\n          console.log(e);\r\n        });\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n        console.log(typeof err.status);\r\n        if (typeof err.status == \"undefined\") {\r\n          this.errormes = err.message;\r\n        } else {\r\n          if (err.status != 400) {\r\n            this.errormes = \"The user name or password is incorrect.\";\r\n          } else {\r\n            this.errormes = err.error.error_description;\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\n<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" id=\"logo-container center\">\r\n      <img src=\"assets/img/jr-icon.png\">\r\n    </div>\r\n    <mat-card-header>\r\n      <mat-card-title>GLOBAL SKILL LIST</mat-card-title>\r\n      <mat-card-subtitle>Login to access your account</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"OnSubmit()\">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Username\" formControlName=\"username\" required />\r\n          <mat-error>\r\n            User name is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Password\" required />\r\n          <mat-error>\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-checkbox (change)=\"onFilterChange($event)\" color=\"primary\">Remember me\r\n        </mat-checkbox>\r\n        <mat-error *ngIf=\"isLoginError\">\r\n          The username and password were not recognised\r\n        </mat-error>\r\n      </mat-card-content>\r\n      <button mat-stroked-button color=\"primary\" class=\"btn-block\">\r\n        Log in\r\n      </button>\r\n      <div class=\"footer-login text-center\">\r\n        <a href=\"https://rieckermann.com\" target=\"_blank\">www.rieckermann.com</a>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { PrimeModule } from './../shared/ng-prime/prime.module';\r\nimport { MaterialModule } from './../shared/materials/material-module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GeneralPageNotFoundComponent } from '../home/pagenotfound/pagenotfound.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PopupLoginDialogComponent } from './login-popup/popup.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    children :[\r\n       {\r\n        path: '',\r\n        component: LoginComponent\r\n      },         \r\n    ],    \r\n    \r\n  },\r\n  {\r\n    path:'register',\r\n    component:RegisterComponent\r\n  },\r\n  {\r\n    path: 'pagenotfound',component:GeneralPageNotFoundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    PrimeModule,\r\n  ],\r\n  declarations: [LoginComponent,RegisterComponent,PopupLoginDialogComponent],\r\n  entryComponents: [\r\n    PopupLoginDialogComponent,\r\n  ],\r\n})\r\nexport class LoginModule { }\r\n","import { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport {MenuItem} from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { debounceTime, finalize, startWith, switchMap, tap } from \"rxjs/operators\";\r\nimport { MatAutocompleteActivatedEvent, MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { MachineSkillAssign } from \"../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { Maker } from \"../../shared/models/maker.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  providers: [MessageService],\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  isLinear = false;\r\n  listAssignmachine= new Array<MachineSkillAssign>();\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  searchMachinesCtrl = new FormControl();\r\n  listProskill = new Array<ProfessionalSkill>();\r\n  listStationed = new Array<Stationed>();\r\n  listMachineSkill = new Array<MachineSkill>();\r\n  activeIndex: number = 1;\r\n  userName : string;\r\n  listIndustries= new Array<Industry>();\r\n  filteredMachines: any;\r\n  selectedInd = new  Industry();\r\n  selectedMachine = new MachineSkillAssign();\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['name', 'application', 'comment', 'action'];\r\n  technician = new Technician();\r\n  matcher = new MyErrorStateMatcher();\r\n  isSelectMaker : boolean = false;\r\n  dataSource = new MatTableDataSource<MachineSkillAssign>();\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private techService: TechnicianService,\r\n    private messageService: MessageService,\r\n    private _formBuilder: FormBuilder\r\n  ) {}\r\n  ngOnInit() {\r\n    this.filteredMachines = [];\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.dataSource.data = this.listAssignmachine;\r\n    this.selectedMachine.Maker = new Maker();\r\n    this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.searchMachinesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.filteredMachines = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value =>  this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, value, null, this.selectedInd.IndId)\r\n        )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe(data => {\r\n        if (data == undefined) {\r\n          this.filteredMachines = [];\r\n        } else {\r\n          this.filteredMachines = data;\r\n        }\r\n      });\r\n\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n      \r\n      this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0];\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n      \r\n      \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      Country : ['', Validators.required],\r\n      Email : ['',Validators.required],\r\n      FullName : ['',Validators.required],\r\n      Title : ['',Validators.required],\r\n      Remark: ['',Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  OptionSelectChange(eve: MatCheckboxChange){\r\n    let number = parseInt(eve.source.value);\r\n    if (eve.checked) {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      this.selectedMachine.MachineSkill.push(model);\r\n      this.selectedMachine.SkillNumber += number;\r\n    } else {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      let index = this.selectedMachine.MachineSkill.indexOf(model);\r\n      this.selectedMachine.MachineSkill.splice(index,\r\n        1\r\n      );\r\n      this.selectedMachine.SkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  displayFn(value: any | string): string | undefined {\r\n    let displayValue: string;\r\n    if(value == undefined || value == null) {\r\n      displayValue == '';\r\n    }else{\r\n      displayValue = value.MakerName;\r\n    }\r\n    \r\n    return displayValue;\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    \r\n      this.selectedMachine.Maker.Model = this.secondFormGroup.get('application').value;\r\n      this.selectedMachine.Comment = this.secondFormGroup.get('Description').value;\r\n\r\n      this.listAssignmachine.push(this.selectedMachine);\r\n      this.technician.listAssign.push(this.selectedMachine);\r\n       this.selectedMachine = new MachineSkillAssign();\r\n       this.selectedMachine.Maker = new Maker();\r\n       this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n       this.isSelectMaker = false;\r\n       this.resetMachineAssignments();\r\n       this.searchMachinesCtrl.setValue('');\r\n      this.dataSource.data =  this.listAssignmachine;\r\n  }\r\n\r\n  resetMachineAssignments(){\r\n    this.secondFormGroup.reset();\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  changeProfessionalSkillLevel(event : MatCheckboxChange) : void {\r\n    let number = parseInt(event.source.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  addOption(eve : MatAutocompleteSelectedEvent){\r\n      this.selectedMachine.Maker = eve.option.value;\r\n  }\r\n  RemoveMakerAction(model : MachineSkillAssign){\r\n\r\n      let index = this.listAssignmachine.indexOf(model);\r\n      if(index  != -1){\r\n        this.listAssignmachine.splice(index,1);\r\n      }\r\n      this.dataSource.data =  this.listAssignmachine;\r\n      console.log(this.listAssignmachine);\r\n  }\r\n\r\n  AddBasicInformation(){\r\n    this.technician.DisplayName = this.firstFormGroup.get('FullName').value;\r\n    this.technician.EmailAddress = this.firstFormGroup.get('Email').value;\r\n    this.technician.Title = this.firstFormGroup.get('Title').value;\r\n    this.technician.Remark = this.firstFormGroup.get('Remark').value;\r\n  }\r\n\r\n  SelectMaker(){\r\n    this.isSelectMaker = true; \r\n  }\r\n\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.untouched || control.touched)\r\n    );\r\n  }\r\n}","<p-toast></p-toast>\r\n\r\n<div fxLayout=\"column\" fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around stretch\">\r\n  <h3 class=\"header-title text-center\">Register Form</h3>\r\n\r\n  <!-- registerForm -->\r\n  <div fxFlex=\"100\" xLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-horizontal-stepper [linear]=\"false\" #stepper class=\"form-register\">\r\n      <mat-step [stepControl]=\"firstFormGroup\">\r\n        \r\n        <form [formGroup]=\"firstFormGroup\" >\r\n          <ng-template matStepLabel>Fill out basic information</ng-template>\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">      \r\n              <p>Please fill in all the engineer details below</p>    \r\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                  <div fxFlex=\"50\">\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Full Name</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"FullName\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['FullName'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"Email\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Email'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"50\">                 \r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Country</mat-label>\r\n                      <mat-select [errorStateMatcher]=\"matcher\" formControlName=\"Country\" required>\r\n                        <mat-option *ngFor=\"let country of listStationed\" [value]=\"country\">\r\n                          {{country.StationName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                       <mat-error *ngIf=\"firstFormGroup.controls['Country'].hasError('required')\">Please choose country</mat-error>\r\n                      \r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Title</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Title\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Title'].valid\r\n              \">\r\n              Required field\r\n            </mat-error>\r\n                    </mat-form-field>                  \r\n                  </div>\r\n                </div>                                         \r\n                <div fxFlex=\"100\">\r\n                  <mat-form-field class=\"form-element\">\r\n                    <mat-label>Remark</mat-label>\r\n                    <textarea formControlName=\"Remark\" [errorStateMatcher]=\"matcher\" [errorStateMatcher]=\"matcher\" matInput placeholder=\"Ex. It makes me feel...\"></textarea>\r\n                    <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Remark'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                                              \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-around center\">\r\n\r\n              </div>              \r\n              \r\n              <p class=\"bold\">Please select engineer professional background</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n                <div *ngFor=\"let item of listProskill\">\r\n                  <mat-checkbox [color]=\"primary\" [value]=\"item.SkillId\" (change)=\"changeProfessionalSkillLevel($event)\">\r\n                    {{item.SkillName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-error class=\"text-center\" *ngIf=\"\r\n                technician.ProSkill === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n                <!-- <button [disabled]=\"!firstFormGroup.valid || technician.ProSkill == 0\" mat-stroked-button color=\"primary\" (click)=\"AddBasicInformation()\" matStepperNext>Next</button> -->\r\n                <button mat-stroked-button color=\"primary\" matStepperNext>Next</button>\r\n              </div>\r\n            </div>        \r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Select Machine Maker\">\r\n        \r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <ng-template matStepLabel>Select Machine Maker</ng-template>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\r\n            <p>Please fill in all the engineer details below</p> \r\n            <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"stretch stretch\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around center\">\r\n                <mat-form-field class=\"form-element\" fxFlex=\"50\">\r\n                  <mat-label>Search Machine Maker</mat-label>\r\n                  <input [disabled]=\"isSelectMaker\" matInput placeholder=\"Search\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"searchMachinesCtrl\">\r\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addOption($event)\" [displayWith]=\"displayFn\">\r\n                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                        <ng-container *ngIf=\"!isLoading\">\r\n                          <mat-option *ngFor=\"let machine of filteredMachines\" [value]=\"machine\">\r\n                            <span><b>{{machine.MakerName}}</b></span>\r\n                          </mat-option>\r\n                        </ng-container>\r\n                      </mat-autocomplete>\r\n                </mat-form-field>   \r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Industry</mat-label>\r\n                  <mat-select [disabled]=\"isSelectMaker\" [(value)]=\"selectedInd\">\r\n                    <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                      {{industry.Description}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  \r\n                </mat-form-field> \r\n                <button mat-raised-button color=\"primary\" (click) = \"SelectMaker()\">Select</button>\r\n                <!-- <button mat-raised-button color=\"primary\" [disabled]=\"selectedMachine.Maker.MaId == 0 || isSelectMaker\" (click) = \"SelectMaker()\">Select</button> -->\r\n              </div>\r\n              <div *ngIf=\"isSelectMaker\">\r\n              <p class=\"text-center\">Please assign machine skill to machine</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n             \r\n                <div *ngFor=\"let item of listMachineSkill\">\r\n                  <mat-checkbox (change)=\"OptionSelectChange($event)\" [value]=\"item.MSId\" [color]=\"primary\" matTooltip=\"{{item.Explain}}\">\r\n                    {{item.MSName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <mat-error class=\"text-center\" *ngIf=\"\r\n              selectedMachine.MachineSkill.length === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">            \r\n                <mat-form-field fxFlex=\"25\">                \r\n                  <mat-label>Application</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"application\"\r\n                         >\r\n                </mat-form-field> \r\n                <mat-form-field fxFlex=\"75\">                \r\n                  <mat-label>Description</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Description\" placeholder=\"Ex. 1 Main St, New York, NY\">\r\n                  <mat-error *ngIf=\"\r\n                !secondFormGroup.controls['Description'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                </mat-form-field> \r\n                <button  (click)=\"AddMachineSkill()\" mat-icon-button  mat-raised-button color=\"primary\" [disabled]=\"!secondFormGroup.valid || selectedMachine.MachineSkill.length === 0\">\r\n                  <mat-icon>done</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button  mat-raised-button>\r\n                    <mat-icon>clear</mat-icon>\r\n                    </button>\r\n              </div> \r\n            </div>\r\n            </div>\r\n            <p>List Machine Maker</p>  \r\n            <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n              <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n              \r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"application\">\r\n                  <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"comment\">\r\n                  <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Action Column -->\r\n                <ng-container matColumnDef=\"action\">\r\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> \r\n                    <button (click)=\"RemoveMakerAction(element)\" matTooltip=\"Remove Machine\" mat mat-icon-button color=\"primary\"\r\n                    aria-label=\"Example icon-button with a heart icon\">\r\n                    <mat-icon>remove_circle</mat-icon>\r\n                  </button>\r\n                  </td>\r\n                </ng-container>\r\n              \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"footer-gr\" fxFlex=\"100\" fxLayoutGap=\"10px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n              <button mat-stroked-button matStepperPrevious>Back</button>\r\n              <button mat-stroked-button matStepperNext>Next</button>\r\n              <!-- <button mat-stroked-button matStepperNext [disabled]=\"listAssignmachine.length === 0\">Next</button> -->\r\n            </div>  \r\n          </div>\r\n             \r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Confirm</ng-template>\r\n        <h4 class=\"font-weight-normal\">Technician Information</h4>\r\n        <mat-divider></mat-divider>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start stretch\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly start\">\r\n            <div fxFlex=\"50\" fxFlexOffset=\"2\">\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>whrhrehrehe</p>\r\n              <p class=\"font-weight-bold\">Email</p>\r\n              <p>erhrehreh</p>\r\n              <p class=\"font-weight-bold\">Title</p>\r\n              <p>erhrehrehreh</p>\r\n            </div>\r\n            <div fxFlex=\"50\">\r\n              <p class=\"font-weight-bold\">Country</p>\r\n              <p>erhrehrehreh</p>\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>ehrehrehrehrehreh</p>\r\n            </div>             \r\n          </div>\r\n          \r\n          <h4 class=\"font-weight-normal\">Machine Maker Information</h4>\r\n          <mat-divider></mat-divider>\r\n          <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n              <!--- Note that these columns can be defined in any order.\r\n                    The actual rendered columns are set as a property on the row definition\" -->\r\n            \r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"application\">\r\n                <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Action Column -->\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef>  </th>\r\n                <td mat-cell *matCellDef=\"let element\"> \r\n                </td>\r\n              </ng-container>\r\n            \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end center\">\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button color=\"primary\" (click)=\"stepper.reset()\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  </div>\r\n  \r\n</div>\r\n","\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { Routes } from '@angular/router'\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { DashboardComponent } from './home/dashboard/dashboard.component';\r\nimport { GeneralPageNotFoundComponent } from './home/pagenotfound/pagenotfound.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '',\r\n      component: DashboardComponent,\r\n      canActivate  : [AuthGuard]\r\n    },\r\n    {\r\n        path: 'login', component: LoginComponent\r\n    },   \r\n    {\r\n        path: 'pagenotfound',component:GeneralPageNotFoundComponent\r\n    },    \r\n    { path : '**', redirectTo:'/pagenotfound', pathMatch : 'full'}\r\n\r\n];\r\n","import { MachineSkill } from \"./../models/MachineSkill.model\";\r\nimport { Maker } from \"../models/maker.model\";\r\n\r\nexport class MachineSkillAssign {\r\n  Maker: Maker;\r\n  MachineSkill: Array<MachineSkill>;\r\n  Comment: string;\r\n  SkillName: string;\r\n  SkillNumber: number = 0;\r\n}\r\n","import { Industry } from \"./../models/Industry.model\";\r\nexport class MachinesMaker {\r\n  MaId: number = 0;\r\n  MakerName: string;\r\n  MakerDescription: string;\r\n  industries: Array<Industry>;\r\n}\r\n","import { QuerySearch } from \"../models/QuerySearchModel.model\";\r\n\r\nexport class AppSettings {\r\n  public static API_service = 'http://skillmatrix.local/';\r\n\r\n  /* server test */\r\n  //public static API_service      ='http://10.99.1.43:81';\r\n\r\n  //* server staging */\r\n  //public static API_service = \"http://10.99.1.44:82\";\r\n\r\n  public static Role_Admin = 11;\r\n  public static Role_Manager = 12;\r\n  public static Role_Technician = 13;\r\n\r\n  public static GetQuerySeach(\r\n    pagesize: number,\r\n    pagenumber: number,\r\n    itemname: string = null,\r\n    itemid: number = null,\r\n    typeid: number = null,\r\n    note: string = null\r\n  ) {\r\n    let query = new QuerySearch();\r\n    query.itemid = itemid;\r\n    query.name = itemname;\r\n    query.pagesize = pagesize;\r\n    query.pagenumber = pagenumber;\r\n    query.typeid = typeid;\r\n    query.note = note;\r\n\r\n    return query;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatBottomSheetModule } from \"@angular/material/bottom-sheet\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatNativeDateModule, MatRippleModule } from \"@angular/material/core\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    FlexLayoutModule,\r\n    MatFormFieldModule\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","export class FilterModel {\r\n  name: string;\r\n  professionals: Array<number>;\r\n  machineSkills: Array<number>;\r\n  professionalNumber: number;\r\n  machineSkillNumber: number;\r\n  machineMakerId: number;\r\n  makerId: number;\r\n  Industry: number;\r\n  Stationed: number;\r\n  pagesize: number;\r\n  pagenumber: number;\r\n  listStationed: Array<number>;\r\n  listIndustry: Array<number>;\r\n}\r\n","export class Industry{\r\n    IndId:number=0;\r\n    IndustryName:string;\r\n    Description:string;\r\n}","export class MachineSkill {\r\n    MSId:number=0;\r\n    MSCode:string;\r\n    MSName:string;\r\n    Explain:string;\r\n}","\r\nexport class QuerySearch {\r\n  itemid:number;\r\n  name: string;\r\n  pagesize: number;\r\n  pagenumber: number;\r\n  typeid:number;\r\n  startdate:string;\r\n  enddate:string;\r\n  note:string;\r\n}\r\n","export class Maker {\r\n  MaId: number = 0;\r\n  MakerName: string;\r\n  MakerDescription: string;\r\n  Model: string =\"\";\r\n  RelMachineId: number;\r\n}\r\n","import { ProfessionalSkill } from \"./ProfessionalSkill.model\";\r\nimport { MachineSkillAssign } from \"./../ViewModels/MachineSKillAssign.model\";\r\nexport class Technician {\r\n  TechId: number = 0;\r\n  UserName: string;\r\n  DisplayName: string;\r\n  EmailAddress: string;\r\n  Title: string;\r\n  Initials: string;\r\n  ProSkill: number;\r\n  StationId: number;\r\n  Remark: string;\r\n  IndustryId: number;\r\n  CreatedBy: number;\r\n  UpdatedBy: number;\r\n  listAssign: Array<MachineSkillAssign>;\r\n  IndustryName: string;\r\n  StationName: string;\r\n  SkillsName: string;\r\n  ProskillName: string;\r\n  CanEdit: boolean = false;\r\n  Professionals: Array<ProfessionalSkill>;\r\n  Deactive : boolean = false;\r\n}\r\n","export class User {\r\n  UserId:number;\r\n  UserName: string;\r\n  Password: string;\r\n  EmailAddress: string;\r\n  DispplayName:string;\r\n  CountryId:string;\r\n  Initials:string;\r\n  Rights :number;\r\n  Countries: Array<number>;\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CheckboxModule } from \"primeng/checkbox\";\r\nimport { ListboxModule } from \"primeng/listbox\";\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {StepsModule} from 'primeng/steps';\r\nimport {ToastModule} from 'primeng/toast';\r\n@NgModule({\r\n  exports: [ \r\n\tListboxModule,\r\n    InputTextModule,\r\n\t\tButtonModule,\r\n\t\tRadioButtonModule,\r\n\t\tInputTextareaModule,\r\n\t\tDropdownModule,\r\n\t\tToastModule,\r\n\t\tStepsModule],\r\n})\r\nexport class PrimeModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { of as observableOf, Observable } from \"rxjs\";\r\nimport { delay, mergeMap, switchMap } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // Assuming this would be cached somehow from a login call.\r\n  public authTokenStale: string = localStorage.getItem(\"userToken\");\r\n  public authTokenNew: string = localStorage.getItem(\"userToken\");\r\n  public currentToken: string = localStorage.getItem(\"userToken\");\r\n\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentToken = this.authTokenStale;\r\n  }\r\n\r\n  getAuthToken() {\r\n    this.currentToken = localStorage.getItem(\"userToken\");\r\n    return this.currentToken;\r\n  }\r\n\r\n  refreshToken(): Observable<string> {\r\n    /*\r\n            The call that goes in here will use the existing refresh token to call\r\n            a method on the oAuth server (usually called refreshToken) to get a new\r\n            authorization token for the API calls.\r\n        */\r\n    let data =\r\n      \"refresh_token=\" +\r\n      localStorage.getItem(\"refreshToken\") +\r\n      \"&grant_type=refresh_token&client_id=NgAuthApp\";\r\n    this.http\r\n      .post(this.rootUrl + \"/login\", data, {\r\n        headers: {\r\n          \"No-Auth\": \"True\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .subscribe((data: any) => {\r\n        localStorage.removeItem(\"userToken\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.setItem(\"userToken\", data.access_token);\r\n        localStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        this.authTokenNew = data.access_token;\r\n        this.currentToken = this.authTokenNew;\r\n      });\r\n    return observableOf(this.authTokenNew).pipe(delay(200));\r\n  }\r\n}\r\n","import { FilterMakerComponent } from \"./../../home/pop-up/filter-maker/filter-maker.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ConfirmationDialogComponent } from \"./../../home/pop-up/confirmation/confirmation.component\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { FilterModel } from \"../models/FilterModel.model\";\r\nimport { FilterComponent } from \"../../home/pop-up/filter/filter.component\";\r\nimport { DownloadMachineDialogComponent } from \"../../home/pop-up/download-machine/download-machine.component\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openConfirmDialog(msg) {\r\n    return this.dialog.open(ConfirmationDialogComponent, {\r\n      width: \"390px\",\r\n      disableClose: true,\r\n      data: {\r\n        message: msg,\r\n      },\r\n    });\r\n  }\r\n\r\n  openDownloadMachineDialog() {\r\n    return this.dialog.open(DownloadMachineDialogComponent, {\r\n      width: \"390px\",\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  openDiagnosedDialog(filter: FilterModel) {\r\n    return this.dialog.open(FilterComponent, {\r\n      width: \"550px\",\r\n      disableClose: true,\r\n      position: {\r\n        top: \"100px\",\r\n      },\r\n      data: {\r\n        model: filter,\r\n      },\r\n    });\r\n  }\r\n\r\n  openFilterMachineMakerDialog(filter: FilterModel) {\r\n    return this.dialog.open(FilterMakerComponent, {\r\n      width: \"550px\",\r\n      disableClose: true,\r\n      position: {\r\n        top: \"100px\",\r\n      },\r\n      data: {\r\n        model: filter,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { JsonMachineMaker } from \"./../ViewModels/JsonMachineMaker.model\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { MachinesMaker } from \"../ViewModels/MachinesMaker.model\";\r\nimport { FilterModel } from \"../models/FilterModel.model\";\r\n\r\n@Injectable()\r\nexport class SkillService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  GetListIndustries(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/GetListIndustries\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  GetListIndustriesAll(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesAll\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  DownloadMachinesReport(query: QuerySearch){\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/DownloadMachinesReport\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" },\r\n      responseType: \"blob\", }\r\n    );\r\n  }\r\n\r\n  GetListProskill(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/GetListProskills\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  CheckPermission(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/CheckPermission\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  GetListMachineSKill(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListMachineSkills\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  GetListIndustriesMachine(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesMachine\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetSelectedMachineMaker(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetIndustriesMachineById\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  FilterListMakers(query: FilterModel) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/FilterMachineMaker\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListIndustriesMachineByKey(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesMachineByKey\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  AddMachineMaker(model: MachinesMaker) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/AddRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  DeleteMaker(model: QuerySearch) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/DeleteRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  UpdateMakerIndustry(model: MachinesMaker) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/UpdateRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  SearchMachineMaker(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/SearchMachine\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  SearchMachineMakerByIndustry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/SearchMachineByIndustry\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchIndustry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/SearchIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n}\r\n","import { FilterModel } from \"./../models/FilterModel.model\";\r\nimport { Technician } from \"./../models/technician.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { User } from \"../models/user.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class TechnicianService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserClaims(): Observable<User> {\r\n    return this.http.post<User>(\r\n      this.rootUrl + \"/api/technician/GetUserClaims\",\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" }\r\n    );\r\n  }\r\n\r\n  SearchUserByInitial(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchUserInitital\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchUserInitialByCountry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchUserInititalByCountry\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  UpdateStatusOfTechnician(query: QuerySearch){\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/UpdateStatusOfTechnician\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  DownloadTechniciansReport(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/DownloadTechnicianReport\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" },\r\n      responseType: \"blob\", }\r\n    );\r\n  }\r\n\r\n  SearchTechnicianByName(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchTechnicianByName\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  FilterListEngineer(query: FilterModel) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/FilterEngineer\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchStationed(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchStationed\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationed(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationed\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationedAll(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationedAll\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationedEngineer(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationedEngineer\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  AddTechnicianSkill(technician: Technician) {\r\n    var body = JSON.stringify(technician);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/AddTechnicianSkill\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  UpdateTechnicianSkill(technician: Technician) {\r\n    var body = JSON.stringify(technician);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/UpdateTechnicianSkill\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListEngineer(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListEngineers\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetEngineerDetail(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetEngineerDetail\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n}\r\n","import { Industry } from \"./../models/Industry.model\";\r\nimport { FilterModel } from \"./../models/FilterModel.model\";\r\nimport { User } from \"./../models/user.model\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { Stationed } from \"../models/Stationed.model\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  private pagename = new BehaviorSubject<string>(\"DASHBOARD\");\r\n  private userrole = new BehaviorSubject<number>(0);\r\n  public userRole = 13;\r\n  private techFilterModel = new FilterModel();\r\n  private makerFilterModel = new FilterModel();\r\n  cast = this.pagename.asObservable();\r\n  castuserrole = this.userrole.asObservable();\r\n  constructor(private http: HttpClient) {\r\n    this.techFilterModel.listStationed = new Array<number>();\r\n    this.techFilterModel.listIndustry = new Array<number>();\r\n    this.techFilterModel.professionals = new Array<number>();\r\n    this.techFilterModel.machineSkills = new Array<number>();\r\n    this.techFilterModel.makerId = 0;\r\n    this.techFilterModel.pagenumber = 1;\r\n    this.techFilterModel.pagesize = 10;\r\n\r\n    this.makerFilterModel.listStationed = new Array<number>();\r\n    this.makerFilterModel.listIndustry = new Array<number>();\r\n    this.makerFilterModel.professionals = new Array<number>();\r\n    this.makerFilterModel.machineSkills = new Array<number>();\r\n    this.makerFilterModel.pagenumber = 1;\r\n    this.makerFilterModel.pagesize = 10;\r\n  }\r\n\r\n  UpdatePageNumber(val: number) {\r\n    this.techFilterModel.pagenumber = val;\r\n  }\r\n\r\n  UpdatePageNumberOfMachine(val: number) {\r\n    this.makerFilterModel.pagenumber = val;\r\n  }\r\n\r\n  AddStations(selectItem: SelectionModel<Stationed>) {\r\n    selectItem.selected.forEach((e) => {\r\n      this.techFilterModel.listStationed.push(e.StationId);\r\n    });\r\n  }\r\n  AddIndustry(selectItem: SelectionModel<Industry>) {\r\n    selectItem.selected.forEach((e) => {\r\n      this.techFilterModel.listIndustry.push(e.IndId);\r\n    });\r\n  }\r\n\r\n  AddMakerIndustry(ind: SelectionModel<Industry>) {\r\n    ind.selected.forEach((e) => {\r\n      this.makerFilterModel.listIndustry.push(e.IndId);\r\n    });\r\n  }\r\n\r\n  getTechFilter() {\r\n    return this.techFilterModel;\r\n  }\r\n\r\n  AddNewTechFilter(model: FilterModel) {\r\n    this.techFilterModel = model;\r\n  }\r\n\r\n  AddNewMakerFilter(model: FilterModel) {\r\n    this.makerFilterModel = model;\r\n  }\r\n  getMakerFilter() {\r\n    return this.makerFilterModel;\r\n  }\r\n\r\n  AddTechName(name: string) {\r\n    this.techFilterModel.name = name;\r\n  }\r\n\r\n  AddMakerName(name: string) {\r\n    this.makerFilterModel.name = name;\r\n  }\r\n\r\n  SetPageName(pagename): void {\r\n    this.pagename.next(pagename);\r\n  }\r\n\r\n  SetUserRole(userrole): void {\r\n    this.userrole.next(userrole);\r\n  }\r\n\r\n  public getIPAddress() {\r\n    return this.http.get(\"http://api.ipify.org/?format=json\");\r\n  }\r\n\r\n  sendMailLogin(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"api/technician/SendMailLogin\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  userAuthentication(userName, password) {\r\n    let data =\r\n      \"username=\" +\r\n      userName +\r\n      \"&password=\" +\r\n      password +\r\n      \"&grant_type=password&client_id=NgAuthApp\";\r\n    return this.http.post(this.rootUrl + \"/login\", data, {\r\n      headers: {\r\n        \"No-Auth\": \"True\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    });\r\n  }\r\n\r\n  userAuthenticationusingF5token() {\r\n    let data =\r\n      \"refresh_token=\" +\r\n      localStorage.getItem(\"refreshToken\") +\r\n      \"&grant_type=refresh_token&client_id=NgAuthApp\";\r\n    return this.http.post(this.rootUrl + \"/login\", data, {\r\n      headers: {\r\n        \"No-Auth\": \"True\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    });\r\n  }\r\n\r\n  getUserClaims(): Observable<User> {\r\n    return this.http.post<User>(this.rootUrl + \"/api/User/GetUserClaims\", {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}