{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/home/dashboard/dashboard.component.ts","./src/app/home/dashboard/dashboard.component.html","./src/app/home/engineer-detail/engineer-detail.component.ts","./src/app/home/engineer-detail/engineer-detail.component.html","./src/app/home/engineer-skill/add-engineer.component.ts","./src/app/home/engineer-skill/add-engineer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/home/list-engineers/list-engineer.component.ts","./src/app/home/list-engineers/list-engineer.component.html","./src/app/home/machine-maker/machine-maker.component.ts","./src/app/home/machine-maker/machine-maker.component.html","./src/app/home/pagenotfound/pagenotfound.component.ts","./src/app/home/pagenotfound/pagenotfound.component.html","./src/app/home/pop-up/confirmation/confirmation.component.ts","./src/app/home/pop-up/confirmation/confirmation.component.html","./src/app/home/pop-up/download-machine/download-machine.component.ts","./src/app/home/pop-up/download-machine/download-machine.component.html","./src/app/home/pop-up/filter-maker/filter-maker.component.ts","./src/app/home/pop-up/filter-maker/filter-maker.component.html","./src/app/home/pop-up/filter/filter.component.ts","./src/app/home/pop-up/filter/filter.component.html","./src/app/home/register/register.component.ts","./src/app/home/register/register.component.html","./src/app/home/skillexplaination/explaination.component.ts","./src/app/home/skillexplaination/explaination.component.html","./src/app/home/update-engineer/update-engineer.component.ts","./src/app/home/update-engineer/update-engineer.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/register/register.component.ts","./src/app/login/register/register.component.html","./src/app/routes.ts","./src/app/shared/ViewModels/MachineSKillAssign.model.ts","./src/app/shared/ViewModels/MachinesMaker.model.ts","./src/app/shared/constant/TSconstands.component.ts","./src/app/shared/materials/material-module.ts","./src/app/shared/models/FilterModel.model.ts","./src/app/shared/models/Industry.model.ts","./src/app/shared/models/MachineSkill.model.ts","./src/app/shared/models/QuerySearchModel.model.ts","./src/app/shared/models/maker.model.ts","./src/app/shared/models/technician.model.ts","./src/app/shared/models/user.model.ts","./src/app/shared/ng-prime/prime.module.ts","./src/app/shared/services/authService.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/skillservice.service.ts","./src/app/shared/services/technicianservice.service.ts","./src/app/shared/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACF;QAAA,4DAAI;QACJ,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACF;QAAA,4DAAI;QACJ,2EACE;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Industry } from './shared/models/Industry.model';\nimport { AppSettings } from './shared/constant/TSconstands.component';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './shared/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Skill Matrix';\n\n  constructor(private router: Router){}\n\n  ngOnInit() {\n  }\n}\n","<router-outlet></router-outlet>\n\n","import { DialogService } from \"./shared/services/dialog.service\";\nimport { TechnicianService } from \"./shared/services/technicianservice.service\";\nimport { appRoutes } from \"./routes\";\nimport { SkillService } from \"./shared/services/skillservice.service\";\nimport { LoginModule } from \"./login/login.module\";\nimport { AuthInterceptor } from \"./auth/auth.interceptor\";\nimport { UserService } from \"./shared/services/user.service\";\nimport { AuthService } from \"./shared/services/authService.service\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthGuard } from \"./auth/auth.guard\";\nimport { GeneralPageNotFoundComponent } from \"./home/pagenotfound/pagenotfound.component\";\nimport { HomeModule } from \"./home/home.module\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { NgxPrettyCheckboxModule } from \"ngx-pretty-checkbox\";\nimport { MaterialModule } from \"./shared/materials/material-module\";\nimport { PrimeModule } from \"./shared/ng-prime/prime.module\";\n\n@NgModule({\n  declarations: [AppComponent, GeneralPageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    LoginModule,\n    HomeModule,\n    RouterModule.forRoot(appRoutes),\n    NgxSpinnerModule,\n    NgxPrettyCheckboxModule,\n    MaterialModule,\n    PrimeModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    SkillService,\n    TechnicianService,\n    AuthGuard,\n    DialogService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../shared/services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router : Router){\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot):  boolean {\r\n      // if (localStorage.getItem('userToken') != null){\r\n      //       let expiretime = new Date(localStorage.getItem('TokenExpire'));\r\n      //       let currenttime = new Date();\r\n      //       var timeDiff = Math.abs(currenttime.getTime() - expiretime.getTime());\r\n      //       var diffDays = Math.ceil(timeDiff / (1000));\r\n    \r\n      //       if(diffDays >3580){\r\n      //         this.router.navigate([\"login\"]);\r\n      //       }\r\n      //       else{\r\n      //         return true;\r\n      //       }    \r\n      //     }\r\n     return true;\r\n  }\r\n}\r\n","\r\nimport {throwError as observableThrowError,  Observable ,  BehaviorSubject } from 'rxjs';\r\n\r\nimport {take, filter, catchError, switchMap, finalize, timeout} from 'rxjs/operators';\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse, HttpUserEvent, HttpErrorResponse } from \"@angular/common/http\";\r\n\r\nimport {  Router } from '@angular/router';\r\nimport { AuthService } from '../shared/services/authService.service';\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    count = 0;\r\n    isRefreshingToken: boolean = false;\r\n    tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n    constructor(private router : Router,private injector: Injector, ) {}\r\n\r\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n        return req.clone({ setHeaders: { Authorization: 'Bearer ' + token }})\r\n    }\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n        const authService = this.injector.get(AuthService);\r\n        if (req.headers.get('No-Auth') == \"True\"){\r\n            return next.handle(req.clone()).pipe(timeout(100000));\r\n        }\r\n        return next.handle(this.addToken(req, authService.getAuthToken())).pipe(\r\n            timeout(100000),\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    this.count++;\r\n                    console.log(error.status);\r\n                    switch ((<HttpErrorResponse>error).status) {\r\n                        case 400:\r\n                            return this.handle400Error(error);\r\n                        case 498:\r\n                            return this.handle401Error(req, next);\r\n                    }\r\n                } else {\r\n                    return observableThrowError(error);\r\n                }\r\n            }));\r\n    }\r\n\r\n    handle400Error(error) {\r\n        if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\r\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\r\n            console.log(error.status);\r\n            return this.logoutUser();\r\n        }\r\n\r\n        return observableThrowError(error);\r\n    }\r\n\r\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (!this.isRefreshingToken) {\r\n            this.isRefreshingToken = true;\r\n            // Reset here so that the following requests wait until the token\r\n            // comes back from the refreshToken call.\r\n            this.tokenSubject.next(null);\r\n\r\n            const authService = this.injector.get(AuthService);\r\n            \r\n            return authService.refreshToken().pipe(\r\n                switchMap((newToken: string) => {\r\n                    console.log('this.newToken :' + newToken)\r\n                    if (newToken) {\r\n                        this.tokenSubject.next(newToken);\r\n                        return next.handle(this.addToken(req, newToken));\r\n                    }\r\n\r\n                    // If we don't get a new token, we are in trouble so logout.\r\n                    return this.logoutUser();\r\n                }),\r\n                catchError(error => {\r\n                    // If there is an exception calling 'refreshToken', bad news so logout.\r\n                    return this.logoutUser();\r\n                }),\r\n                finalize(() => {\r\n                    this.isRefreshingToken = false;\r\n                }),);\r\n        } else {\r\n            return this.tokenSubject.pipe(\r\n                filter(token => token != null),\r\n                take(1),\r\n                switchMap(token => {\r\n                    return next.handle(this.addToken(req, token));\r\n                }),);\r\n        }\r\n    }\r\n\r\n\r\n    logoutUser() {\r\n        // Route to the login page (implementation up to you)\r\n        localStorage.clear();\r\n        this.router.navigate([\"login\"]);\r\n        return observableThrowError(\"\");\r\n    }\r\n}\r\n\r\n\r\n","import { TechnicianService } from \"./../../shared/services/technicianservice.service\";\r\nimport { User } from \"./../../shared/models/user.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Component, OnInit, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  listIndustries: Array<Industry>;\r\n  userClaims: User;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.listIndustries = new Array<Industry>();\r\n\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.userClaims = new User();\r\n    this.technicianService.getUserClaims().subscribe((data: User) => {\r\n      this.userClaims = data;\r\n      localStorage.setItem(\"UserNo\", this.userClaims.UserId.toString());\r\n      localStorage.setItem(\"UserName\", this.userClaims.UserName);\r\n\r\n      this.userName = localStorage.getItem(\"UserName\");\r\n\r\n      this.skillService\r\n        .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.canEdit = data;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n","<main>\r\n  <section class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 top-container\">\r\n        <p>Welcome,</p>\r\n        <h1 id=\"userName\"><strong>{{userClaims.DispplayName}}</strong></h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"row feature-box\">\r\n      <div class=\"col-12\">\r\n        <p><strong>FEATURES</strong></p>\r\n      </div>\r\n      <div id=\"expId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/skill-explaination\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/skill-icon.svg\" />\r\n            <h1>Skill Explaination</h1>\r\n            <p class=\"text-fade\">\r\n              Definitions of the abbreviations for skill levels and engineer background.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"engiId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/list-engineer\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/engineer-icon.svg\" />\r\n            <h1>Engineers</h1>\r\n            <p class=\"text-fade\">\r\n              Searchable list of all TS Engineers.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"addId\" class=\"col-6 col-sm-6 col-lg-3 card-box\" *ngIf=\"canEdit\">\r\n        <a routerLink=\"/home/add-skill\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/add-engineer-icon.svg\" />\r\n            <h1>Manager Engineer</h1>\r\n            <p class=\"text-fade\">\r\n              Add, update or delete engineers from the engineer page.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div id=\"addId\" class=\"col-6 col-sm-6 col-lg-3 card-box\" *ngIf=\"!canEdit\">\r\n        <div class=\"card shadow-sm\">\r\n          <img class=\"card-icon\" src=\"assets/img/add-engineer-icon.svg\" />\r\n          <h1>Add Engineer</h1>\r\n          <p class=\"text-fade\">\r\n            Add, update or delete engineers from the engineer page.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"machineId\" class=\"col-6 col-sm-6 col-lg-3 card-box\">\r\n        <a routerLink=\"/home/machine-maker\">\r\n          <div class=\"card shadow-sm\">\r\n            <img class=\"card-icon\" src=\"assets/img/machine-maker-icon.svg\" />\r\n            <h1>Manage Machine Maker</h1>\r\n            <p class=\"text-fade\">\r\n              Add, update or delete machine makers.\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</main>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\"\r\n  [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SkillService } from '../../shared/services/skillservice.service';\r\nimport { TechnicianService } from '../../shared/services/technicianservice.service';\r\nimport { Technician } from '../../shared/models/technician.model';\r\nimport { AppSettings } from '../../shared/constant/TSconstands.component';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { DialogService } from '../../shared/services/dialog.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-engineer-detail',\r\n    templateUrl: './engineer-detail.component.html',\r\n  })\r\n\r\n  export class EngineerDetailsComponent implements OnInit {\r\n    Engineer : Technician;\r\n    totalItem : number;\r\n    currentPage: number=1;\r\n    userid:number;\r\n    userName :string;\r\n    isActive : boolean = true;\r\n    text = \"Set as Inactive\";\r\n    constructor(private spinner: NgxSpinnerService,\r\n      private route: ActivatedRoute,private router: Router,\r\n      public skillService : SkillService,\r\n      public technicianService : TechnicianService,\r\n      private dialogService : DialogService,\r\n      private _snackBar: MatSnackBar) { }\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get('id');\r\n        this.userName = localStorage.getItem('UserName');\r\n        this.userid = parseInt(id);\r\n\r\n        this.spinner.show();\r\n        this.Engineer = new Technician();\r\n        \r\n        this.technicianService.GetEngineerDetail(AppSettings.GetQuerySeach(1,1,this.userName,this.userid,)).subscribe((data:any)=>{     \r\n          this.Engineer= data.objects;\r\n          this.isActive = !this.Engineer.Deactive;\r\n          this.text = this.Engineer.Deactive ? \"Set as Active\" : \"Set as Inactive\";\r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n          this.spinner.hide();\r\n        })\r\n    }\r\n\r\n    pageChanged(event: any): void {\r\n        this.spinner.show();\r\n        this.currentPage = event.page;\r\n        this.technicianService.GetListEngineer(AppSettings.GetQuerySeach(10,event.page,\"\",13,)).subscribe((data:any)=>{\r\n          this.Engineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n    \r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n          this.spinner.hide();\r\n        })\r\n    \r\n      }\r\n\r\n      UpdateStatus() {\r\n        let mes = this.isActive ? \"De-active technician ? \" : \"Active technician ?\";\r\n        let type = this.isActive ? 1: 0;\r\n        this.dialogService.openConfirmDialog(mes).afterClosed()\r\n        .subscribe((res)=>{\r\n          if(res){\r\n            this.technicianService.UpdateStatusOfTechnician(AppSettings.GetQuerySeach(10,1,\"\",this.Engineer.TechId,type)).subscribe((data:any)=>{\r\n              this._snackBar.open('Update success',\"\", {\r\n                duration: 5000,\r\n                horizontalPosition: \"center\",\r\n                verticalPosition: \"top\",\r\n              });\r\n              this.Engineer.Deactive = !this.Engineer.Deactive;\r\n              this.text = this.Engineer.Deactive ? \"Set as Active\" : \"Set as Inactive\";\r\n              this.spinner.hide();\r\n            },\r\n            (err : HttpErrorResponse)=>{\r\n              this.spinner.hide();\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n    gotoAddEngineer(){\r\n        this.router.navigate(['home/add-skill']);\r\n    }\r\n\r\n    GotoEdit(){\r\n        this.router.navigate(['home/update-detail/',this.userid]);\r\n    }\r\n\r\n    BackHome() {\r\n      this.router.navigate(['/home/list-engineer']);\r\n    }\r\n  }\r\n  \r\n","<section class=\"container\">\r\n  <div class=\"row form-header\">\r\n    <div class=\"col-12 right-box d-flex justify-content-end\">\r\n      <div class=\"d-flex right-box-btn\" *ngIf=\"Engineer.CanEdit\">\r\n        <div class=\"top-add\">\r\n          <button id=\"editId\" (click)=\"GotoEdit()\" [disabled]=\"Engineer.Deactive\" type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\"\r\n            data-target=\"#addMachineModal\">\r\n            <i class=\"fa fa-pencil\"></i>\r\n            <span class=\"item-label\">Edit</span>\r\n          </button>\r\n          <button (click)=\"UpdateStatus()\" style=\"margin-left: 10px;\" id=\"editId\"  type=\"button\" class=\"btn btn-default\" \r\n          >\r\n          <span class=\"item-label\">{{text}}</span>\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>BASIC INFORMATION</strong></p>\r\n      <div class=\"eng-details shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td class=\"title\">Initial</td>\r\n              <td class=\"info\">{{Engineer.Initials}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Name</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.DisplayName}}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Email</td>\r\n              <td class=\"info\">\r\n                <p><a href=\"mailto:{{Engineer.EmailAddress}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{Engineer.EmailAddress}}</a></p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Stationed</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.StationName}}</p>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"title\">Professional Background</td>\r\n              <td class=\"info\">\r\n                <p>\r\n                  <span *ngFor=\"let subitem of Engineer.Professionals; let i = index\"\r\n                    tooltip=\"{{subitem.Explain}}\">{{subitem.SkillCode}}<span\r\n                      *ngIf=\"i < Engineer.Professionals.length -1\">,</span></span>\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Status</td>\r\n              <td class=\"info\">\r\n                <p *ngIf=\"!Engineer.Deactive\">Activate</p>\r\n                <p *ngIf=\"Engineer.Deactive\">Inactive</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Remark</td>\r\n              <td class=\"info\">\r\n                <p>{{Engineer.Remark}}</p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>MACHINE SKILLS</strong></p>\r\n      <div class=\"eng-details shadow-sm table-responsive\" *ngFor=\"let item of Engineer.listAssign\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td class=\"title\">Machine Name</td>\r\n              <td class=\"info\">{{item.Maker.MakerName}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Machine Application</td>\r\n              <td class=\"info\">{{item.Maker.Model}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Skill(s)</td>\r\n              <!-- <td class=\"info\">\r\n                  <p>{{item.SkillName}}</p>\r\n                </td> -->\r\n              <td class=\"info\">\r\n                <p>\r\n                  <span *ngFor=\"let subitem of item.MachineSkill; let i = index\" tooltip=\"{{subitem.Explain}}\"\r\n                    [adaptivePosition]=\"false\">\r\n                    {{subitem.MSName}}<span *ngIf=\"i < item.MachineSkill.length -1\">,</span>\r\n                  </span>\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"title\">Skill Summary</td>\r\n              <td class=\"info\">\r\n                <p>\r\n                  {{item.Comment}}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <pagination [totalItems]=\"totalItem\" [(ngModel)]=\"currentPage\" (pageChanged)=\"pageChanged($event)\"></pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { MachineSkillAssign } from \"./../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { MachineSkill } from \"./../../shared/models/MachineSkill.model\";\r\nimport { Maker } from \"./../../shared/models/maker.model\";\r\nimport { Industry } from \"./../../shared/models/Industry.model\";\r\nimport { Technician } from \"./../../shared/models/technician.model\";\r\nimport { TechnicianService } from \"./../../shared/services/technicianservice.service\";\r\nimport { ProfessionalSkill } from \"./../../shared/models/ProfessionalSkill.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TypeaheadMatch } from \"ngx-bootstrap\";\r\nimport { TechMachineIndutry } from \"../../shared/models/techmachineind.model\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { PrettyRadioChange } from \"ngx-pretty-checkbox\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\n\r\n@Component({\r\n  selector: \"app-engineer-skill\",\r\n  templateUrl: \"./add-engineer.component.html\",\r\n  styleUrls: [\"./add-engineer.component.css\"],\r\n})\r\nexport class AddTechSkillComponent implements OnInit {\r\n  listIndustries: Array<Industry>;\r\n  listEnIndustries: Array<Industry>;\r\n  listStationed: Array<Stationed>;\r\n  TechMachineIndutry: Array<TechMachineIndutry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listAssignmachine: Array<MachineSkillAssign>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  StationedSource: Observable<any>;\r\n  userSource: Observable<any>;\r\n  industrySource: Observable<any>;\r\n  machinedustrySource: Observable<any>;\r\n  asyncSelected: string;\r\n  staasyncSelected: string;\r\n  indasyncSelected: string;\r\n  maasyncSelected: string;\r\n  comment: string;\r\n  model: string;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  IndResult = false;\r\n  StaResult = false;\r\n  machineNoReuslt = false;\r\n\r\n  technician: Technician;\r\n  selectedInd: number;\r\n  selectedRelMachine: Maker;\r\n  userName: string;\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public techService: TechnicianService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.technician = new Technician();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.listAssignmachine = new Array<MachineSkillAssign>();\r\n    this.TechMachineIndutry = new Array<TechMachineIndutry>();\r\n    this.selectedRelMachine = new Maker();\r\n\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listEnIndustries = data.objects;\r\n          this.technician.IndustryId = this.listEnIndustries[0].IndId;\r\n          this.selectedInd = this.listIndustries[0].IndId;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.technician.StationId = this.listStationed[0].StationId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n    //Get Source to search Initial\r\n    this.userSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.techService.SearchUserInitialByCountry(\r\n          AppSettings.GetQuerySeach(10, 1, token, null, 1, this.userName)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.StationedSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.staasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.techService.SearchStationed(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.industrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.indasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n    //Get Source to search maker name\r\n    this.machinedustrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.maasyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, token, null, this.selectedInd)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  onOptionsSelected(event) {\r\n    this.selectedInd = event;\r\n  }\r\n  onOptionsIndSelected(event) {\r\n    this.technician.IndustryId = event;\r\n  }\r\n  onOptionsStationSelected(event) {\r\n    this.technician.StationId = event;\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\" || eve != this.selectedRelMachine.MakerName) {\r\n      this.selectedRelMachine = new Maker();\r\n    }\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    let checkisesxit = this.technician.listAssign.find(\r\n      (item) => item.Maker.RelMachineId == this.selectedRelMachine.RelMachineId\r\n    );\r\n\r\n      let assignskill = new MachineSkillAssign();\r\n      assignskill.Maker = new Maker();\r\n      assignskill.MachineSkill = new Array<MachineSkill>();\r\n\r\n      assignskill.Maker.MakerName = this.selectedRelMachine.MakerName;\r\n      assignskill.Maker.Model = this.selectedRelMachine.Model;\r\n      assignskill.Maker.MaId = this.selectedRelMachine.MaId;\r\n      assignskill.Maker.RelMachineId = this.selectedRelMachine.RelMachineId;\r\n\r\n      this.listAssignmachine.push(assignskill);\r\n      this.technician.listAssign.push(assignskill);\r\n      assignskill.Comment = \"\";\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n      this.model = \"\";\r\n    \r\n  }\r\n\r\n  onTextChange(eve: any, item: MachineSkillAssign) {\r\n    item.Comment = eve;\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  RemoveMachineSkill(item: MachineSkillAssign) {\r\n    this.technician.listAssign.splice(\r\n      this.technician.listAssign.findIndex(\r\n        (x) => x.Maker.RelMachineId == x.Maker.RelMachineId\r\n      ),\r\n      1\r\n    );\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician = e.item;\r\n    this.technician.StationId = this.listStationed[0].StationId;\r\n    this.technician.IndustryId = this.listEnIndustries[0].IndId;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n  }\r\n\r\n  indtypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician.IndustryId = e.item.IndId;\r\n  }\r\n\r\n  statypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.technician.StationId = e.item.StationId;\r\n  }\r\n\r\n  matypeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.selectedRelMachine = e.item;\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  indtypeaheadNoResults(event: boolean): void {\r\n    this.IndResult = event;\r\n  }\r\n  statypeaheadNoResults(event: boolean): void {\r\n    this.StaResult = event;\r\n  }\r\n\r\n  matypeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  changeOps(event: PrettyRadioChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  onFilterChange(eve: any, model: MachineSkillAssign) {\r\n    let checkexisted = this.technician.listAssign.filter(\r\n      (x) => x.Maker.RelMachineId == model.Maker.RelMachineId\r\n    )[0];\r\n    if (checkexisted != null) {\r\n      let value = eve.target.value;\r\n      let number = parseInt(eve.target.value);\r\n      if (eve.target.checked) {\r\n        let machine = new MachineSkill();\r\n        machine.MSId = value;\r\n        checkexisted.MachineSkill.push(machine);\r\n        checkexisted.SkillNumber = checkexisted.SkillNumber + number;\r\n      } else {\r\n        checkexisted.SkillNumber = checkexisted.SkillNumber - number;\r\n        checkexisted.MachineSkill.splice(\r\n          checkexisted.MachineSkill.findIndex((x) => x.MSId == value),\r\n          1\r\n        );\r\n      }\r\n      console.log(checkexisted.SkillNumber);\r\n    }\r\n  }\r\n\r\n  SubmitEngineer() {\r\n    this.spinner.show();\r\n    let Userid = parseInt(localStorage.getItem(\"UserNo\"));\r\n    this.technician.UpdatedBy = Userid;\r\n    this.techService.AddTechnicianSkill(this.technician).subscribe(\r\n      (data: any) => {\r\n        this.toastr.success(\"Add machine skill for technician success\");\r\n        this.spinner.hide();\r\n        this.technician = new Technician();\r\n        this.technician.listAssign = new Array<MachineSkillAssign>();\r\n        this.asyncSelected = \"\";\r\n        this.indasyncSelected = \"\";\r\n        this.staasyncSelected = \"\";\r\n\r\n        this.router.navigate([\"home/engineer-detail/\", data]);\r\n      },\r\n      (err: HttpErrorResponse) => {}\r\n    );\r\n  }\r\n\r\n  trackByItems(index: number, item: MachineSkillAssign) {}\r\n\r\n  ValidateSubmitEngineer() {\r\n    let flag = false;\r\n    if (this.technician.listAssign.length < 1) {\r\n      flag = true;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"container\">\r\n    <form class=\"form-engineer\">\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Engineer Details</h3>\r\n            <p>Please fill in all the engineer details below</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row info\">\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"initial\">Initial</label>\r\n              <input class=\"form-control input-icon\" id=\"initial\" type=\"text\" [(ngModel)]=\"asyncSelected\"\r\n                [typeahead]=\"userSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\"\r\n                typeaheadOptionField=\"Initials\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n                name=\"asyncSelected\" placeholder=\"&#61442; Search User Initial\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"stationed\">Stationed</label>\r\n              <select name=\"stationed\" class=\"form-control\" [disabled]=\"technician.UserName == null\"\r\n                [(ngModel)]=\"technician.StationId\" (ngModelChange)='onOptionsStationSelected($event)'>\r\n                <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                  {{item.StationName}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"industry\">Industry</label>\r\n              <select style=\"margin-top:3px;\" name=\"industry\" class=\"form-control\"\r\n                [disabled]=\"technician.UserName == null\" [(ngModel)]=\"technician.IndustryId\"\r\n                (ngModelChange)='onOptionsIndSelected($event)'>\r\n                <option *ngFor=\"let item of listEnIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n            </div> -->\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Remark</label>\r\n              <textarea class=\"form-control\" id=\"Remark\" name=\"Remark\" [(ngModel)]=\"technician.Remark\"\r\n                type=\"text\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Full Name</label>\r\n              <input class=\"form-control\" id=\"fullName\" name=\"fullName\" [(ngModel)]=\"technician.DisplayName\"\r\n                type=\"text\">\r\n            </div>\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"uname\">Username</label>\r\n              <input class=\"form-control\" id=\"userName\" name=\"userName\" [(ngModel)]=\"technician.UserName\" type=\"text\">\r\n            </div> -->\r\n            <div class=\"form-group\">\r\n              <label for=\"mail\">Email Address</label>\r\n              <input class=\"form-control\" name=\"EmailAddress\" [(ngModel)]=\"technician.EmailAddress\" id=\"emailAdd\"\r\n                type=\"email\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Title</label>\r\n              <input class=\"form-control\" id=\"Title\" name=\"Title\" [(ngModel)]=\"technician.Title\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Professional Background</h3>\r\n            <p>Please select engineer professional background</p>\r\n          </div>\r\n          <div class=\"info eng-background col-12\">\r\n            <div class=\"form-check\" *ngFor=\"let item of listProskill\">\r\n              <p-checkbox name=\"animation\" (change)=\"changeOps($event)\" [value]=\"item.SkillId\" outline=\"true\"\r\n                shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                {{item.SkillName}}\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Machine/Maker Skills</h3>\r\n            <p>Please assign machine skill to each machine</p>\r\n          </div>\r\n          <div class=\"info col-12\">\r\n            <div class=\"add-machine\" >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\"  fxLayoutAlign=\"space-between center\" >\r\n                <div fxFlex=\"35\">\r\n                  <input class=\"input-icon\" placeholder=\"&#61442; Search machine maker\" type=\"text\"\r\n                  [(ngModel)]=\"maasyncSelected\" [typeahead]=\"machinedustrySource\"\r\n                  (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"matypeaheadOnSelect($event)\"\r\n                  [typeaheadOptionsLimit]=\"10\" typeaheadOptionField=\"MakerName\" autocomplete=\"off\"\r\n                  (typeaheadNoResults)=\"matypeaheadNoResults($event)\" name=\"maasyncSelected\"\r\n                  (ngModelChange)=\"onChange($event)\">\r\n                </div>\r\n                <div fxFlex=\"15\">\r\n                  <input class=\"input-icon\" placeholder=\"Application\" type=\"text\" [(ngModel)]=\"selectedRelMachine.Model\" name=\"Model\">\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                  <select class=\"shadow-sm\" style=\"width:100%\" name=\"selectedInd\" [(ngModel)]=\"selectedInd\"\r\n                (ngModelChange)='onOptionsSelected($event)'>\r\n                <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n                </div>\r\n                \r\n                <div fxFlex=\"20\">\r\n                  <button id=\"addRowId\" type=\"button\" class=\"btn btn-default\" (click)=\"AddMachineSkill()\"\r\n                [disabled]=\"selectedRelMachine.MaId == 0\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n                </div>\r\n      \r\n              </div>             \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 section-title\" *ngIf=\"technician.listAssign.length > 0\">\r\n            <br>\r\n            <p><strong>List of Machine/Maker Skills</strong></p>\r\n          </div>\r\n          <div class=\"info col-12\" *ngFor=\"let item of technician.listAssign;  trackBy: trackByItems\">\r\n            <div class=\"selected-machine shadow-sm\">\r\n              <div class=\"btn-icon-group\">\r\n                <button (click)=\"RemoveMachineSkill(item)\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\"><span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span></button>\r\n\r\n              </div>\r\n              <p class=\"font-weight-bold\" id=\"machineSkill\">{{item.Maker.MakerName}} -\r\n                {{item.Maker.Model}}</p>\r\n              <div class=\"check-container\">\r\n                <div class=\"form-check\" *ngFor=\"let subitem of listMachineSkill\">\r\n                  <input value=\"{{subitem.MSId}}\" (change)=\"onFilterChange($event,item)\" class=\"form-check-input\"\r\n                    id=\"installation\" type=\"checkbox\">\r\n                  <label class=\"form-check-label\" for=\"bg1\">{{subitem.MSName}}</label>\r\n                </div>\r\n              </div>\r\n              <textarea name=\"comment\" (ngModel)=\"item.Comment\" (ngModelChange)=\"onTextChange($event, item)\"\r\n                placeholder=\"Please write your comment for this machine skill\">{{item.Comment}}</textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 form-footer\">\r\n            <button (click)=\"BackHome()\" class=\"btn btn-o btn-cancel\" type=\"button\">\r\n              <span aria-hidden=\"true\">Cancel</span>\r\n            </button>\r\n            <button (click)=\"SubmitEngineer()\" [disabled]=\"ValidateSubmitEngineer()\" style=\"margin-left: 5px;\"\r\n              id=\"addEngineerId\" type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Add Engineer</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { SkillService } from \"./../shared/services/skillservice.service\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TechnicianService } from \"../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { User } from \"../shared/models/user.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userName: string;\r\n  userClaims: User;\r\n  canEdit: boolean = false;\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => result.matches),\r\n      shareReplay()\r\n    );\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private technicianService: TechnicianService,\r\n    private breakpointObserver: BreakpointObserver\r\n  ) {}\r\n  ngOnInit() {\r\n    this.technicianService.getUserClaims().subscribe((data: User) => {\r\n      this.userClaims = data;\r\n      localStorage.setItem(\"UserNo\", this.userClaims.UserId.toString());\r\n      localStorage.setItem(\"UserName\", this.userClaims.UserName);\r\n\r\n      this.userName = localStorage.getItem(\"UserName\");\r\n\r\n      this.skillService\r\n        .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.canEdit = data;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","<body class=\"main\">\r\n  <header>\r\n    <mat-sidenav-container class=\"sidenav-container\">\r\n      <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n        [ngClass]=\"{ hidden: !(isHandset$ | async) }\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n        [opened]=\"(isHandset$ | async) === false\" (click)=\"drawer.toggle()\">\r\n        <mat-toolbar>\r\n          <img class=\"logo\" src=\"assets/img/logo.png\" />\r\n        </mat-toolbar>\r\n        <mat-nav-list>\r\n          <!-- <mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/dashboard\">\r\n            <mat-icon>home</mat-icon>DASHBOARD\r\n          </mat-list-item> -->\r\n          <mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/skill-explaination\">\r\n            <mat-icon>home</mat-icon>SKILL EXPLAINATION\r\n          </mat-list-item>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/list-engineer\">ENGINEERS</a>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/add-skill\">\r\n            <mat-icon>build_circle</mat-icon>MANAGE ENGINEERS\r\n          </a>\r\n          <a mat-list-item routerLinkActive=\"mobile-active\" routerLink=\"/home/machine-maker\">MACHINE MAKER</a>\r\n\r\n        </mat-nav-list>\r\n      </mat-sidenav>\r\n      <mat-sidenav-content>\r\n        <mat-toolbar>\r\n          <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\r\n            *ngIf=\"isHandset$ | async\">\r\n            <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n          </button>\r\n\r\n          <img class=\"logo\" src=\"assets/img/logo.png\" />\r\n\r\n          <div [ngClass]=\"{hidden: isHandset$ | async }\" class=\"containerflex\">\r\n            <!-- <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/dashboard\">DASHBOARD\r\n            </a> -->\r\n            <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/list-engineer\">SEARCH ENGINEERS</a>\r\n            <a *ngIf=\"canEdit\" mat-list-item routerLinkActive=\"active\" routerLink=\"/home/add-skill\">ADD/MANAGE ENGINEERS</a>           \r\n            <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/machine-maker\">ADD/MANAGE MACHINE MAKER</a>\r\n            <!-- <a mat-list-item routerLinkActive=\"active\" routerLink=\"/home/skill-explaination\">HELP \r\n            </a>-->\r\n          </div>\r\n\r\n          <span class=\"example-spacer\"></span>\r\n          <span class=\"header-user-name\">\r\n          </span>\r\n          <button color=\"accent\" matTooltip=\"Logout\" (click)=\"Logout()\" mat-icon-button class=\"example-icon\"\r\n            aria-label=\"Example icon-button with menu icon\">\r\n            <mat-icon>login</mat-icon>\r\n          </button>\r\n        </mat-toolbar>\r\n        <!-- Add Content Here -->\r\n      </mat-sidenav-content>\r\n    </mat-sidenav-container>\r\n  </header>\r\n\r\n\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</body>\r\n","import { AppRoutingModule } from \"./../app-routing.module\";\r\nimport { FilterComponent } from \"./pop-up/filter/filter.component\";\r\nimport { ListEngineerComponent } from \"./list-engineers/list-engineer.component\";\r\nimport { MachineMakerComponent } from \"./machine-maker/machine-maker.component\";\r\nimport { ExplainationComponent } from \"./skillexplaination/explaination.component\";\r\nimport { AuthGuard } from \"./../auth/auth.guard\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { TypeaheadModule, TooltipModule, ModalModule } from \"ngx-bootstrap\";\r\nimport { PaginationModule } from \"ngx-bootstrap\";\r\nimport { AddTechSkillComponent } from \"./engineer-skill/add-engineer.component\";\r\nimport { NgxPrettyCheckboxModule } from \"ngx-pretty-checkbox\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { EngineerDetailsComponent } from \"./engineer-detail/engineer-detail.component\";\r\nimport { UpdateTechSkillComponent } from \"./update-engineer/update-engineer.component\";\r\nimport { MaterialModule } from \"../shared/materials/material-module\";\r\nimport { ConfirmationDialogComponent } from \"./pop-up/confirmation/confirmation.component\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { ListboxModule } from \"primeng/listbox\";\r\nimport { FilterMakerComponent } from \"./pop-up/filter-maker/filter-maker.component\";\r\nimport { DownloadMachineDialogComponent } from \"./pop-up/download-machine/download-machine.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { PrimeModule } from \"../shared/ng-prime/prime.module\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"home\",\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"list-engineer\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent,\r\n      },\r\n      {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n      },\r\n      {\r\n        path: \"skill-explaination\",\r\n        component: ExplainationComponent,\r\n      },\r\n      {\r\n        path: \"machine-maker\",\r\n        component: MachineMakerComponent,\r\n      },\r\n      {\r\n        path: \"list-engineer\",\r\n        component: ListEngineerComponent,\r\n      },\r\n      {\r\n        path: \"add-skill\",\r\n        component: AddTechSkillComponent,\r\n      },\r\n      {\r\n        path: \"engineer-detail/:id\",\r\n        component: EngineerDetailsComponent,\r\n      },\r\n      {\r\n        path: \"update-detail/:id\",\r\n        component: UpdateTechSkillComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"home/dashboard\",\r\n    pathMatch: \"full\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    TypeaheadModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgxPrettyCheckboxModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    ListboxModule,\r\n    PrimeModule\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ExplainationComponent,\r\n    MachineMakerComponent,\r\n    AddTechSkillComponent,\r\n    ListEngineerComponent,\r\n    EngineerDetailsComponent,\r\n    UpdateTechSkillComponent,\r\n    ConfirmationDialogComponent,\r\n    FilterComponent,\r\n    FilterMakerComponent,\r\n    DownloadMachineDialogComponent,\r\n    RegisterComponent\r\n  ],\r\n  entryComponents: [\r\n    ConfirmationDialogComponent,\r\n    FilterComponent,\r\n    FilterMakerComponent,\r\n    DownloadMachineDialogComponent\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n","import { filter, mergeMap } from \"rxjs/operators\";\r\nimport { Stationed } from \"./../../shared/models/Stationed.model\";\r\nimport { FilterModel } from \"./../../shared/models/FilterModel.model\";\r\nimport { Component, OnInit, TemplateRef } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TypeaheadMatch, BsModalService, BsModalRef } from \"ngx-bootstrap\";\r\nimport { DialogService } from \"../../shared/services/dialog.service\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-list-engineer\",\r\n  templateUrl: \"./list-engineer.component.html\",\r\n  styleUrls: [\"./list-engineer.component.css\"],\r\n})\r\nexport class ListEngineerComponent implements OnInit {\r\n  listEngineer: Array<Technician>;\r\n  totalItem: number;\r\n  currentPage: number = 1;\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  selectedProskill: Array<number>;\r\n  selectedMachineSkill: Array<number>;\r\n  listStationed: Array<Stationed>;\r\n  selectedInd: number;\r\n  selectedSta: number;\r\n  dataSource: Observable<any>;\r\n  asyncSelected: string;\r\n  machineDataSource: Observable<any>;\r\n  machineasyncSelected: string;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  isFilter: boolean = false;\r\n  isClear: boolean = false;\r\n  value = \"Clear me\";\r\n  selected = \"1\";\r\n  disableSelect = new FormControl(false);\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n  };\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private modalService: BsModalService,\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    public userService: UserService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.selectedProskill = new Array<number>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.selectedMachineSkill = new Array<number>();\r\n    this.listEngineer = new Array<Technician>();\r\n    this.listStationed = new Array<Stationed>();\r\n    this.filter = new FilterModel();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter.pagenumber = 1;\r\n    this.filter.pagesize = 10;\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.canEdit = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0].IndId;\r\n          this.filter.Industry = this.listIndustries[0].IndId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.technicianService\r\n      .GetListStationedAll(AppSettings.GetQuerySeach(50, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.selectedSta = this.listStationed[0].StationId;\r\n          this.filter.Stationed = this.listStationed[0].StationId;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n          this.selectedMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n          this.selectedProskill = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.dataSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.technicianService.SearchTechnicianByName(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n\r\n  }\r\n\r\n  GetlistEngineer(){\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  ExportListEngineers(){\r\n    let currentdate = new Date();\r\n    let url = \"http://xcasrvmds001/ReportServer/Pages/ReportViewer.aspx?/LODReport/TSSkillMatrix/rptTechnician&rs:Format=EXCELOPENXML&rs:ClearSession=True&Time=\"+\r\n        currentdate.getDate().toString() +\r\n        (currentdate.getMonth() + 1).toString() +\r\n        currentdate.getFullYear().toString() +\r\n        currentdate.getMilliseconds().toString();\r\n\r\n        this.spinner.show();\r\n    this.technicianService\r\n        .DownloadTechniciansReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        .subscribe(\r\n          (blob) => {\r\n            FileSaver.saveAs(blob, \"Technician-skills-matrix\" + \".xlsx\");\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (error) => {\r\n            console.log(\"Something went wrong\");\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.spinner.show();\r\n    this.currentPage = event.page;\r\n    if (this.isFilter) {\r\n      this.spinner.show();\r\n      this.userService.UpdatePageNumber(this.currentPage);\r\n      this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.isClear = true;\r\n          this.isFilter = true;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else {\r\n      this.technicianService\r\n        .GetListEngineer(AppSettings.GetQuerySeach(10, event.page, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.listEngineer = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  openFilerModal() {\r\n    this.filter = this.userService.getTechFilter();\r\n    this.dialogService\r\n      .openDiagnosedDialog(this.filter)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.selected = \"1\";\r\n          this.filter = res;\r\n          this.spinner.show();\r\n          this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n            (data: any) => {\r\n              this.listEngineer = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.isClear = true;\r\n              this.isFilter = true;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.router.navigate([\"home/engineer-detail/\", e.item.TechId]);\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\") {\r\n      //Get list Machine maker\r\n      this.technicianService\r\n        .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.listEngineer = data.objects;\r\n            this.totalItem = data.totalItem;\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  gotoAddEngineer() {\r\n    this.router.navigate([\"home/add-skill\"]);\r\n  }\r\n\r\n  ClearFilter() {\r\n    this.spinner.show();\r\n    this.selected = \"1\";\r\n    this.technicianService\r\n      .GetListEngineer(AppSettings.GetQuerySeach(10, 1, \"\", 13,parseInt(this.selected)))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listEngineer = data.objects;\r\n          this.isClear = false;\r\n          this.isFilter = false;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  SubmitFilter() {\r\n    this.spinner.show();\r\n    this.technicianService.FilterListEngineer(this.filter).subscribe(\r\n      (data: any) => {\r\n        this.listEngineer = data.objects;\r\n        this.totalItem = data.totalItem;\r\n        this.isClear = true;\r\n        this.spinner.hide();\r\n        this.filter = new FilterModel();\r\n        this.filter.professionals = new Array<number>();\r\n        this.filter.machineSkills = new Array<number>();\r\n        this.filter.pagenumber = 1;\r\n        this.filter.pagesize = 10;\r\n        this.filter.Industry = this.listIndustries[0].IndId;\r\n        this.filter.Stationed = this.listStationed[0].StationId;\r\n        this.modalRef.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  changeTypeaheadMachineLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadMachineOnSelect(e: TypeaheadMatch): void {}\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n}\r\n","<section class=\"container top-container\">\r\n    <div class=\"row form-header\">\r\n      <div class=\"col-12 right-box d-flex\">     \r\n        <div class=\"top-drop\">\r\n          <input class=\"input-icon\" type=\"text\" placeholder=\"&#61442;  Search engineer name\" [(ngModel)]=\"asyncSelected\"\r\n            [typeahead]=\"dataSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n            (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\"\r\n            typeaheadOptionField=\"UserName\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n            name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\" />\r\n          <!-- <mat-form-field class=\"example-form-field\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n            <mat-label>search name</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"asyncSelected\" [typeahead]=\"dataSource\"\r\n              (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\r\n              [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\" typeaheadOptionField=\"UserName\" autocomplete=\"off\"\r\n              (typeaheadNoResults)=\"typeaheadNoResults($event)\" name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\">\r\n          </mat-form-field> -->\r\n        </div>\r\n        <div class=\"d-flex right-box-btn\">\r\n          <div class=\"top-add\">\r\n            <button type=\"button\" class=\"btn btn-default btn-o\" (click)=\"openFilerModal()\"><i\r\n                class=\"fa fa-filter\"></i><span class=\"item-label\">Filters</span>\r\n            </button>\r\n          </div>\r\n          <!-- <div class=\"top-add\" *ngIf=\"canEdit\">\r\n            <button id=\"addId\" (click)=\"gotoAddEngineer()\" type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\"\r\n              data-target=\"#addMachineModal\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Add Engineer</span>\r\n            </button>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [hidden]=\"isFilter\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Select status</mat-label>\r\n        <mat-select (selectionChange)=\"GetlistEngineer()\" [(ngModel)]=\"selected\">\r\n          <mat-option value=\"1\">Active</mat-option>\r\n          <mat-option value=\"2\">Inactive</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <button (click)=\"ExportListEngineers()\" mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a home icon\">\r\n        <mat-icon>get_app</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"table-list table-responsive\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Initial</th>\r\n                <th>Name</th>\r\n                <th>Title</th>\r\n                <th>Industry</th>\r\n                <th>Stationed</th>\r\n                <th>Skills <i class=\"fa fa-info-circle\" data-toggle=\"tooltip\"\r\n                    title=\"More info at skill explanation page\"></i></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"shadow-sm\" *ngFor=\"let item of listEngineer\">\r\n                <td><a [routerLink]=\"['/home/engineer-detail',item.TechId]\">{{item.Initials}}</a></td>\r\n                <td>{{item.DisplayName}}</td>\r\n                <td>{{item.Title}}</td>\r\n                <td>{{item.IndustryName}}</td>\r\n                <td>{{item.StationName}}</td>\r\n                <td>\r\n                  <p><span *ngFor=\"let subitem of item.Professionals;let i = index\"\r\n                      tooltip=\"{{subitem.Explain}}\">{{subitem.SkillCode}}<span\r\n                        *ngIf=\"i < item.Professionals.length -1\">,</span></span></p>\r\n                </td>\r\n                <td class=\"action\"></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <pagination [totalItems]=\"totalItem\" name=\"currentPage\" [(ngModel)]=\"currentPage\"\r\n              (pageChanged)=\"pageChanged($event)\"></pagination>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" *ngIf=\"isClear\" (click)=\"ClearFilter()\"\r\n              class=\"btn btn-secondary pull-right\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>    \r\n  <ng-template #template>\r\n    <div aria-hidden=\"true\" aria-labelledby=\"searchModalLAbel\" class=\"search-modal\" id=\"searchModal\" role=\"dialog\"\r\n      tabindex=\"-1\">\r\n      <form class=\"search-form\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button aria-label=\"Close\" class=\"close\" type=\"button\" (click)=\"modalRef.hide()\"><span aria-hidden=\"true\"><i\r\n                  class=\"fa fa-times-circle\"></i></span></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <h5 class=\"modal-title\" id=\"searchModalLabel\">SEARCH ENGINEER</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Username/Fullname</label>\r\n                  <input name=\"filtername\" [(ngModel)]=\"filter.name\" class=\"form-control\" id=\"username\" type=\"text\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Professional Skills</label>\r\n                  <div class=\"form-check-fix\" *ngFor=\"let item of listProskill\">\r\n                    <p-checkbox (change)=\"changeProskillMachines($event)\" name=\"animation\" [value]=\"item.SkillId\"\r\n                      outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                      {{item.SkillName}}\r\n                    </p-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"username\">Machine Skills</label>\r\n                  <div class=\"form-check-fix\" *ngFor=\"let item of listMachineSkill\">\r\n                    <p-checkbox (change)=\"changeSkillMachines($event)\" name=\"animation\" [value]=\"item.MSId\"\r\n                      outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                      {{item.MSCode}}\r\n                    </p-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group option-list\">\r\n                  <label for=\"username\">Industry</label>\r\n                  <select name=\"industry\" class=\"shadow-sm\" [(ngModel)]=\"filter.Industry\"\r\n                    (ngModelChange)='onOptionsSelected($event)'>\r\n                    <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                      {{item.Description}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group option-list\">\r\n                  <label for=\"username\">Stationed</label>\r\n                  <select name=\"stationed\" class=\"shadow-sm\" [(ngModel)]=\"filter.Stationed\"\r\n                    (ngModelChange)='onOptionsStationSelected($event)'>\r\n                    <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                      {{item.StationName}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-o\" data-dismiss=\"modal\" (click)=\"modalRef.hide()\" type=\"button\">Close</button>\r\n            <button class=\"btn btn-default\" (click)=\"SubmitFilter()\" type=\"button\"><i class=\"fa fa-search\"></i>\r\n              Search</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div><!-- Modal End-->\r\n  </ng-template>\r\n</section>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { DialogService } from \"./../../shared/services/dialog.service\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { Industry } from \"./../../shared/models/Industry.model\";\r\nimport { MachinesMaker } from \"./../../shared/ViewModels/MachinesMaker.model\";\r\nimport { JsonMachineMaker } from \"./../../shared/ViewModels/JsonMachineMaker.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n} from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { TypeaheadMatch, BsModalRef, BsModalService } from \"ngx-bootstrap\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { UserService } from \"../../shared/services/user.service\";\r\nimport { FilterModel } from \"../../shared/models/FilterModel.model\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\n\r\n@Component({\r\n  selector: \"app-machinemaker\",\r\n  templateUrl: \"./machine-maker.component.html\",\r\n  styleUrls: [\"./machine-maker.component.css\"],\r\n})\r\nexport class MachineMakerComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  listIndustries1: Array<Industry>;\r\n  listIndustries2: Array<Industry>;\r\n  listIndustriesUpdate1: Array<Industry>;\r\n  listIndustriesUpdate2: Array<Industry>;\r\n  jsonIndustry: Array<JsonMachineMaker>;\r\n  listMachineMaker: MachinesMaker;\r\n  dataSource: Observable<any>;\r\n  asyncSelected: string;\r\n  userName: string;\r\n  canEdit: boolean = false;\r\n  typeaheadLoading: boolean;\r\n  noResult = false;\r\n  totalItem: number;\r\n  currentPage: number = 1;\r\n  selectedMaker: MachinesMaker;\r\n  listIndustry: Array<Industry>;\r\n  filter = new FilterModel();\r\n  isFilter: boolean = false;\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private spinner: NgxSpinnerService,\r\n    private modalService: BsModalService,\r\n    private changeDetection: ChangeDetectorRef,\r\n    private userService: UserService,\r\n    private technicianService: TechnicianService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.listIndustry = new Array<Industry>();\r\n    this.listIndustries1 = new Array<Industry>();\r\n    this.listIndustries2 = new Array<Industry>();\r\n    this.listIndustriesUpdate1 = new Array<Industry>();\r\n    this.listIndustriesUpdate2 = new Array<Industry>();\r\n    this.jsonIndustry = new Array<JsonMachineMaker>();\r\n    this.listMachineMaker = new MachinesMaker();\r\n    this.selectedMaker = new MachinesMaker();\r\n    this.listMachineMaker.industries = new Array<Industry>();\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n\r\n    // Get list Industry\r\n    this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          let count = 1;\r\n          this.listIndustry = data.objects;\r\n\r\n          data.objects.forEach((object) => {\r\n            if (count <= 6) {\r\n              this.listIndustries1.push(object);\r\n              this.listIndustriesUpdate1.push(object);\r\n            } else {\r\n              this.listIndustries2.push(object);\r\n              this.listIndustriesUpdate2.push(object);\r\n            }\r\n            count = count + 1;\r\n          });\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.skillService\r\n      .CheckPermission(AppSettings.GetQuerySeach(10, 1, this.userName, 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.canEdit = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    //Get list Machine maker\r\n    this.skillService\r\n      .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    //Get Source to search maker name\r\n    this.dataSource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) =>\r\n        this.skillService.SearchMachineMaker(\r\n          AppSettings.GetQuerySeach(10, 1, token)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if (e) {\r\n      this.spinner.show();\r\n    } else {\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListIndustriesMachineByKey(\r\n        AppSettings.GetQuerySeach(10, 1, \"\", e.item.MaId)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  openFilerModal() {\r\n    this.filter = this.userService.getMakerFilter();\r\n    this.dialogService\r\n      .openFilterMachineMakerDialog(this.filter)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.filter = res;\r\n          this.spinner.show();\r\n          this.skillService.FilterListMakers(this.filter).subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.isFilter = true;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  OpenDownloadMachineReport(){\r\n    let currentdate = new Date();\r\n    \r\n\r\n    this.dialogService.openDownloadMachineDialog().afterClosed()\r\n    .subscribe((res) => {\r\n      \r\n      if (res) {\r\n        console.log(res.data);\r\n        let url = \"http://xcasrvmds001/ReportServer/Pages/ReportViewer.aspx?/LODReport/TSSkillMatrix/rptMachineMaker\"+\r\n    \"&IndustryID=\"\r\n    +res.data.IndId+\r\n    \"&rs:Format=EXCELOPENXML&rs:ClearSession=True&Time=\"+\r\n        currentdate.getDate().toString() +\r\n        (currentdate.getMonth() + 1).toString() +\r\n        currentdate.getFullYear().toString() +\r\n        currentdate.getMilliseconds().toString();\r\n        // this.spinner.show();\r\n        // this.skillService\r\n        // .DownloadMachinesReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        // .subscribe(\r\n        //   (blob) => {\r\n        //     FileSaver.saveAs(blob, \"Technician-skills-matrix\" + \".xlsx\");\r\n\r\n        //     this.spinner.hide();\r\n        //   },\r\n        //   (error) => {\r\n        //     console.log(\"Something went wrong\");\r\n        //     this.spinner.hide();\r\n        //   }\r\n        // );\r\n        this.spinner.show();\r\n        this.technicianService\r\n        .DownloadTechniciansReport(AppSettings.GetQuerySeach(10, 1, url, 13))\r\n        .subscribe(\r\n          (blob) => {\r\n            FileSaver.saveAs(blob, \"Machine-maker\" + \".xlsx\");\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (error) => {\r\n            console.log(\"Something went wrong\");\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  openConfirmDeleteMachineMaker(makerId: number) {\r\n    this.dialogService\r\n      .openConfirmDialog(\"Are you sure want to delete Maker ?\")\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.spinner.show();\r\n          this.skillService\r\n            .DeleteMaker(AppSettings.GetQuerySeach(10, 1, \"\", makerId))\r\n            .subscribe(\r\n              (data: any) => {\r\n                //Get list Machine maker\r\n                this.toastr.success(\"Delete maker success\");\r\n                this.skillService\r\n                  .GetListIndustriesMachine(\r\n                    AppSettings.GetQuerySeach(10, 1, \"\", 13)\r\n                  )\r\n                  .subscribe(\r\n                    (data: any) => {\r\n                      this.jsonIndustry = data.objects;\r\n                      this.totalItem = data.totalItem;\r\n                      this.spinner.hide();\r\n                    },\r\n                    (err: HttpErrorResponse) => {\r\n                      this.spinner.hide();\r\n                    }\r\n                  );\r\n              },\r\n              (err: HttpErrorResponse) => {\r\n                this.spinner.hide();\r\n                this.toastr.error(err.error);\r\n              }\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(eve: any) {\r\n    if (eve == \"\") {\r\n      //Get list Machine maker\r\n      this.skillService\r\n        .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.jsonIndustry = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.spinner.show();\r\n\r\n    this.skillService.AddMachineMaker(this.listMachineMaker).subscribe(\r\n      (data: any) => {\r\n        //Get list Machine maker\r\n        this.skillService\r\n          .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n          .subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        //end get list\r\n      },\r\n      (err: HttpErrorResponse) => {}\r\n    );\r\n  }\r\n\r\n  UpdateMaker() {\r\n    this.spinner.show();\r\n\r\n    this.skillService.UpdateMakerIndustry(this.selectedMaker).subscribe(\r\n      (data: any) => {\r\n        //Get list Machine maker\r\n        this.toastr.success(\"Update machine skill for technician success\");\r\n        this.skillService\r\n          .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n          .subscribe(\r\n            (data: any) => {\r\n              this.jsonIndustry = data.objects;\r\n              this.totalItem = data.totalItem;\r\n              this.spinner.hide();\r\n            },\r\n            (err: HttpErrorResponse) => {\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        //end get list\r\n        this.modalRef.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n        this.toastr.error(err.error);\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, makerId: number) {\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetSelectedMachineMaker(AppSettings.GetQuerySeach(10, 1, \"\", makerId))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.modalRef = this.modalService.show(template);\r\n          this.selectedMaker = data;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  CheckCondition(eve: any) {\r\n    let number = this.selectedMaker.industries.findIndex((x) => x.IndId == eve);\r\n    if (number != -1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.currentPage = event.page;\r\n    this.userService.UpdatePageNumberOfMachine(this.currentPage);\r\n    if (this.isFilter) {\r\n      this.skillService.FilterListMakers(this.filter).subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n          this.isFilter = true;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else {\r\n      this.skillService\r\n        .GetListIndustriesMachine(\r\n          AppSettings.GetQuerySeach(10, this.currentPage, \"\", 13)\r\n        )\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.jsonIndustry = data.objects;\r\n            this.totalItem = data.totalItem;\r\n\r\n            this.spinner.hide();\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  changeSkillMachines(event: PrettyCheckBoxChange) {\r\n    let id = parseInt(event.value);\r\n\r\n    if (event.checked) {\r\n      let industry = new Industry();\r\n      industry.IndId = id;\r\n      this.selectedMaker.industries.push(industry);\r\n    } else {\r\n      this.selectedMaker.industries.splice(\r\n        this.selectedMaker.industries.findIndex((x) => x.IndId == id),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  ClearFilter() {\r\n    this.isFilter = false;\r\n    this.currentPage = 1;\r\n    this.skillService\r\n      .GetListIndustriesMachine(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.jsonIndustry = data.objects;\r\n          this.totalItem = data.totalItem;\r\n\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  BackHome() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  onFilterChange(eve: any, model: Industry) {\r\n    if (eve.target.checked) {\r\n      this.listMachineMaker.industries.push(model);\r\n    } else {\r\n      this.listMachineMaker.industries.splice(\r\n        this.listMachineMaker.industries.findIndex(\r\n          (x) => x.IndId == model.IndId\r\n        ),\r\n        1\r\n      );\r\n    }\r\n  }\r\n}\r\n","<main>\r\n  <section class=\"container top-container\">\r\n    <form>\r\n      <div class=\"row form-header\">\r\n        <div class=\"col-12 right-box d-flex\">\r\n          <div class=\"top-drop\">\r\n            <input class=\"input-icon\" type=\"text\" placeholder=\"&#61442;  Search machine maker\"\r\n              [(ngModel)]=\"asyncSelected\" [typeahead]=\"dataSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n              (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"1000\"\r\n              typeaheadOptionField=\"MakerName\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n              name=\"asyncSelected\" (ngModelChange)=\"onChange($event)\" />\r\n          </div>\r\n          <div class=\"d-flex right-box-btn\">\r\n            <div class=\"top-add\">\r\n              <button type=\"button\" class=\"btn btn-default btn-o\" (click)=\"openFilerModal()\"><i\r\n                  class=\"fa fa-filter\"></i><span class=\"item-label\">Filters</span>\r\n              </button>\r\n            </div>\r\n           \r\n            <div class=\"top-add\" *ngIf=\"canEdit\">\r\n              <button type=\"button\" class=\"btn btn-default\" data-toggle=\"modal\" data-target=\"#addMachineModal\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"table-list table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Maker Name</th>\r\n                  <th>Industry</th>\r\n                  <th>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start end\" > <button style=\"padding-top: 10px;\" matTooltip=\"Download list machine/maker\" (click)=\"OpenDownloadMachineReport()\" mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\r\n                      <mat-icon>get_app</mat-icon>\r\n                    </button></div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr class=\"shadow-sm\" *ngFor=\"let item of jsonIndustry\">\r\n                  <td>{{ item.MakerName }}</td>\r\n                  <td>{{ item.industries }}</td>\r\n                  <td class=\"action\">\r\n                    <button *ngIf=\"canEdit\" (click)=\"openModal(template, item.MaId)\" mat-icon-button\r\n                      aria-label=\"Example icon-button with a heart icon\">\r\n                      <mat-icon class=\"icon-title green-text\">edit</mat-icon>\r\n                    </button>\r\n                    <button *ngIf=\"canEdit\" (click)=\"openConfirmDeleteMachineMaker(item.MaId)\" mat-icon-button\r\n                      aria-label=\"Example icon-button with a heart icon\">\r\n                      <mat-icon class=\"icon-title red-text\">delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <pagination [totalItems]=\"totalItem\" name=\"currentPage\" [(ngModel)]=\"currentPage\"\r\n              (pageChanged)=\"pageChanged($event)\"></pagination>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" *ngIf=\"isFilter\" (click)=\"ClearFilter()\"\r\n              class=\"btn btn-secondary pull-right\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <!-- Modal -->\r\n    <div class=\"modal fade search-modal\" id=\"addMachineModal\" tabindex=\"-1\" role=\"dialog\"\r\n      aria-labelledby=\"searchModalLAbel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"search-form\" #machinemakerForm=\"ngForm\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"modal-title\" id=\"searchModalLabel\">\r\n                    ADD MACHINE MAKER\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"machineMaker\">Machine/Maker Name</label>\r\n                    <input class=\"form-control\" name=\"MakerName\" id=\"machineMaker\" #MakerName=\"ngModel\" required\r\n                      [(ngModel)]=\"listMachineMaker.MakerName\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Description</label>\r\n                    <textarea class=\"form-control\" id=\"desc\" name=\"MakerDescription\" #MakerDescription=\"ngModel\"\r\n                      required [(ngModel)]=\"listMachineMaker.MakerDescription\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Industry</label>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-check\" *ngFor=\"let item of listIndustries1\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"pharma\"\r\n                            (change)=\"onFilterChange($event, item)\" />\r\n                          <label class=\"form-check-label\" for=\"pharma\">{{\r\n                            item.Description\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-check\" *ngFor=\"let item of listIndustries2\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"oilgas\"\r\n                            (change)=\"onFilterChange($event, item)\" />\r\n                          <label class=\"form-check-label\" for=\"oilgas\">{{\r\n                            item.Description\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-o\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button [disabled]=\"\r\n                  !machinemakerForm.form.valid ||\r\n                  listMachineMaker.industries.length < 1\r\n                \" (click)=\"onSubmit()\" id=\"addNewId\" type=\"submit\" data-dismiss=\"modal\" class=\"btn btn-default\">\r\n                <i class=\"fa fa-plus\"></i> Add machine\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <!-- Modal End-->\r\n\r\n    <!-- Modal -->\r\n\r\n    <ng-template #template>\r\n      <div class=\"search-modal\" id=\"addMachineModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"searchModalLAbel\"\r\n        aria-hidden=\"true\">\r\n        <form class=\"search-form\" #UpdatemachinemakerForm=\"ngForm\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n                <span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <h5 class=\"modal-title\" id=\"searchModalLabel\">\r\n                    UPDATE MACHINE MAKER\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"machineMaker\">Machine/Maker Name</label>\r\n                    <input class=\"form-control\" name=\"MakerName\" id=\"machineMaker\" #MakerName=\"ngModel\" required\r\n                      [(ngModel)]=\"selectedMaker.MakerName\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Description</label>\r\n                    <textarea class=\"form-control\" id=\"desc\" name=\"MakerDescription\" #MakerDescription=\"ngModel\"\r\n                      required [(ngModel)]=\"selectedMaker.MakerDescription\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"username\">Industry</label>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div *ngFor=\"let item of listIndustriesUpdate1\">\r\n                          <p-checkbox name=\"animation\" (change)=\"changeSkillMachines($event)\"\r\n                            [checked]=\"CheckCondition(item.IndId)\" [value]=\"item.IndId\" outline=\"true\" shape=\"curve\"\r\n                            color=\"primary\" animation=\"smooth\">\r\n                            {{ item.Description }}\r\n                          </p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div *ngFor=\"let item of listIndustriesUpdate2\">\r\n                          <p-checkbox name=\"animation\" (change)=\"changeSkillMachines($event)\"\r\n                            [checked]=\"CheckCondition(item.IndId)\" [value]=\"item.IndId\" outline=\"true\" shape=\"curve\"\r\n                            color=\"primary\" animation=\"smooth\">\r\n                            {{ item.Description }}\r\n                          </p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" (click)=\"modalRef.hide()\" class=\"btn btn-o\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button [disabled]=\"\r\n                  !UpdatemachinemakerForm.form.valid ||\r\n                  selectedMaker.industries.length < 1\r\n                \" (click)=\"UpdateMaker()\" id=\"addNewId\" type=\"submit\" data-dismiss=\"modal\" class=\"btn btn-default\">\r\n                <i class=\"fa fa-plus\"></i> Update machine\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Modal End-->\r\n  </section>\r\n</main>\r\n<ngx-spinner bdOpacity=\"0.6\" bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\">Loading...</p>\r\n</ngx-spinner>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { OnInit,Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-pnf',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class GeneralPageNotFoundComponent implements OnInit {\r\n  isRemember:boolean=false;\r\n  isLoginError : boolean = false;\r\n  errormes :string;\r\n  max: number = 10;\r\n  rate: number = 0;\r\n  isReadonly: boolean = false;\r\n\r\n  overStar: number | undefined;\r\n  percent: number;\r\n \r\n  hoveringOver(value: number): void {\r\n    this.overStar = value;\r\n    this.percent = (value / this.max) * 100;\r\n  }\r\n \r\n  resetStar(): void {\r\n    this.overStar = void 0;\r\n  }\r\n\r\n\r\n  constructor(private router : Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<div class=\"main\">\r\n        <div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 355\">\r\n        <g id=\"ocean\">\r\n          <path id=\"sky\" class=\"st0\" d=\"M0 0h1000v203.1H0z\"/>\r\n          <linearGradient id=\"water_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"500\" y1=\"354\" x2=\"500\" y2=\"200.667\">\r\n            <stop offset=\"0\" stop-color=\"#fff\"/>\r\n            <stop offset=\"1\" stop-color=\"#b3dcdf\"/>\r\n          </linearGradient>\r\n          <path id=\"water\" fill=\"url(#water_1_)\" d=\"M0 200.7h1000V354H0z\"/>\r\n          <path id=\"land\" class=\"st0\" d=\"M0 273.4h1000V354H0z\"/>\r\n          <g id=\"bumps\">\r\n            <path class=\"st0\" d=\"M0 275.2s83.8-28 180-28 197 28 197 28H0z\"/>\r\n          <path class=\"st0\" d=\"M377 275.2s54.7-28 117.5-28 128.6 28 128.6 28H377z\"/>\r\n          <path class=\"st0\" d=\"M623.2 275.2s83.7-28 179.9-28 196.9 28 196.9 28H623.2z\"/>\r\n            <path class=\"st0\" d=\"M-998 275.2s83.8-28 180-28 197 28 197 28h-377z\"/>\r\n            <path class=\"st0\" d=\"M-621 275.2s54.7-28 117.5-28 128.6 28 128.6 28H-621z\"/>\r\n            <path class=\"st0\" d=\"M-374.8 275.2s83.7-28 179.9-28S2 275.2 2 275.2h-376.8z\"/>\r\n          </g>\r\n        </g>\r\n        <g id=\"tracks\">\r\n          <path class=\"st2\" d=\"M9.8 282.4h-3L0 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M19.8 282.4h-3L10 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M29.8 282.4h-3L20 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M39.8 282.4h-3L30 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M49.8 282.4h-3L40 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M59.8 282.4h-3L50 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M69.8 282.4h-3L60 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M79.8 282.4h-3L70 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M89.8 282.4h-3L80 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M99.8 282.4h-3L90 307.6h3z\"/>\r\n          <path class=\"st2\" d=\"M109.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M119.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M129.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M139.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M149.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M159.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M169.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M179.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M189.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M199.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M209.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M219.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M229.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M239.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M249.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M259.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M269.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M279.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M289.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M299.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M309.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M319.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M329.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M339.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M349.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M359.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M369.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M379.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M389.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M399.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M409.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M419.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M429.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M439.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M449.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M459.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M469.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M479.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M489.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M499.8 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M1000 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M990 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M980 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M970 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M960 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M950 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M940 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M930 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M920 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M910 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M900 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M890 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M880 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M870 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M860 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M850 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M840 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M830 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M820 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M810 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M800 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M790 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M780 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M770 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M760 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M750 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M740 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M730 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M720 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M710 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M700 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M690 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M680 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M670 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M660 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M650 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M640 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M630 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M620 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M610 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M600 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M590 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M580 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M570 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M560 282.4h-3l-6.8 25.2h3z\"/>\r\n          <g>\r\n            <path class=\"st2\" d=\"M-490.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-480.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-470.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-460.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-450.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-440.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-430.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-420.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-410.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-400.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-390.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-380.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-370.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-360.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-350.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-340.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-330.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-320.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-310.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-300.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-290.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-280.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-270.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-260.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-250.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-240.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-230.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-220.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-210.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-200.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-190.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-180.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-170.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-160.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-150.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-140.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-130.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-120.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-110.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-100.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-90.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-80.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-70.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-60.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-50.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-40.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-30.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-20.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-10.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M-.2 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M500 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M490 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M480 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M470 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M460 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M450 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M440 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M430 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M420 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M410 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M400 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M390 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M380 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M370 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M360 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M350 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M340 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M330 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M320 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M310 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M300 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M290 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M280 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M270 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M260 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M250 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M240 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M230 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M220 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M210 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M200 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M190 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M180 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M170 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M160 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M150 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M140 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M130 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M120 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M110 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M100 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M90 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M80 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M70 282.4h-3l-6.8 25.2h3z\"/>\r\n            <path class=\"st2\" d=\"M60 282.4h-3l-6.8 25.2h3z\"/>\r\n          </g>\r\n          <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\r\n          <path class=\"st3\" d=\"M-499.5 300.2H1000v5.1H-499.5z\"/>\r\n          <path class=\"st3\" d=\"M-499.5 283.8H1000v2.8H-499.5z\"/>\r\n        </g>\r\n        <g id=\"cloudsAll\">\r\n          <path id=\"cloud1\" class=\"st4\" d=\"M19.5 69.7s-21.3.5-25-12.2c0 0-4.3-21.3 16-21.8 0 0-2.1-12.2 12.2-14.9 0 0 15-3.2 21.3 6.9 0 0 3.6-20.7 17.8-22.3 0 0 24-3 26.6 13.1 0 0 .1 9.5-2.8 13.5 0 0 9.5-15 26.5-4.8 0 0 12.1 7.9 7 20.2 0 0 16 4.8 10.1 18.1 0 0-10.2 8.5-17.1-1.1 0 0-5.5 16-32.5 16 0 0-19.1 2.1-27-13.3 0 0 .5 10.1-13.3 10.6-.1 0-20.3 3.2-19.8-8z\"/>\r\n          <path id=\"cloud3\" class=\"st4\" d=\"M836 132s-18.3 2.1-22.2-4.9c0 0-4.9-11.8 12.5-13.8 0 0-2.5-6.8 9.7-9.6 0 0 12.7-3.1 18.7 2.1 0 0 2-12.2 14-14.3 0 0 16.6-3.3 23.7 2.1 0 0 4.8 3.9 2.4 6.5 0 0 3.1-4.8 18.4-.4 0 0 10.9 3.5 7.2 11 0 0 13.8-1.5 9.7 9.5 0 0-4.1 10.8-15.5 4.8 0 0-3.1 5.6-26.4 7.9 0 0-16.3 2.8-24-5.3 0 0 1 5.7-10.8 7.2-.1.1-17.2 3.6-17.4-2.8z\"/>\r\n          <path id=\"cloud2\" class=\"st4\" d=\"M19.3 159.5s-15.9.6-18.8-5.1c0 0-3.4-9.5 11.7-10.1 0 0-1.7-5.5 9-6.9 0 0 11.2-1.7 16 2.8 0 0 2.5-9.4 13.1-10.3 0 0 17.9-1.8 20 5.4 0 0 .2 4.3-2 6.1 0 0 6.9-6.9 19.8-2.6 0 0 9.1 3.4 5.5 9 0 0 6.5 0 4.5 6.7 0 0-2.6 5.6-9.6 1 0 0-4 7.3-24.2 7.7 0 0-14.2 1.3-20.4-5.5 0 0 .5 4.5-9.8 5 0 .1-15 1.8-14.8-3.2z\"/>\r\n          <path id=\"cloud4\" class=\"st4\" d=\"M370.3 109.5s15.9.6 18.8-5.1c0 0 3.4-9.5-11.7-10.1 0 0 1.7-5.5-9-6.9 0 0-11.2-1.7-16 2.8 0 0-2.5-9.4-13.1-10.3 0 0-17.9-1.8-20 5.4 0 0-.2 4.3 2 6.1 0 0-6.9-6.9-19.8-2.6 0 0-9.1 3.4-5.5 9 0 0-12 1.9-7.7 8 0 0 7.5 4 12.8-.2 0 0 4 7.3 24.2 7.7 0 0 14.2 1.3 20.4-5.5 0 0-.5 4.5 9.8 5 0 0 15.1 1.7 14.8-3.3z\"/>\r\n          <path id=\"cloud5\" class=\"st4\" d=\"M511.7 12.4s-21.3-.3-25 7c0 0-4.3 12.2 16 12.5 0 0-2.1 7 12.2 8.6 0 0 15 1.8 21.3-4 0 0 3.6 11.9 17.8 12.8 0 0 19.5 1.6 27-4.4 0 0 5-4.4 2.1-6.7 0 0 4.1 4.4 21.2-1.5 0 0 12.1-4.6 7-11.6 0 0 16-2.8 10.1-10.4 0 0-10.2-4.9-17.1.6 0 0-5.5-9.2-32.5-9.2 0 0-19.1-1.2-27 7.6 0 0 .5-5.8-13.3-6.1-.1.2-20.3-1.6-19.8 4.8z\"/>\r\n        </g>\r\n        <g id=\"train\">\r\n          <path fill=\"#b3dcdf\" d=\"M344.5 248.5h507.2v37.8H344.5z\"/>\r\n          <g id=\"wheels\">\r\n            <circle class=\"st6\" cx=\"384.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M384.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"416.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M416.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"469.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M469.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"734.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M734.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"766.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M766.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n            <circle class=\"st6\" cx=\"821.1\" cy=\"285.6\" r=\"15.1\"/>\r\n            <path class=\"st2\" d=\"M821.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\r\n          </g>\r\n          <path id=\"bracefront\" class=\"st7\" d=\"M383.2 285.6h88.1\"/>\r\n          <path id=\"braceback\" class=\"st7\" d=\"M733.2 285.6h88.1\"/>\r\n          <g id=\"car-layers\">\r\n            <path id=\"car\" class=\"st8\" d=\"M321.8 300.7v-32.4s1.2.7-1.5-2.4v-29.1s3.1-11.6 10.7-21.1c0 0 7.6-12 15.5-17.5h1.3s10.2-4.9 30.9-28h.6s-.9-1.4 0-2.7c0 0 10.1-10.5 21-12.3 0 0 9.4-1.8 20.2-1.8h47.7V151H492v-1.1h10.1v1.1h19v2.2s8.2.9 19.2-4.2c0 0 1.4-1.1 28.8-1.1h291.5v6.8h7.5v2.2s12.2-.6 12.2 9.8V177l-10-.1v57.9s14.9-.5 14.9 10.2c0 0 1 9-14.9 8.9v3.8H719.5s-2.4.1-4.3 3l-15 29s-2.9 5.1-10.8 5.1H504.3s-2.9.1-6.1-5l-13.1-25s-4.5-7.1-11.8-7.1H369v2.4s-3.2 1.3-7.1 8.7L351.4 289s-2.9 6.3-6.9 6.4h-17.8l-4.9 5.3z\"/>\r\n            <path id=\"streamline-outine\" class=\"st8\" d=\"M320.3 236.6s1.4-6.8 4.4-11.3c0 0 .1-2.3 23.2-6.3l78-16.6s103.3-21.1 134.9-26.1c0 0 93.3-16 120.5-17.9 0 0 57.6-4.3 100-4.1h88.9v63.4s-10.3 5.4-17.1 5.3c0 0-305.6 4.9-366.3 8.1 0 0-100.3 4.8-119.1 6.8 0-.1-46.6 1.2-47.4-1.3z\"/>\r\n            <g id=\"window-grate\">\r\n              <path class=\"st9\" d=\"M739.5 182.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 177.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 172.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 167.6H854\"/>\r\n              <path class=\"st9\" d=\"M739.5 161.4H854v26.1H739.5z\"/>\r\n            </g>\r\n            <path class=\"st9\" d=\"M320.3 257.8h549.9\"/>\r\n            <g id=\"Text\">\r\n              <text transform=\"translate(377.037 230.025)\" class=\"st8 st10\" font-size=\"21\">\r\n                404\r\n              </text>\r\n              <text transform=\"translate(659.5 213.994)\" class=\"st8 st10\" font-size=\"24.025\">\r\n              Page not found.\r\n              </text>\r\n            </g>\r\n            <g id=\"ladders\">\r\n              <g id=\"ladder-f\">\r\n                <path id=\"front-ladder\" class=\"st8\" d=\"M433.8 258.4h17.8v34.8h-17.8z\"/>\r\n                <path id=\"fb-rung\" class=\"st9\" d=\"M433.8 281.1h17.7\"/>\r\n                <path id=\"ft-rung\" class=\"st9\" d=\"M433.8 268.6h17.7\"/>\r\n              </g>\r\n              <g id=\"ladder-b\">\r\n                <path id=\"ladder-back\" class=\"st8\" d=\"M851.8 257.8h17.8v34.8h-17.8z\"/>\r\n                <path id=\"bt-rung\" class=\"st9\" d=\"M851.8 268.6h17.7\"/>\r\n                <path id=\"bb-rung\" class=\"st9\" d=\"M851.8 281.1h17.7\"/>\r\n              </g>\r\n            </g>\r\n            <path id=\"window-front\" class=\"st8\" d=\"M350.5 196.4s-.4 3.9 15.2 4.3l32.3-30.3s-18.2 1.1-19-.8l-28.5 26.8z\"/>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n        </div>\r\n      </div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n@Component({\r\n  selector: \"app-confirmation-dialog\",\r\n  templateUrl: \"./confirmation.component.html\",\r\n  styleUrls: [\"./confirmation.component.css\"],\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>\r\n  ) {}\r\n  ngOnInit() {}\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n  <p class=\"text-center\">{{data.message}}</p>\r\n</div>\r\n<br>\r\n<div mat-dialog-actions class=\"confirm-dialog\">\r\n  <button mat-flat-button (click)=\"closeDialog()\" class=\"no-button\" [mat-dialog-close]=\"false\">NO</button>\r\n  <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"true\">YES</button>\r\n</div>\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {MatSelectModule} from '@angular/material/select'\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\n\r\n@Component({\r\n  selector: \"app-download-machine-dialog\",\r\n  templateUrl: \"./download-machine.component.html\",\r\n  styleUrls: [\"./download-machine.component.css\"],\r\n})\r\n\r\nexport class DownloadMachineDialogComponent implements OnInit {\r\n    listIndustries = new Array<Industry>()\r\n    selected = new Industry();\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<DownloadMachineDialogComponent>,\r\n    public skillService: SkillService,\r\n    private spinner: NgxSpinnerService,\r\n  ) {}\r\n  ngOnInit() {\r\n    this.skillService\r\n    .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n    .subscribe(\r\n      (res: any) => {\r\n        this.listIndustries = res.objects;\r\n        this.selected = this.listIndustries[0];\r\n        this.spinner.hide();\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  save(){\r\n      this.dialogRef.close({data: this.selected})\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    <mat-toolbar color=\"primary\">\r\n        <span class=\"fill-remaining-space text-center\">DOWNLOAD MACHINE MAKER</span>\r\n        <button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n      <div class=\"header-download\" fxLayout=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-between stretch\">\r\n        <p class=\"text-center\">Please choose Industry of Machine Macker</p>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Select an industry</mat-label>\r\n            <mat-select [(value)]=\"selected\" cdkFocusInitial>\r\n                <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                    {{industry.Description}}\r\n                  </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n      </div>\r\n    \r\n  </div>\r\n  <br>\r\n  <div mat-dialog-actions class=\"confirm-dialog\">\r\n    <div class=\"col-md-12 text-center footer-group\">\r\n        <button mat-flat-button (click)=\"closeDialog()\" class=\"no-button\" [mat-dialog-close]=\"false\">Cancel</button>\r\n        <button mat-flat-button color=\"primary\" (click)=\"save()\">Download</button>\r\n    </div> \r\n  </div>\r\n  ","import { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MachinesMaker } from \"./../../../shared/ViewModels/MachinesMaker.model\";\r\nimport { OnInit, Component, Inject } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\nimport { FilterModel } from \"../../../shared/models/FilterModel.model\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { TechnicianService } from \"../../../shared/services/technicianservice.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { debounceTime, finalize, switchMap, tap } from \"rxjs/operators\";\r\nimport { AbstractControl, FormControl, ValidatorFn } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserService } from \"../../../shared/services/user.service\";\r\nimport { MatListOption, MatSelectionListChange } from \"@angular/material/list\";\r\n@Component({\r\n  selector: \"app-filter-maker\",\r\n  templateUrl: \"./filter-maker.component.html\",\r\n  styleUrls: [\"./filter-maker.component.css\"],\r\n})\r\nexport class FilterMakerComponent implements OnInit {\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listIndustries1 = new Array<Industry>();\r\n  listIndustries2 = new Array<Industry>();\r\n  searchMoviesCtrl = new FormControl();\r\n  filteredMovies: Array<MachinesMaker>;\r\n  filteredOptions: Observable<MachinesMaker[]>;\r\n  isLoading = false;\r\n  errorMsg: string;\r\n  value = \"\";\r\n  selectedCategories: any[];\r\n\r\n  selectedMachine = new MachinesMaker();\r\n  constructor(\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    private userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<FilterMakerComponent>\r\n  ) {}\r\n  ngOnInit() {\r\n    this.listIndustries = new Array<Industry>();\r\n\r\n    this.filter = new FilterModel();\r\n    this.filteredMovies = new Array<MachinesMaker>();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter = this.data.model;\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listIndustries1 = this.listIndustries.slice(\r\n            1,\r\n            this.listIndustries.length / 2 + 1\r\n          );\r\n          this.listIndustries2 = this.listIndustries.filter(\r\n            (x) => this.listIndustries1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    this.searchMoviesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap((token: string) =>\r\n          this.skillService\r\n            .SearchMachineMaker(AppSettings.GetQuerySeach(10, 1, token))\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              })\r\n            )\r\n        )\r\n      )\r\n      .subscribe((data: MachinesMaker[]) => {\r\n        if (data == undefined) {\r\n          this.filteredMovies = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = data;\r\n        }\r\n      });\r\n\r\n    this.searchMoviesCtrl.setValue(\"Nancy\");\r\n  }\r\n\r\n  UpdateListIndustry(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listIndustry.push(event.option.value.IndId);\r\n    } else {\r\n      this.filter.listIndustry.splice(\r\n        this.filter.listIndustry.indexOf(event.option.value.IndId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewMakerFilter(this.filter);\r\n  }\r\n\r\n  IndustriesSelected(value: Industry) {\r\n    return this.filter.listIndustry.indexOf(value.IndId) === -1 ? false : true;\r\n  }\r\n\r\n  displayFn(state) {\r\n    return state.MakerName;\r\n  }\r\n\r\n  onOptionsSelected(event) {\r\n    this.filter.Industry = event;\r\n  }\r\n\r\n  onOptionsStationSelected(event) {\r\n    this.filter.Stationed = event;\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close(this.filter);\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\nexport function forbiddenNamesValidator(Services: any[]): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const index = Services.findIndex((Service) => {\r\n      return new RegExp(\"^\" + Service.MakerName + \"$\").test(control.value);\r\n    });\r\n    return index < 0 ? { forbiddenNames: { value: control.value } } : null;\r\n  };\r\n}\r\n\r\nexport function RequireMatch(control: AbstractControl) {\r\n  const selection: any = control.value;\r\n  if (typeof selection === \"string\") {\r\n    return { incorrect: true };\r\n  }\r\n  return null;\r\n}\r\n","<div mat-dialog-content>\r\n  <mat-toolbar color=\"primary\">\r\n    <span class=\"fill-remaining-space text-center\"></span>\r\n    <div\r\n        fxLayout=\"row\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"end center\"\r\n      ><button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar>\r\n  <div fxLayout=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-between stretch\">\r\n    <!-- full name -->\r\n    <div class=\"working-time\" fxFlex=\"100\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input matInput [(ngModel)]=\"filter.name\" placeholder=\"Machine Maker Name\" cdkFocusInitial />\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-selection-list (selectionChange)=\"UpdateListIndustry($event)\" #Industry1 fxFlex=\"50\" fxLayout=\"column\"\r\n        fxLayoutAlign=\"start center\">\r\n        <mat-list-option color=\"primary\" checkboxPosition=\"before\" [selected]=\"IndustriesSelected(item)\"\r\n          *ngFor=\"let item of listIndustries1\" [value]=\"item\">\r\n          {{ item.Description }}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n      <mat-selection-list (selectionChange)=\"UpdateListIndustry($event)\" #Industry2 fxFlex=\"50\" fxLayout=\"column\"\r\n        fxLayoutAlign=\"start center\">\r\n        <mat-list-option color=\"primary\" checkboxPosition=\"before\" *ngFor=\"let item of listIndustries2\"\r\n          [selected]=\"IndustriesSelected(item)\" [value]=\"item\">\r\n          {{ item.Description }}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 text-center footer-group\">\r\n    <button mat-raised-button class=\"no-button\" [mat-dialog-close]=\"false\">\r\n      Cancel\r\n    </button>\r\n    <button [disabled]=\"filter.listIndustry.length === 0 || filter.name === null\" mat-raised-button color=\"primary\"\r\n      type=\"button\" class=\"button\" (click)=\"save()\">\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MachinesMaker } from \"./../../../shared/ViewModels/MachinesMaker.model\";\r\nimport { OnInit, Component, Inject } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SkillService } from \"../../../shared/services/skillservice.service\";\r\n\r\nimport { FilterModel } from \"../../../shared/models/FilterModel.model\";\r\nimport { Industry } from \"../../../shared/models/Industry.model\";\r\nimport { ProfessionalSkill } from \"../../../shared/models/ProfessionalSkill.model\";\r\nimport { MachineSkill } from \"../../../shared/models/MachineSkill.model\";\r\nimport { Stationed } from \"../../../shared/models/Stationed.model\";\r\nimport { AppSettings } from \"../../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { TechnicianService } from \"../../../shared/services/technicianservice.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { PrettyCheckBoxChange } from \"ngx-pretty-checkbox\";\r\nimport { debounceTime, finalize, switchMap, tap } from \"rxjs/operators\";\r\nimport { AbstractControl, FormControl, ValidatorFn } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserService } from \"../../../shared/services/user.service\";\r\nimport { MatListOption, MatSelectionListChange } from \"@angular/material/list\";\r\n@Component({\r\n  selector: \"app-filter\",\r\n  templateUrl: \"./filter.component.html\",\r\n  styleUrls: [\"./filter.component.css\"],\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  filter: FilterModel;\r\n  listIndustries: Array<Industry>;\r\n  listProskill: Array<ProfessionalSkill>;\r\n  listMachineSkill: Array<MachineSkill>;\r\n  listStationed: Array<Stationed>;\r\n  list1 = new Array<Stationed>();\r\n  list2 = new Array<Stationed>();\r\n  listIndustries1 = new Array<Industry>();\r\n  listIndustries2 = new Array<Industry>();\r\n  machineSelection = new Array<MatListOption>();\r\n  proskillSelection = new Array<MatListOption>();\r\n  searchMoviesCtrl = new FormControl();\r\n  filteredMovies: Array<MachinesMaker>;\r\n  filteredOptions: Observable<MachinesMaker[]>;\r\n  isLoading = false;\r\n  errorMsg: string;\r\n  value = \"\";\r\n  selectedCategories: any[];\r\n\r\n  selectedMachine = new MachinesMaker();\r\n  constructor(\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    public technicianService: TechnicianService,\r\n    private userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<FilterComponent>\r\n  ) {}\r\n  ngOnInit() {\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.listStationed = new Array<Stationed>();\r\n    this.filter = new FilterModel();\r\n    this.filteredMovies = new Array<MachinesMaker>();\r\n    this.filter.professionals = new Array<number>();\r\n    this.filter.machineSkills = new Array<number>();\r\n    this.filter = this.data.model;\r\n    this.spinner.show();\r\n\r\n    this.skillService\r\n      .GetListIndustriesAll(AppSettings.GetQuerySeach(20, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.listIndustries1 = this.listIndustries.slice(\r\n            1,\r\n            this.listIndustries.length / 2 + 1\r\n          );\r\n          this.listIndustries2 = this.listIndustries.filter(\r\n            (x) => this.listIndustries1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    this.searchMoviesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap((token: string) =>\r\n          this.skillService\r\n            .SearchMachineMaker(AppSettings.GetQuerySeach(10, 1, token))\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              })\r\n            )\r\n        )\r\n      )\r\n      .subscribe((data: MachinesMaker[]) => {\r\n        if (data == undefined) {\r\n          this.filteredMovies = [];\r\n        } else {\r\n          this.errorMsg = \"\";\r\n          this.filteredMovies = data;\r\n        }\r\n      });\r\n\r\n    this.searchMoviesCtrl.setValue(\"Nancy\");\r\n\r\n    this.spinner.show();\r\n    this.technicianService\r\n      .GetListStationedAll(AppSettings.GetQuerySeach(50, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.list1 = this.listStationed.slice(\r\n            1,\r\n            this.listStationed.length / 2 + 1\r\n          );\r\n          this.list2 = this.listStationed.filter(\r\n            (x) => this.list1.indexOf(x) < 0\r\n          );\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    // if (this.filter.makerId != 0 || this.filter.makerId != null) {\r\n    //   this.skillService\r\n    //     .GetSelectedMachineMaker(\r\n    //       AppSettings.GetQuerySeach(10, 1, \"\", this.filter.makerId)\r\n    //     )\r\n    //     .subscribe(\r\n    //       (data: MachinesMaker[]) => {\r\n    //         this.selectedMachine = data[0];\r\n    //         this.filteredMovies = data;\r\n\r\n    //         this.spinner.hide();\r\n    //       },\r\n    //       (err: HttpErrorResponse) => {\r\n    //         this.spinner.hide();\r\n    //       }\r\n    //     );\r\n    // }\r\n\r\n    this.spinner.show();\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  UpdateStationed(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listStationed.push(event.option.value.StationId);\r\n    } else {\r\n      this.filter.listStationed.splice(\r\n        this.filter.listStationed.indexOf(event.option.value.StationId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  UpdateListIndustry(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.listIndustry.push(event.option.value.IndId);\r\n    } else {\r\n      this.filter.listIndustry.splice(\r\n        this.filter.listIndustry.indexOf(event.option.value.IndId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  StationedSelected(value: Stationed) {\r\n    return this.filter.listStationed.indexOf(value.StationId) === -1\r\n      ? false\r\n      : true;\r\n  }\r\n\r\n  IndustriesSelected(value: Industry) {\r\n    return this.filter.listIndustry.indexOf(value.IndId) === -1 ? false : true;\r\n  }\r\n\r\n  displayFn(state) {\r\n    return state.MakerName;\r\n  }\r\n\r\n  onMachineSkillChanged(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.machineSkills.push(event.option.value.MSId);\r\n    } else {\r\n      this.filter.machineSkills.splice(\r\n        this.filter.machineSkills.indexOf(event.option.value.MSId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  onProSkillChanged(event: MatSelectionListChange) {\r\n    if (event.option.selected) {\r\n      this.filter.professionals.push(event.option.value.SkillId);\r\n    } else {\r\n      this.filter.professionals.splice(\r\n        this.filter.professionals.indexOf(event.option.value.SkillId),\r\n        1\r\n      );\r\n    }\r\n    this.userService.AddNewTechFilter(this.filter);\r\n  }\r\n\r\n  changeSkillMachines(event: PrettyCheckBoxChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.filter.machineSkills.push(number);\r\n      this.filter.machineSkillNumber += number;\r\n    } else {\r\n      this.filter.machineSkills.splice(\r\n        this.filter.machineSkills.indexOf(\r\n          this.filter.machineSkills.indexOf(number)\r\n        ),\r\n        1\r\n      );\r\n      this.filter.machineSkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  changeProskillMachines(event: PrettyCheckBoxChange) {\r\n    let number = parseInt(event.value);\r\n    if (event.checked) {\r\n      this.filter.professionals.push(number);\r\n      this.filter.professionalNumber += number;\r\n    } else {\r\n      this.filter.professionalNumber -= number;\r\n      this.filter.professionals.splice(\r\n        this.filter.professionals.indexOf(\r\n          this.filter.professionals.indexOf(number)\r\n        ),\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  MachineIsSelected(value: MachineSkill) {\r\n    return this.filter.machineSkills.indexOf(value.MSId) !== -1;\r\n  }\r\n\r\n  ProSkillIsSelected(value: ProfessionalSkill) {\r\n    return this.filter.professionals.indexOf(value.SkillId) !== -1;\r\n  }\r\n  onOptionsSelected(event) {\r\n    this.filter.Industry = event;\r\n  }\r\n\r\n  onOptionsStationSelected(event) {\r\n    this.filter.Stationed = event;\r\n  }\r\n\r\n  save() {\r\n    if (this.machineSelection.length > 0) {\r\n      this.machineSelection.forEach((element) => {\r\n        this.filter.machineSkills.push(element.value.MSId);\r\n      });\r\n    }\r\n\r\n    if (this.proskillSelection.length > 0) {\r\n      this.proskillSelection.forEach((element) => {\r\n        if (this.filter.professionals.indexOf(element.value.SkillId) === -1) {\r\n          this.filter.professionals.push(element.value.SkillId);\r\n        }\r\n      });\r\n    }\r\n    this.dialogRef.close(this.filter);\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\nexport function forbiddenNamesValidator(Services: any[]): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const index = Services.findIndex((Service) => {\r\n      return new RegExp(\"^\" + Service.MakerName + \"$\").test(control.value);\r\n    });\r\n    return index < 0 ? { forbiddenNames: { value: control.value } } : null;\r\n  };\r\n}\r\n\r\nexport function RequireMatch(control: AbstractControl) {\r\n  const selection: any = control.value;\r\n  if (typeof selection === \"string\") {\r\n    return { incorrect: true };\r\n  }\r\n  return null;\r\n}\r\n","<div mat-dialog-content>\r\n  <mat-toolbar color=\"primary\">\r\n    <span class=\"fill-remaining-space text-center\"></span>\r\n    <div\r\n        fxLayout=\"row\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"end center\"\r\n      ><button mat-icon-button class=\"close-icon\" [mat-dialog-close]=\"false\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    \r\n  </mat-toolbar>\r\n  <mat-tab-group>\r\n    <mat-tab label=\"Machine/Maker\">\r\n      <div\r\n        fxLayout=\"column\"\r\n        fxLayoutGap=\"20px\"\r\n        fxLayoutAlign=\"space-between stretch\"\r\n      >\r\n        <!-- full name -->\r\n        <div class=\"working-time\" fxFlex=\"100\">\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"filter.name\"\r\n              placeholder=\"User name/Full name\"\r\n              cdkFocusInitial\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\">\r\n          <!-- Professional Skills -->\r\n          <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <p class=\"title\">Professional Skills</p>\r\n            <mat-selection-list\r\n              (selectionChange)=\"onProSkillChanged($event)\"\r\n              #proskills\r\n            >\r\n              <mat-list-option\r\n                color=\"primary\"\r\n                [selected]=\"ProSkillIsSelected(proskill)\"\r\n                checkboxPosition=\"before\"\r\n                *ngFor=\"let proskill of listProskill\"\r\n                [value]=\"proskill\"\r\n              >\r\n                {{ proskill.SkillName }}\r\n              </mat-list-option>\r\n            </mat-selection-list>\r\n          </div>\r\n          <!-- Machine SKills -->\r\n          <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <p class=\"title\">Machine Skills</p>\r\n            <mat-selection-list\r\n              (selectionChange)=\"onMachineSkillChanged($event)\"\r\n              #machineskill\r\n            >\r\n              <mat-list-option\r\n                color=\"primary\"\r\n                [selected]=\"MachineIsSelected(machine)\"\r\n                checkboxPosition=\"before\"\r\n                *ngFor=\"let machine of listMachineSkill\"\r\n                [value]=\"machine\"\r\n              >\r\n                {{ machine.MSName }}\r\n              </mat-list-option>\r\n            </mat-selection-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Industry\">\r\n      <div fxFlex=\"100\">\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateListIndustry($event)\"\r\n          #Industry1\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            checkboxPosition=\"before\"\r\n            [selected]=\"IndustriesSelected(item)\"\r\n            *ngFor=\"let item of listIndustries1\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.Description }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateListIndustry($event)\"\r\n          #Industry2\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of listIndustries2\"\r\n            [selected]=\"IndustriesSelected(item)\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.Description }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Stationed\">\r\n      <!-- Stationed -->\r\n      <div fxFlex=\"100\">\r\n        <mat-selection-list\r\n          (selectionChange)=\"UpdateStationed($event)\"\r\n          #Stationed1\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            [selected]=\"StationedSelected(item)\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of list1\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.StationName }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n        <mat-selection-list\r\n          #Stationed2\r\n          (selectionChange)=\"UpdateStationed($event)\"\r\n          fxFlex=\"50\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <mat-list-option\r\n            color=\"primary\"\r\n            [selected]=\"StationedSelected(item)\"\r\n            checkboxPosition=\"before\"\r\n            *ngFor=\"let item of list2\"\r\n            [value]=\"item\"\r\n          >\r\n            {{ item.StationName }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </div>\r\n    </mat-tab>\r\n    \r\n  </mat-tab-group>\r\n\r\n  <div class=\"col-md-12 text-center footer-group\">\r\n    <button mat-raised-button class=\"no-button\" [mat-dialog-close]=\"false\">\r\n      Cancel\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      class=\"button\"\r\n      (click)=\"save()\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport {MenuItem} from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { debounceTime, finalize, startWith, switchMap, tap } from \"rxjs/operators\";\r\nimport { MatAutocompleteActivatedEvent, MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { MachineSkillAssign } from \"../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { Maker } from \"../../shared/models/maker.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  providers: [MessageService],\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  isLinear = false;\r\n  listAssignmachine= new Array<MachineSkillAssign>();\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  searchMachinesCtrl = new FormControl();\r\n  listProskill = new Array<ProfessionalSkill>();\r\n  listStationed = new Array<Stationed>();\r\n  listMachineSkill = new Array<MachineSkill>();\r\n  activeIndex: number = 1;\r\n  userName : string;\r\n  listIndustries= new Array<Industry>();\r\n  filteredMachines: any;\r\n  selectedInd = new  Industry();\r\n  selectedMachine = new MachineSkillAssign();\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['name', 'application', 'comment', 'action'];\r\n  technician = new Technician();\r\n  matcher = new MyErrorStateMatcher();\r\n  isSelectMaker : boolean = false;\r\n  dataSource = new MatTableDataSource<MachineSkillAssign>();\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private techService: TechnicianService,\r\n    private messageService: MessageService,\r\n    private _formBuilder: FormBuilder\r\n  ) {}\r\n  ngOnInit() {\r\n    this.filteredMachines = [];\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.dataSource.data = this.listAssignmachine;\r\n    this.selectedMachine.Maker = new Maker();\r\n    this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.searchMachinesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.filteredMachines = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value =>  this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, value, null, this.selectedInd.IndId)\r\n        )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe(data => {\r\n        if (data == undefined) {\r\n          this.filteredMachines = [];\r\n        } else {\r\n          this.filteredMachines = data;\r\n        }\r\n      });\r\n\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n      \r\n      this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0];\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n      \r\n      \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      Country : ['', Validators.required],\r\n      Email : ['',Validators.required],\r\n      FullName : ['',Validators.required],\r\n      Title : ['',Validators.required],\r\n      Remark: ['',Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  OptionSelectChange(eve: MatCheckboxChange){\r\n    let number = parseInt(eve.source.value);\r\n    if (eve.checked) {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      this.selectedMachine.MachineSkill.push(model);\r\n      this.selectedMachine.SkillNumber += number;\r\n    } else {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      let index = this.selectedMachine.MachineSkill.indexOf(model);\r\n      this.selectedMachine.MachineSkill.splice(index,\r\n        1\r\n      );\r\n      this.selectedMachine.SkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  displayFn(value: any | string): string | undefined {\r\n    let displayValue: string;\r\n    if(value == undefined || value == null) {\r\n      displayValue == '';\r\n    }else{\r\n      displayValue = value.MakerName;\r\n    }\r\n    \r\n    return displayValue;\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    \r\n      this.selectedMachine.Maker.Model = this.secondFormGroup.get('application').value;\r\n      this.selectedMachine.Comment = this.secondFormGroup.get('Description').value;\r\n\r\n      this.listAssignmachine.push(this.selectedMachine);\r\n      this.technician.listAssign.push(this.selectedMachine);\r\n       this.selectedMachine = new MachineSkillAssign();\r\n       this.selectedMachine.Maker = new Maker();\r\n       this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n       this.isSelectMaker = false;\r\n       this.resetMachineAssignments();\r\n       this.searchMachinesCtrl.setValue('');\r\n      this.dataSource.data =  this.listAssignmachine;\r\n  }\r\n\r\n  resetMachineAssignments(){\r\n    this.secondFormGroup.reset();\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  changeProfessionalSkillLevel(event : MatCheckboxChange) : void {\r\n    let number = parseInt(event.source.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  addOption(eve : MatAutocompleteSelectedEvent){\r\n      this.selectedMachine.Maker = eve.option.value;\r\n  }\r\n  RemoveMakerAction(model : MachineSkillAssign){\r\n\r\n      let index = this.listAssignmachine.indexOf(model);\r\n      if(index  != -1){\r\n        this.listAssignmachine.splice(index,1);\r\n      }\r\n      this.dataSource.data =  this.listAssignmachine;\r\n      console.log(this.listAssignmachine);\r\n  }\r\n\r\n  AddBasicInformation(){\r\n    this.technician.DisplayName = this.firstFormGroup.get('FullName').value;\r\n    this.technician.EmailAddress = this.firstFormGroup.get('Email').value;\r\n    this.technician.Title = this.firstFormGroup.get('Title').value;\r\n    this.technician.Remark = this.firstFormGroup.get('Remark').value;\r\n  }\r\n\r\n  SelectMaker(){\r\n    this.isSelectMaker = true; \r\n  }\r\n\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.untouched || control.touched)\r\n    );\r\n  }\r\n}","<p-toast></p-toast>\r\n\r\n<div fxLayout=\"column\" fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around stretch\">\r\n  <h3 class=\"header-title text-center\">Register Form</h3>\r\n\r\n  <!-- registerForm -->\r\n  <div fxFlex=\"100\" xLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-horizontal-stepper [linear]=\"false\" #stepper class=\"form-register\">\r\n      <mat-step [stepControl]=\"firstFormGroup\">\r\n        \r\n        <form [formGroup]=\"firstFormGroup\" >\r\n          <ng-template matStepLabel>Fill out basic information</ng-template>\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">      \r\n              <p>Please fill in all the engineer details below</p>    \r\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                  <div fxFlex=\"50\">\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Full Name</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"FullName\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['FullName'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"Email\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Email'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"50\">                 \r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Country</mat-label>\r\n                      <mat-select [errorStateMatcher]=\"matcher\" formControlName=\"Country\" required>\r\n                        <mat-option *ngFor=\"let country of listStationed\" [value]=\"country\">\r\n                          {{country.StationName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                       <mat-error *ngIf=\"firstFormGroup.controls['Country'].hasError('required')\">Please choose country</mat-error>\r\n                      \r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Title</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Title\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Title'].valid\r\n              \">\r\n              Required field\r\n            </mat-error>\r\n                    </mat-form-field>                  \r\n                  </div>\r\n                </div>                                         \r\n                <div fxFlex=\"100\">\r\n                  <mat-form-field class=\"form-element\">\r\n                    <mat-label>Remark</mat-label>\r\n                    <textarea formControlName=\"Remark\" [errorStateMatcher]=\"matcher\" [errorStateMatcher]=\"matcher\" matInput placeholder=\"Ex. It makes me feel...\"></textarea>\r\n                    <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Remark'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                                              \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-around center\">\r\n\r\n              </div>              \r\n              \r\n              <p class=\"bold\">Please select engineer professional background</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n                <div *ngFor=\"let item of listProskill\">\r\n                  <mat-checkbox [color]=\"primary\" [value]=\"item.SkillId\" (change)=\"changeProfessionalSkillLevel($event)\">\r\n                    {{item.SkillName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-error class=\"text-center\" *ngIf=\"\r\n                technician.ProSkill === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n                <!-- <button [disabled]=\"!firstFormGroup.valid || technician.ProSkill == 0\" mat-stroked-button color=\"primary\" (click)=\"AddBasicInformation()\" matStepperNext>Next</button> -->\r\n                <button mat-stroked-button color=\"primary\" matStepperNext>Next</button>\r\n              </div>\r\n            </div>        \r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Select Machine Maker\">\r\n        \r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <ng-template matStepLabel>Select Machine Maker</ng-template>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\r\n            <p>Please fill in all the engineer details below</p> \r\n            <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"stretch stretch\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around center\">\r\n                <mat-form-field class=\"form-element\" fxFlex=\"50\">\r\n                  <mat-label>Search Machine Maker</mat-label>\r\n                  <input [disabled]=\"isSelectMaker\" matInput placeholder=\"Search\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"searchMachinesCtrl\">\r\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addOption($event)\" [displayWith]=\"displayFn\">\r\n                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                        <ng-container *ngIf=\"!isLoading\">\r\n                          <mat-option *ngFor=\"let machine of filteredMachines\" [value]=\"machine\">\r\n                            <span><b>{{machine.MakerName}}</b></span>\r\n                          </mat-option>\r\n                        </ng-container>\r\n                      </mat-autocomplete>\r\n                </mat-form-field>   \r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Industry</mat-label>\r\n                  <mat-select [disabled]=\"isSelectMaker\" [(value)]=\"selectedInd\">\r\n                    <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                      {{industry.Description}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  \r\n                </mat-form-field> \r\n                <button mat-raised-button color=\"primary\" (click) = \"SelectMaker()\">Select</button>\r\n                <!-- <button mat-raised-button color=\"primary\" [disabled]=\"selectedMachine.Maker.MaId == 0 || isSelectMaker\" (click) = \"SelectMaker()\">Select</button> -->\r\n              </div>\r\n              <div *ngIf=\"isSelectMaker\">\r\n              <p class=\"text-center\">Please assign machine skill to machine</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n             \r\n                <div *ngFor=\"let item of listMachineSkill\">\r\n                  <mat-checkbox (change)=\"OptionSelectChange($event)\" [value]=\"item.MSId\" [color]=\"primary\" matTooltip=\"{{item.Explain}}\">\r\n                    {{item.MSName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <mat-error class=\"text-center\" *ngIf=\"\r\n              selectedMachine.MachineSkill.length === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">            \r\n                <mat-form-field fxFlex=\"25\">                \r\n                  <mat-label>Application</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"application\"\r\n                         >\r\n                </mat-form-field> \r\n                <mat-form-field fxFlex=\"75\">                \r\n                  <mat-label>Description</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Description\" placeholder=\"Ex. 1 Main St, New York, NY\">\r\n                  <mat-error *ngIf=\"\r\n                !secondFormGroup.controls['Description'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                </mat-form-field> \r\n                <button  (click)=\"AddMachineSkill()\" mat-icon-button  mat-raised-button color=\"primary\" [disabled]=\"!secondFormGroup.valid || selectedMachine.MachineSkill.length === 0\">\r\n                  <mat-icon>done</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button  mat-raised-button>\r\n                    <mat-icon>clear</mat-icon>\r\n                    </button>\r\n              </div> \r\n            </div>\r\n            </div>\r\n            <p>List Machine Maker</p>  \r\n            <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n              <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n              \r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"application\">\r\n                  <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"comment\">\r\n                  <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Action Column -->\r\n                <ng-container matColumnDef=\"action\">\r\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> \r\n                    <button (click)=\"RemoveMakerAction(element)\" matTooltip=\"Remove Machine\" mat mat-icon-button color=\"primary\"\r\n                    aria-label=\"Example icon-button with a heart icon\">\r\n                    <mat-icon>remove_circle</mat-icon>\r\n                  </button>\r\n                  </td>\r\n                </ng-container>\r\n              \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"footer-gr\" fxFlex=\"100\" fxLayoutGap=\"10px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n              <button mat-stroked-button matStepperPrevious>Back</button>\r\n              <button mat-stroked-button matStepperNext>Next</button>\r\n              <!-- <button mat-stroked-button matStepperNext [disabled]=\"listAssignmachine.length === 0\">Next</button> -->\r\n            </div>  \r\n          </div>\r\n             \r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Confirm</ng-template>\r\n        <h4 class=\"font-weight-normal\">Technician Information</h4>\r\n        <mat-divider></mat-divider>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start stretch\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly start\">\r\n            <div fxFlex=\"50\" fxFlexOffset=\"2\">\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>whrhrehrehe</p>\r\n              <p class=\"font-weight-bold\">Email</p>\r\n              <p>erhrehreh</p>\r\n              <p class=\"font-weight-bold\">Title</p>\r\n              <p>erhrehrehreh</p>\r\n            </div>\r\n            <div fxFlex=\"50\">\r\n              <p class=\"font-weight-bold\">Country</p>\r\n              <p>erhrehrehreh</p>\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>ehrehrehrehrehreh</p>\r\n            </div>             \r\n          </div>\r\n          \r\n          <h4 class=\"font-weight-normal\">Machine Maker Information</h4>\r\n          <mat-divider></mat-divider>\r\n          <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n              <!--- Note that these columns can be defined in any order.\r\n                    The actual rendered columns are set as a property on the row definition\" -->\r\n            \r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"application\">\r\n                <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Action Column -->\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef>  </th>\r\n                <td mat-cell *matCellDef=\"let element\"> \r\n                </td>\r\n              </ng-container>\r\n            \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end center\">\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button color=\"primary\" (click)=\"stepper.reset()\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  </div>\r\n  \r\n</div>\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Industry } from '../../shared/models/Industry.model';\r\nimport { SkillService } from '../../shared/services/skillservice.service';\r\nimport { AppSettings } from '../../shared/constant/TSconstands.component';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ProfessionalSkill } from '../../shared/models/ProfessionalSkill.model';\r\nimport { MachineSkill } from '../../shared/models/MachineSkill.model';\r\n\r\n@Component({\r\n  selector: 'app-explaination',\r\n  templateUrl: './explaination.component.html',\r\n})\r\nexport class ExplainationComponent implements OnInit {\r\n    listIndustries : Array<Industry>;\r\n    listProskill :Array<ProfessionalSkill>;\r\n    listMachineSkill :Array<MachineSkill>;\r\n  constructor(private spinner: NgxSpinnerService,private router: Router,public skillService : SkillService) { }\r\n  ngOnInit() {\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    \r\n    this.skillService.GetListIndustries(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listIndustries= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n    })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListMachineSKill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listMachineSkill= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListProskill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n        this.listProskill= data.objects;\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n      })\r\n\r\n  }\r\n\r\n  BackHome(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}","<section class=\"jumbotron\">\r\n  <div class=\"container d-flex justify-content-between\">\r\n    <h1 class=\"text-white\">\r\n      <strong>Skill Explaination</strong>\r\n    </h1>\r\n  </div>\r\n</section>\r\n<section class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>BACKGROUND</strong></p>\r\n      <div class=\"list-skill shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngFor=\"let item of listProskill\">\r\n              <td class=\"code\">{{item.SkillCode}}</td>\r\n              <td class=\"meaning\">{{item.SkillName}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <p><strong>MACHINE</strong></p>\r\n      <div class=\"list-skill shadow-sm table-responsive\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngFor=\"let item of listMachineSkill\">\r\n              <td class=\"code\">{{item.MSCode}}</td>\r\n              <td class=\"meaning\">\r\n                <p>\r\n                  {{item.Explain}}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { MachineSkillAssign } from './../../shared/ViewModels/MachineSKillAssign.model';\r\nimport { MachineSkill } from './../../shared/models/MachineSkill.model';\r\nimport { Maker } from './../../shared/models/maker.model';\r\nimport { Industry } from './../../shared/models/Industry.model';\r\nimport { Technician } from './../../shared/models/technician.model';\r\nimport { TechnicianService } from './../../shared/services/technicianservice.service';\r\nimport { ProfessionalSkill } from './../../shared/models/ProfessionalSkill.model';\r\nimport { Observable } from 'rxjs';\r\nimport { OnInit, Component } from \"@angular/core\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap';\r\nimport { TechMachineIndutry } from '../../shared/models/techmachineind.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PrettyRadioChange, PrettyCheckBoxChange } from 'ngx-pretty-checkbox';\r\nimport { Stationed } from '../../shared/models/Stationed.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-update-skill',\r\n    templateUrl: './update-engineer.component.html',\r\n    styleUrls: ['./update-engineer.component.css']\r\n  })\r\n\r\n  \r\nexport class UpdateTechSkillComponent implements OnInit {\r\n    listIndustries :    Array<Industry>;\r\n    listEnIndustries :    Array<Industry>;\r\n    listStationed  : Array<Stationed>;\r\n    TechMachineIndutry : Array<TechMachineIndutry>;\r\n    listProskill   :    Array<ProfessionalSkill>;\r\n    listAssignmachine : Array<MachineSkillAssign>;\r\n    listMachineSkill : Array<MachineSkill>;\r\n    StationedSource :   Observable<any>;\r\n    userSource :        Observable<any>;\r\n    industrySource:     Observable<any>;\r\n    machinedustrySource: Observable<any>;\r\n    asyncSelected       :string;\r\n    staasyncSelected    :string;\r\n    indasyncSelected    :string;\r\n    maasyncSelected     :string;\r\n\r\n    typeaheadLoading: boolean;\r\n    noResult = false;\r\n    IndResult = false;\r\n    StaResult = false;\r\n    machineNoReuslt=false;\r\n\r\n    technician : Technician;\r\n    selectedInd : number;\r\n    userid:number;\r\n    selectedRelMachine : Maker;\r\n    userName :string;\r\n\r\n  constructor(private toastr: ToastrService,private route: ActivatedRoute,private router: Router,public skillService : SkillService,public techService : TechnicianService,private spinner: NgxSpinnerService) { }\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.userName = localStorage.getItem('UserName');\r\n    this.listProskill = new Array<ProfessionalSkill>();\r\n    this.listIndustries = new Array<Industry>();\r\n    this.listMachineSkill = new Array<MachineSkill>();\r\n    this.technician = new Technician();;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.listAssignmachine = new Array<MachineSkillAssign>();\r\n    this.TechMachineIndutry = new Array<TechMachineIndutry>();\r\n    this.selectedRelMachine = new Maker();\r\n    \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.userid = parseInt(id);\r\n\r\n    this.techService.GetEngineerDetail(AppSettings.GetQuerySeach(1,1,this.userName,this.userid,)).subscribe((data:any)=>{     \r\n        this.technician= data.objects;\r\n        this.asyncSelected = this.technician.Initials;\r\n        this.staasyncSelected = this.technician.StationName;\r\n        this.indasyncSelected = this.technician.IndustryName;\r\n\r\n        if(!this.technician.CanEdit){\r\n          this.router.navigate(['pagenotfound']);\r\n        }\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListIndustries(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listIndustries= data.objects;\r\n      this.listEnIndustries = data.objects;\r\n      this.selectedInd = this.listIndustries[0].IndId;\r\n      this.spinner.hide();\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListMachineSKill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n      this.listMachineSkill= data.objects;\r\n    },\r\n    (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n    })\r\n\r\n    this.spinner.show();\r\n        this.techService.GetListStationedEngineer(AppSettings.GetQuerySeach(50,1,this.userName,13,)).subscribe((data:any)=>{     \r\n          this.listStationed= data.objects;         \r\n          this.spinner.hide();\r\n        },\r\n        (err : HttpErrorResponse)=>{\r\n            this.spinner.hide();\r\n        })\r\n\r\n\r\n    this.spinner.show();\r\n    this.skillService.GetListProskill(AppSettings.GetQuerySeach(10,1,\"\",13,)).subscribe((data:any)=>{     \r\n        this.listProskill= data.objects;\r\n        this.spinner.hide();\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n        this.spinner.hide();\r\n      })\r\n\r\n\r\n      //Get Source to search Initial\r\n    this.userSource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.asyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.techService.SearchUserByInitial(AppSettings.GetQuerySeach(10,1,token,null,1)))\r\n        ); \r\n\r\n        //Get Source to search maker name\r\n    this.StationedSource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.staasyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.techService.SearchStationed(AppSettings.GetQuerySeach(10,1,token)))\r\n        ); \r\n\r\n\r\n        //Get Source to search maker name\r\n    this.industrySource = Observable.create((observer: any) => {\r\n        // Runs on every search\r\n        observer.next(this.indasyncSelected);\r\n      })\r\n        .pipe(\r\n          mergeMap((token: string) => this.skillService.SearchIndustry(AppSettings.GetQuerySeach(10,1,token)))\r\n        ); \r\n\r\n          //Get Source to search maker name\r\n    this.machinedustrySource = Observable.create((observer: any) => {\r\n      // Runs on every search\r\n      observer.next(this.maasyncSelected);\r\n    })\r\n      .pipe(\r\n        mergeMap((token: string) => this.skillService.SearchMachineMakerByIndustry(AppSettings.GetQuerySeach(10,1,token,null,this.selectedInd)))\r\n      ); \r\n  }\r\n\r\n\r\n  onOptionsSelected(event){\r\n    this.selectedInd = event\r\n   }\r\n\r\n   onOptionsIndSelected(event){\r\n    this.technician.IndustryId = event\r\n   } \r\n   onOptionsStationSelected(event){\r\n    this.technician.StationId = event;\r\n   }\r\n\r\n   onChange(eve : any){\r\n    if(eve == ''|| eve != this.selectedRelMachine.MakerName)\r\n    {\r\n      this.selectedRelMachine = new Maker();\r\n    }\r\n  }\r\n\r\n  CheckConditionMachine(item:number,id:number){\r\n     let number = id & item ;\r\n     let flag = true;\r\n      if(number == 1 || number == id){\r\n        flag = true;\r\n      }\r\n      else{\r\n        flag = false;\r\n      }  \r\n      return flag;\r\n  }\r\n\r\n  onTextChange(eve : string, item:MachineSkillAssign){\r\n    item.Comment = eve;\r\n  }\r\n\r\n\r\n  AddMachineSkill(){\r\n    let checkisesxit = this.technician.listAssign.find(item=>item.Maker.RelMachineId == this.selectedRelMachine.RelMachineId);\r\n    if(checkisesxit !=null){\r\n      this.toastr.error(\"Can not add duplicate Machine\");\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n    }\r\n    else{\r\n      let assignskill = new MachineSkillAssign();\r\n      assignskill.Maker = new Maker();\r\n      assignskill.MachineSkill = new Array<MachineSkill>();\r\n\r\n      assignskill.Maker.MakerName = this.selectedRelMachine.MakerName;\r\n      assignskill.Maker.MaId = this.selectedRelMachine.MaId;\r\n      assignskill.Maker.RelMachineId = this.selectedRelMachine.RelMachineId;\r\n      this.listAssignmachine.push(assignskill);\r\n      this.technician.listAssign.push(assignskill);\r\n      this.selectedRelMachine = new Maker();\r\n      this.maasyncSelected = \"\";\r\n    }\r\n    \r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    if(e){\r\n      this.spinner.show();\r\n    }\r\n    else{\r\n      this.spinner.hide();\r\n    }\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  RemoveMachineSkill(item : MachineSkillAssign){\r\n      this.technician.listAssign.splice(this.technician.listAssign.findIndex(x=>x.Maker.RelMachineId == x.Maker.RelMachineId),1)\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {       \r\n    this.technician = e.item;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n  }\r\n\r\n  indtypeaheadOnSelect(e: TypeaheadMatch): void {  \r\n    this.technician.IndustryId = e.item.IndId    \r\n  }\r\n\r\n  statypeaheadOnSelect(e: TypeaheadMatch): void {       \r\n   this.technician.StationId = e.item.StationId        \r\n  }\r\n\r\n  matypeaheadOnSelect(e: TypeaheadMatch): void {      \r\n    this.selectedRelMachine = e.item; \r\n  }\r\n  \r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  indtypeaheadNoResults(event: boolean): void {\r\n    this.IndResult = event;\r\n  }\r\n  statypeaheadNoResults(event: boolean): void {\r\n    this.StaResult = event;\r\n  }\r\n\r\n  matypeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n  changeOps(event:PrettyRadioChange){\r\n    let number = parseInt(event.value);\r\n    if(event.checked){\r\n      this.technician.ProSkill += number;   \r\n    }\r\n    else{\r\n      this.technician.ProSkill -= number;   \r\n    }\r\n    \r\n  }\r\n\r\n  changeSkillMachines(event:PrettyCheckBoxChange,relMaker:MachineSkillAssign){\r\n    let check = this.technician.listAssign.filter(x=>x.Maker.RelMachineId == relMaker.Maker.RelMachineId)[0];\r\n    if(check !=null){\r\n      let id = parseInt(event.value);\r\n     if(event.checked){\r\n       let machine = new MachineSkill();       \r\n       machine.MSId = id;\r\n       check.MachineSkill.push(machine);\r\n       check.SkillNumber = check.SkillNumber +id;\r\n     }\r\n     else{        \r\n      check.SkillNumber = check.SkillNumber - id;\r\n      check.MachineSkill.splice(check.MachineSkill.findIndex(x=>x.MSId == parseInt(event.value)),1)\r\n     }\r\n   }\r\n  }\r\n\r\n  CheckCondition(eve:any){\r\n      let number = eve & this.technician.ProSkill ;\r\n      if(number == 1 || number == eve){\r\n        return true;\r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n  }\r\n\r\n  SubmitEngineer(){\r\n    this.spinner.show();\r\n    let Userid = parseInt(localStorage.getItem('UserNo'));\r\n      this.technician.UpdatedBy = Userid;\r\n\r\n      this.technician.listAssign.forEach(element => {\r\n        let isexist = this.listAssignmachine.filter(x=>x.Maker.RelMachineId == element.Maker.RelMachineId)[0];\r\n        if(isexist !=null){\r\n            element.Comment = isexist.Comment;\r\n        }\r\n      });\r\n\r\n      this.techService.UpdateTechnicianSkill(this.technician).subscribe((data:any)=>{            \r\n        this.toastr.success(\"Update machine skill for technician success\");\r\n        this.spinner.hide()\r\n        this.technician = new Technician();\r\n        this.technician.listAssign = new Array<MachineSkillAssign>();\r\n        this.asyncSelected = \"\";\r\n        this.indasyncSelected= \"\";\r\n        this.staasyncSelected = \"\";\r\n        this.router.navigate(['home/engineer-detail/',this.userid]);\r\n      },\r\n      (err : HttpErrorResponse)=>{\r\n      })   \r\n\r\n  }\r\n\r\n  ValidateSubmitEngineer(){\r\n    let flag = false;\r\n    if(this.technician.listAssign.length < 1){\r\n        flag = true;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  BackHome(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}","<section class=\"jumbotron add-form\">\r\n  <div class=\"container d-flex justify-content-between\">\r\n    <h1 class=\"text-white\"><strong>Add Technical Service Engineer</strong></h1><button (click)=\"BackHome()\" id=\"backId\"\r\n      class=\"btn btn-default\" type=\"button\"><i class=\"fa fa-arrow-left\"></i> <span\r\n        class=\"item-label\">Back</span></button>\r\n  </div>\r\n</section>\r\n<div>\r\n  <div class=\"container\">\r\n    <form class=\"form-engineer\">\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Engineer Details</h3>\r\n            <p>Please fill in all the engineer details below</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row info\">\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"initial\">Initial</label>\r\n              <input class=\"form-control input-icon\" disabled=\"true\" id=\"initial\" type=\"text\"\r\n                [(ngModel)]=\"asyncSelected\" [typeahead]=\"userSource\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n                (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadOptionsLimit]=\"10\" typeaheadWaitMs=\"500\"\r\n                typeaheadOptionField=\"Initials\" autocomplete=\"off\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n                name=\"asyncSelected\" placeholder=\"&#61442; Search User Initial\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"stationed\">Stationed</label>\r\n              <select name=\"stationed\" class=\"form-control\" [disabled]=\"technician.UserName == null\"\r\n                [(ngModel)]=\"technician.StationId\" (ngModelChange)='onOptionsStationSelected($event)'>\r\n                <option *ngFor=\"let item of listStationed\" value=\"{{item.StationId}}\">\r\n                  {{item.StationName}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"industry\">Industry</label>\r\n              <select style=\"margin-top:3px;\" name=\"industry\" class=\"form-control\"\r\n                [disabled]=\"technician.UserName == null\" [(ngModel)]=\"technician.IndustryId\"\r\n                (ngModelChange)='onOptionsIndSelected($event)'>\r\n                <option *ngFor=\"let item of listEnIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Remark</label>\r\n              <textarea class=\"form-control\" id=\"Remark\" name=\"Remark\" [(ngModel)]=\"technician.Remark\"\r\n                type=\"text\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-6 col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"uname\">Username</label>\r\n              <input class=\"form-control\" id=\"userName\" disabled=\"true\" name=\"userName\"\r\n                [(ngModel)]=\"technician.UserName\" type=\"text\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Full Name</label>\r\n              <input class=\"form-control\" id=\"fullName\" name=\"fullName\" [(ngModel)]=\"technician.DisplayName\"\r\n                type=\"text\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"mail\">Email Address</label>\r\n              <input class=\"form-control\" name=\"EmailAddress\" [(ngModel)]=\"technician.EmailAddress\" id=\"emailAdd\"\r\n                type=\"email\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Title</label>\r\n              <input class=\"form-control\" id=\"Title\" name=\"Title\" [(ngModel)]=\"technician.Title\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Professional Background</h3>\r\n            <p>Please select engineer professional background</p>\r\n          </div>\r\n          <div class=\"info eng-background col-12\">\r\n            <div class=\"form-check\" *ngFor=\"let item of listProskill\">\r\n              <p-checkbox name=\"animation\" (change)=\"changeOps($event)\" [checked]=\"CheckCondition(item.SkillId)\"\r\n                [value]=\"item.SkillId\" outline=\"true\" shape=\"curve\" color=\"primary\" animation=\"smooth\">\r\n                {{item.SkillName}}\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-section\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <h3>Machine/Maker Skills</h3>\r\n            <p>Please assign machine skill to each machine</p>\r\n          </div>\r\n          <div class=\"info col-12\">\r\n            <div class=\"add-machine\" >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\"  fxLayoutAlign=\"space-between center\" >\r\n                <div fxFlex=\"35\">\r\n                  <input class=\"input-icon\" placeholder=\"&#61442; Search machine maker\" type=\"text\"\r\n                  [(ngModel)]=\"maasyncSelected\" [typeahead]=\"machinedustrySource\"\r\n                  (typeaheadLoading)=\"changeTypeaheadLoading($event)\" (typeaheadOnSelect)=\"matypeaheadOnSelect($event)\"\r\n                  [typeaheadOptionsLimit]=\"10\" typeaheadOptionField=\"MakerName\" autocomplete=\"off\"\r\n                  (typeaheadNoResults)=\"matypeaheadNoResults($event)\" name=\"maasyncSelected\"\r\n                  (ngModelChange)=\"onChange($event)\">\r\n                </div>\r\n                <div fxFlex=\"15\">\r\n                  <input class=\"input-icon\" placeholder=\"Model\" type=\"text\" [(ngModel)]=\"selectedRelMachine.Model\" name=\"Model\">\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                  <select class=\"shadow-sm\" style=\"width:100%\" name=\"selectedInd\" [(ngModel)]=\"selectedInd\"\r\n                (ngModelChange)='onOptionsSelected($event)'>\r\n                <option *ngFor=\"let item of listIndustries\" value=\"{{item.IndId}}\">\r\n                  {{item.Description}}\r\n                </option>\r\n              </select>\r\n                </div>\r\n                \r\n                <div fxFlex=\"20\">\r\n                  <button id=\"addRowId\" type=\"button\" class=\"btn btn-default\" (click)=\"AddMachineSkill()\"\r\n                [disabled]=\"selectedRelMachine.MaId == 0\">\r\n                <i class=\"fa fa-plus\"></i>\r\n                <span class=\"item-label\">Add Machine/Maker</span>\r\n              </button>\r\n                </div>\r\n      \r\n              </div>             \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 section-title\" *ngIf=\"technician.listAssign.length > 0\">\r\n            <br>\r\n            <p><strong>List of Machine/Maker Skills</strong></p>\r\n          </div>\r\n          <div class=\"info col-12\" *ngFor=\"let item of technician.listAssign\">\r\n            <div class=\"selected-machine shadow-sm\">\r\n              <div class=\"btn-icon-group\">\r\n                <button (click)=\"RemoveMachineSkill(item)\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\"><span aria-hidden=\"true\"><i class=\"fa fa-times-circle\"></i></span></button>\r\n\r\n              </div>\r\n              <p class=\"font-weight-bold\" id=\"machineSkill\">{{item.Maker.MakerName}} - {{item.Maker.Model}}</p>\r\n              <div class=\"check-container\">\r\n                <div class=\"form-check\" *ngFor=\"let subitem of listMachineSkill\">\r\n                  <p-checkbox color=\"primary\" [value]=\"subitem.MSId\"\r\n                    [checked]=\"CheckConditionMachine(item.SkillNumber , subitem.MSId)\"\r\n                    (change)=\"changeSkillMachines($event,item)\">\r\n                    {{subitem.MSName}}\r\n                  </p-checkbox>\r\n                </div>\r\n              </div>\r\n              <textarea name=\"comment\" #comment (keyup)=\"onTextChange(comment.value, item)\"\r\n                placeholder=\"Please write your comment for this machine skill\">{{item.Comment}}</textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 form-footer\">\r\n            <button (click)=\"BackHome()\" class=\"btn btn-o btn-cancel\" type=\"button\">\r\n              <span aria-hidden=\"true\">Cancel</span>\r\n            </button>\r\n            <button (click)=\"SubmitEngineer()\" [disabled]=\"ValidateSubmitEngineer()\" style=\"margin-left: 5px;\"\r\n              id=\"addEngineerId\" type=\"button\" class=\"btn btn-default\">\r\n              <i class=\"fa fa-plus\"></i>\r\n              <span class=\"item-label\">Update Engineer</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { AppSettings } from \"./../shared/constant/TSconstands.component\";\r\nimport { UserService } from \"./../shared/services/user.service\";\r\nimport { SkillService } from \"./../shared/services/skillservice.service\";\r\nimport { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { timeout } from \"rxjs/operators\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isRemember: boolean = false;\r\n  isLoginError: boolean = false;\r\n  errormes: string;\r\n  form: FormGroup;\r\n  constructor(\r\n    private router: Router,\r\n    public userService: UserService,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n    this.form = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  onFilterChange(eve: any) {\r\n    if (eve.target.checked) {\r\n      this.isRemember = true;\r\n    } else {\r\n      this.isRemember = false;\r\n    }\r\n  }\r\n\r\n  OnSubmit() {\r\n    this.spinner.show();\r\n    const username = this.form.get(\"username\").value;\r\n    const password = this.form.get(\"password\").value;\r\n    this.userService.userAuthentication(username, password).subscribe(\r\n      (data: any) => {\r\n        var timeexpires = new Date();\r\n        localStorage.setItem(\"userToken\", data.access_token);\r\n        localStorage.setItem(\"userNo\", data.UserNo);\r\n        localStorage.setItem(\"TokenExpire\", timeexpires.toLocaleString());\r\n        localStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        localStorage.setItem(\"F5TokenExpire\", timeexpires.toLocaleString());\r\n        sessionStorage.setItem(\"IsLogin\", \"true\");\r\n        this.spinner.hide();\r\n        this.router.navigate([\"/home\"]);\r\n        this.router.events.subscribe((e) => {\r\n          console.log(e);\r\n          if (e instanceof NavigationEnd) {\r\n          }\r\n          console.log(e);\r\n        });\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n        console.log(typeof err.status);\r\n        if (typeof err.status == \"undefined\") {\r\n          this.errormes = err.message;\r\n        } else {\r\n          if (err.status != 400) {\r\n            this.errormes = \"The user name or password is incorrect.\";\r\n          } else {\r\n            this.errormes = err.error.error_description;\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!-- \r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"login-box is-responsive\">\r\n            <div id=\"logo-container\">\r\n                <img src=\"dist/img/jr-icon.png\">\r\n            </div>\r\n            <div class=\"col-sm-12 col-md-10 col-md-offset-1\">\r\n                <form #loginForm=\"ngForm\" enctype=\"application/x-www-form-urlencoded\"  (ngSubmit)=\"OnSubmit(UserName.value,Password.value)\">\r\n                    <h1 class=\"text-center\">Rieckermann Job Card</h1>\r\n                    <p class=\"text-center\">Login to access your account</p>\r\n                    <div class=\"form-group input-group\">\r\n                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\r\n                        <input class=\"form-control\" type=\"text\"  #UserName name='username' placeholder=\"username\"/>\r\n                    </div>\r\n                    <div class=\"form-group input-group\">\r\n                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\r\n                        <input class=\"form-control\" type=\"password\" #Password name='password' placeholder=\"password\"/>\r\n                    </div>\r\n                    <div class=\"checkbox\">\r\n                        <label>\r\n                            <input type=\"checkbox\" name=\"isRemember\" [(ngModel)]=\"isRemember\" (change)=\"onFilterChange($event)\"> remember me\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-main btn-block\" [disabled]=\"!loginForm.valid\">Login</button>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <br/>\r\n                      <div *ngIf=\"isLoginError\" style=\"color: red\" class=\"red-text center error-message\">{{errormes}}</div>\r\n                    </div>\r\n                    <div class=\"form-group text-center\">\r\n                        <a href=\"https://rieckermann.com\" target=\"_blank\">www.rieckermann.com</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div> -->\r\n\r\n<!-- <body class=\"main login\" style=\"margin-top: 200px;\">\r\n  <main>\r\n    <section class=\"login-box\">\r\n      <img src=\"assets/img/icon.png\" />\r\n      <h1>Skill Level Matrix</h1>\r\n      <h2>Rieckermann Technical Services</h2>\r\n      <div>\r\n        <form #loginForm=\"ngForm\" enctype=\"application/x-www-form-urlencoded\"\r\n          (ngSubmit)=\"OnSubmit(UserName.value,Password.value)\">\r\n          <p>Login to access your account</p>\r\n          <input #UserName name='username' placeholder=\"Username\" type=\"text\" />\r\n          <input #Password name='password' placeholder=\"Password\" type=\"password\" />\r\n          <button id=\"loginId\" type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-default\">Login</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <br />\r\n        <div *ngIf=\"isLoginError\" style=\"color: red\" class=\"red-text center error-message\">{{errormes}}</div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n</body> -->\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" id=\"logo-container center\">\r\n      <img src=\"assets/img/jr-icon.png\">\r\n    </div>\r\n    <mat-card-header>\r\n      <mat-card-title>GLOBAL SKILL LIST</mat-card-title>\r\n      <mat-card-subtitle>Login to access your account</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"OnSubmit()\">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Username\" formControlName=\"username\" required />\r\n          <mat-error>\r\n            User name is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Password\" required />\r\n          <mat-error>\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-checkbox (change)=\"onFilterChange($event)\" color=\"primary\">Remember me\r\n        </mat-checkbox>\r\n        <mat-error *ngIf=\"isLoginError\">\r\n          The username and password were not recognised\r\n        </mat-error>\r\n      </mat-card-content>\r\n      <button mat-stroked-button color=\"primary\" class=\"btn-block\">\r\n        Log in\r\n      </button>\r\n      <div class=\"footer-login text-center\">\r\n        <a href=\"https://rieckermann.com\" target=\"_blank\">www.rieckermann.com</a>\r\n      </div>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<ngx-spinner bdOpacity=0.6 bdColor=\"rgba(245,240,240,0)\" size=\"medium\" color=\"#b52d2d\" type=\"ball-clip-rotate\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n","import { PrimeModule } from './../shared/ng-prime/prime.module';\r\nimport { MaterialModule } from './../shared/materials/material-module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GeneralPageNotFoundComponent } from '../home/pagenotfound/pagenotfound.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    children :[\r\n       {\r\n        path: '',\r\n        component: LoginComponent\r\n      },         \r\n    ],    \r\n    \r\n  },\r\n  {\r\n    path:'register',\r\n    component:RegisterComponent\r\n  },\r\n  {\r\n    path: 'pagenotfound',component:GeneralPageNotFoundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    PrimeModule\r\n  ],\r\n  declarations: [LoginComponent,RegisterComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { OnInit, Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { SkillService } from \"../../shared/services/skillservice.service\";\r\nimport { TechnicianService } from \"../../shared/services/technicianservice.service\";\r\nimport { AppSettings } from \"../../shared/constant/TSconstands.component\";\r\nimport {MenuItem} from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\nimport { ProfessionalSkill } from \"../../shared/models/ProfessionalSkill.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Stationed } from \"../../shared/models/Stationed.model\";\r\nimport { MachineSkill } from \"../../shared/models/MachineSkill.model\";\r\nimport { Industry } from \"../../shared/models/Industry.model\";\r\nimport { debounceTime, finalize, startWith, switchMap, tap } from \"rxjs/operators\";\r\nimport { MatAutocompleteActivatedEvent, MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { MachineSkillAssign } from \"../../shared/ViewModels/MachineSKillAssign.model\";\r\nimport { Maker } from \"../../shared/models/maker.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { Technician } from \"../../shared/models/technician.model\";\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  providers: [MessageService],\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  isLinear = false;\r\n  listAssignmachine= new Array<MachineSkillAssign>();\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  searchMachinesCtrl = new FormControl();\r\n  listProskill = new Array<ProfessionalSkill>();\r\n  listStationed = new Array<Stationed>();\r\n  listMachineSkill = new Array<MachineSkill>();\r\n  activeIndex: number = 1;\r\n  userName : string;\r\n  listIndustries= new Array<Industry>();\r\n  filteredMachines: any;\r\n  selectedInd = new  Industry();\r\n  selectedMachine = new MachineSkillAssign();\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['name', 'application', 'comment', 'action'];\r\n  technician = new Technician();\r\n  matcher = new MyErrorStateMatcher();\r\n  isSelectMaker : boolean = false;\r\n  dataSource = new MatTableDataSource<MachineSkillAssign>();\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    public skillService: SkillService,\r\n    private techService: TechnicianService,\r\n    private messageService: MessageService,\r\n    private _formBuilder: FormBuilder\r\n  ) {}\r\n  ngOnInit() {\r\n    this.filteredMachines = [];\r\n    this.userName = localStorage.getItem(\"UserName\");\r\n    this.dataSource.data = this.listAssignmachine;\r\n    this.selectedMachine.Maker = new Maker();\r\n    this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n    this.technician.ProSkill = 0;\r\n    this.technician.listAssign = new Array<MachineSkillAssign>();\r\n    this.searchMachinesCtrl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        tap(() => {\r\n          this.filteredMachines = [];\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value =>  this.skillService.SearchMachineMakerByIndustry(\r\n          AppSettings.GetQuerySeach(10, 1, value, null, this.selectedInd.IndId)\r\n        )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe(data => {\r\n        if (data == undefined) {\r\n          this.filteredMachines = [];\r\n        } else {\r\n          this.filteredMachines = data;\r\n        }\r\n      });\r\n\r\n\r\n    this.skillService\r\n      .GetListProskill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listProskill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.skillService\r\n      .GetListMachineSKill(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listMachineSkill = data.objects;\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n\r\n      this.techService\r\n      .GetListStationedEngineer(\r\n        AppSettings.GetQuerySeach(50, 1, this.userName, 13)\r\n      )\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listStationed = data.objects;\r\n          this.spinner.hide();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n      \r\n      this.skillService\r\n      .GetListIndustries(AppSettings.GetQuerySeach(10, 1, \"\", 13))\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.listIndustries = data.objects;\r\n          this.selectedInd = this.listIndustries[0];\r\n        },\r\n        (err: HttpErrorResponse) => {}\r\n      );\r\n      \r\n      \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      Country : ['', Validators.required],\r\n      Email : ['',Validators.required],\r\n      FullName : ['',Validators.required],\r\n      Title : ['',Validators.required],\r\n      Remark: ['',Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  OptionSelectChange(eve: MatCheckboxChange){\r\n    let number = parseInt(eve.source.value);\r\n    if (eve.checked) {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      this.selectedMachine.MachineSkill.push(model);\r\n      this.selectedMachine.SkillNumber += number;\r\n    } else {\r\n      let model = this.listMachineSkill.filter(x=>x.MSId == number)[0];\r\n      let index = this.selectedMachine.MachineSkill.indexOf(model);\r\n      this.selectedMachine.MachineSkill.splice(index,\r\n        1\r\n      );\r\n      this.selectedMachine.SkillNumber -= number;\r\n    }\r\n  }\r\n\r\n  displayFn(value: any | string): string | undefined {\r\n    let displayValue: string;\r\n    if(value == undefined || value == null) {\r\n      displayValue == '';\r\n    }else{\r\n      displayValue = value.MakerName;\r\n    }\r\n    \r\n    return displayValue;\r\n  }\r\n\r\n  AddMachineSkill() {\r\n    \r\n      this.selectedMachine.Maker.Model = this.secondFormGroup.get('application').value;\r\n      this.selectedMachine.Comment = this.secondFormGroup.get('Description').value;\r\n\r\n      this.listAssignmachine.push(this.selectedMachine);\r\n      this.technician.listAssign.push(this.selectedMachine);\r\n       this.selectedMachine = new MachineSkillAssign();\r\n       this.selectedMachine.Maker = new Maker();\r\n       this.selectedMachine.MachineSkill = new Array<MachineSkill>();\r\n       this.isSelectMaker = false;\r\n       this.resetMachineAssignments();\r\n       this.searchMachinesCtrl.setValue('');\r\n      this.dataSource.data =  this.listAssignmachine;\r\n  }\r\n\r\n  resetMachineAssignments(){\r\n    this.secondFormGroup.reset();\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      application : ['N/A',Validators.required],\r\n      Description : ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  changeProfessionalSkillLevel(event : MatCheckboxChange) : void {\r\n    let number = parseInt(event.source.value);\r\n    if (event.checked) {\r\n      this.technician.ProSkill = this.technician.ProSkill + number;\r\n    } else {\r\n      this.technician.ProSkill = this.technician.ProSkill - number;\r\n    }\r\n  }\r\n\r\n  addOption(eve : MatAutocompleteSelectedEvent){\r\n      this.selectedMachine.Maker = eve.option.value;\r\n  }\r\n  RemoveMakerAction(model : MachineSkillAssign){\r\n\r\n      let index = this.listAssignmachine.indexOf(model);\r\n      if(index  != -1){\r\n        this.listAssignmachine.splice(index,1);\r\n      }\r\n      this.dataSource.data =  this.listAssignmachine;\r\n      console.log(this.listAssignmachine);\r\n  }\r\n\r\n  AddBasicInformation(){\r\n    this.technician.DisplayName = this.firstFormGroup.get('FullName').value;\r\n    this.technician.EmailAddress = this.firstFormGroup.get('Email').value;\r\n    this.technician.Title = this.firstFormGroup.get('Title').value;\r\n    this.technician.Remark = this.firstFormGroup.get('Remark').value;\r\n  }\r\n\r\n  SelectMaker(){\r\n    this.isSelectMaker = true; \r\n  }\r\n\r\n\r\n  Logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.untouched || control.touched)\r\n    );\r\n  }\r\n}","<p-toast></p-toast>\r\n\r\n<div fxLayout=\"column\" fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around stretch\">\r\n  <h3 class=\"header-title text-center\">Register Form</h3>\r\n\r\n  <!-- registerForm -->\r\n  <div fxFlex=\"100\" xLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-horizontal-stepper [linear]=\"false\" #stepper class=\"form-register\">\r\n      <mat-step [stepControl]=\"firstFormGroup\">\r\n        \r\n        <form [formGroup]=\"firstFormGroup\" >\r\n          <ng-template matStepLabel>Fill out basic information</ng-template>\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">      \r\n              <p>Please fill in all the engineer details below</p>    \r\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n                  <div fxFlex=\"50\">\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Full Name</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"FullName\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['FullName'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\"  formControlName=\"Email\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Email'].valid\r\n              \">\r\n              Required field.\r\n            </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"50\">                 \r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Country</mat-label>\r\n                      <mat-select [errorStateMatcher]=\"matcher\" formControlName=\"Country\" required>\r\n                        <mat-option *ngFor=\"let country of listStationed\" [value]=\"country\">\r\n                          {{country.StationName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                       <mat-error *ngIf=\"firstFormGroup.controls['Country'].hasError('required')\">Please choose country</mat-error>\r\n                      \r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-element\">\r\n                      <mat-label>Title</mat-label>\r\n                      <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Title\" required>\r\n                      <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Title'].valid\r\n              \">\r\n              Required field\r\n            </mat-error>\r\n                    </mat-form-field>                  \r\n                  </div>\r\n                </div>                                         \r\n                <div fxFlex=\"100\">\r\n                  <mat-form-field class=\"form-element\">\r\n                    <mat-label>Remark</mat-label>\r\n                    <textarea formControlName=\"Remark\" [errorStateMatcher]=\"matcher\" [errorStateMatcher]=\"matcher\" matInput placeholder=\"Ex. It makes me feel...\"></textarea>\r\n                    <mat-error *ngIf=\"\r\n                !firstFormGroup.controls['Remark'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                                              \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-around center\">\r\n\r\n              </div>              \r\n              \r\n              <p class=\"bold\">Please select engineer professional background</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n                <div *ngFor=\"let item of listProskill\">\r\n                  <mat-checkbox [color]=\"primary\" [value]=\"item.SkillId\" (change)=\"changeProfessionalSkillLevel($event)\">\r\n                    {{item.SkillName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <mat-error class=\"text-center\" *ngIf=\"\r\n                technician.ProSkill === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              </div>\r\n              <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n                <!-- <button [disabled]=\"!firstFormGroup.valid || technician.ProSkill == 0\" mat-stroked-button color=\"primary\" (click)=\"AddBasicInformation()\" matStepperNext>Next</button> -->\r\n                <button mat-stroked-button color=\"primary\" matStepperNext>Next</button>\r\n              </div>\r\n            </div>        \r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"secondFormGroup\" label=\"Select Machine Maker\">\r\n        \r\n        <form [formGroup]=\"secondFormGroup\">\r\n          <ng-template matStepLabel>Select Machine Maker</ng-template>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\r\n            <p>Please fill in all the engineer details below</p> \r\n            <div fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"stretch stretch\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-around center\">\r\n                <mat-form-field class=\"form-element\" fxFlex=\"50\">\r\n                  <mat-label>Search Machine Maker</mat-label>\r\n                  <input [disabled]=\"isSelectMaker\" matInput placeholder=\"Search\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"searchMachinesCtrl\">\r\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addOption($event)\" [displayWith]=\"displayFn\">\r\n                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                        <ng-container *ngIf=\"!isLoading\">\r\n                          <mat-option *ngFor=\"let machine of filteredMachines\" [value]=\"machine\">\r\n                            <span><b>{{machine.MakerName}}</b></span>\r\n                          </mat-option>\r\n                        </ng-container>\r\n                      </mat-autocomplete>\r\n                </mat-form-field>   \r\n                <mat-form-field fxFlex=\"50\">\r\n                  <mat-label>Industry</mat-label>\r\n                  <mat-select [disabled]=\"isSelectMaker\" [(value)]=\"selectedInd\">\r\n                    <mat-option *ngFor=\"let industry of listIndustries\" [value]=\"industry\">\r\n                      {{industry.Description}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  \r\n                </mat-form-field> \r\n                <button mat-raised-button color=\"primary\" (click) = \"SelectMaker()\">Select</button>\r\n                <!-- <button mat-raised-button color=\"primary\" [disabled]=\"selectedMachine.Maker.MaId == 0 || isSelectMaker\" (click) = \"SelectMaker()\">Select</button> -->\r\n              </div>\r\n              <div *ngIf=\"isSelectMaker\">\r\n              <p class=\"text-center\">Please assign machine skill to machine</p>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center center\">\r\n             \r\n                <div *ngFor=\"let item of listMachineSkill\">\r\n                  <mat-checkbox (change)=\"OptionSelectChange($event)\" [value]=\"item.MSId\" [color]=\"primary\" matTooltip=\"{{item.Explain}}\">\r\n                    {{item.MSName}}\r\n                  </mat-checkbox>\r\n                </div>\r\n                \r\n              </div>\r\n              <mat-error class=\"text-center\" *ngIf=\"\r\n              selectedMachine.MachineSkill.length === 0\r\n              \">\r\n              Please select at least one machine skill\r\n            </mat-error>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">            \r\n                <mat-form-field fxFlex=\"25\">                \r\n                  <mat-label>Application</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"application\"\r\n                         >\r\n                </mat-form-field> \r\n                <mat-form-field fxFlex=\"75\">                \r\n                  <mat-label>Description</mat-label>\r\n                  <input matInput [errorStateMatcher]=\"matcher\" formControlName=\"Description\" placeholder=\"Ex. 1 Main St, New York, NY\">\r\n                  <mat-error *ngIf=\"\r\n                !secondFormGroup.controls['Description'].valid\r\n              \">\r\n              Required field, must be between 15 and 500 characters.\r\n            </mat-error>\r\n                </mat-form-field> \r\n                <button  (click)=\"AddMachineSkill()\" mat-icon-button  mat-raised-button color=\"primary\" [disabled]=\"!secondFormGroup.valid || selectedMachine.MachineSkill.length === 0\">\r\n                  <mat-icon>done</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button  mat-raised-button>\r\n                    <mat-icon>clear</mat-icon>\r\n                    </button>\r\n              </div> \r\n            </div>\r\n            </div>\r\n            <p>List Machine Maker</p>  \r\n            <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n              <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                <!--- Note that these columns can be defined in any order.\r\n                      The actual rendered columns are set as a property on the row definition\" -->\r\n              \r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"application\">\r\n                  <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Weight Column -->\r\n                <ng-container matColumnDef=\"comment\">\r\n                  <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n                </ng-container>\r\n              \r\n                <!-- Action Column -->\r\n                <ng-container matColumnDef=\"action\">\r\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> \r\n                    <button (click)=\"RemoveMakerAction(element)\" matTooltip=\"Remove Machine\" mat mat-icon-button color=\"primary\"\r\n                    aria-label=\"Example icon-button with a heart icon\">\r\n                    <mat-icon>remove_circle</mat-icon>\r\n                  </button>\r\n                  </td>\r\n                </ng-container>\r\n              \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"footer-gr\" fxFlex=\"100\" fxLayoutGap=\"10px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n              <button mat-stroked-button matStepperPrevious>Back</button>\r\n              <button mat-stroked-button matStepperNext>Next</button>\r\n              <!-- <button mat-stroked-button matStepperNext [disabled]=\"listAssignmachine.length === 0\">Next</button> -->\r\n            </div>  \r\n          </div>\r\n             \r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Confirm</ng-template>\r\n        <h4 class=\"font-weight-normal\">Technician Information</h4>\r\n        <mat-divider></mat-divider>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start stretch\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly start\">\r\n            <div fxFlex=\"50\" fxFlexOffset=\"2\">\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>whrhrehrehe</p>\r\n              <p class=\"font-weight-bold\">Email</p>\r\n              <p>erhrehreh</p>\r\n              <p class=\"font-weight-bold\">Title</p>\r\n              <p>erhrehrehreh</p>\r\n            </div>\r\n            <div fxFlex=\"50\">\r\n              <p class=\"font-weight-bold\">Country</p>\r\n              <p>erhrehrehreh</p>\r\n              <p class=\"font-weight-bold\">Full Name</p>\r\n              <p>ehrehrehrehrehreh</p>\r\n            </div>             \r\n          </div>\r\n          \r\n          <h4 class=\"font-weight-normal\">Machine Maker Information</h4>\r\n          <mat-divider></mat-divider>\r\n          <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"center stretch\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n              <!--- Note that these columns can be defined in any order.\r\n                    The actual rendered columns are set as a property on the row definition\" -->\r\n            \r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef> Machine Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.MakerName}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"application\">\r\n                <th mat-header-cell *matHeaderCellDef> Application </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Maker.Model}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"comment\">\r\n                <th mat-header-cell *matHeaderCellDef> Comment </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.Comment}} </td>\r\n              </ng-container>\r\n            \r\n              <!-- Action Column -->\r\n              <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef>  </th>\r\n                <td mat-cell *matCellDef=\"let element\"> \r\n                </td>\r\n              </ng-container>\r\n            \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"end center\">\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button color=\"primary\" (click)=\"stepper.reset()\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  </div>\r\n  \r\n</div>\r\n","\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { Routes } from '@angular/router'\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { DashboardComponent } from './home/dashboard/dashboard.component';\r\nimport { GeneralPageNotFoundComponent } from './home/pagenotfound/pagenotfound.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '',\r\n      component: DashboardComponent,\r\n      canActivate  : [AuthGuard]\r\n    },\r\n    {\r\n        path: 'login', component: LoginComponent\r\n    },   \r\n    {\r\n        path: 'pagenotfound',component:GeneralPageNotFoundComponent\r\n    },    \r\n    { path : '**', redirectTo:'/pagenotfound', pathMatch : 'full'}\r\n\r\n];\r\n","import { MachineSkill } from \"./../models/MachineSkill.model\";\r\nimport { Maker } from \"../models/maker.model\";\r\n\r\nexport class MachineSkillAssign {\r\n  Maker: Maker;\r\n  MachineSkill: Array<MachineSkill>;\r\n  Comment: string;\r\n  SkillName: string;\r\n  SkillNumber: number = 0;\r\n}\r\n","import { Industry } from \"./../models/Industry.model\";\r\nexport class MachinesMaker {\r\n  MaId: number = 0;\r\n  MakerName: string;\r\n  MakerDescription: string;\r\n  industries: Array<Industry>;\r\n}\r\n","import { QuerySearch } from \"../models/QuerySearchModel.model\";\r\n\r\nexport class AppSettings {\r\n  public static API_service = 'http://skillmatrix.local/';\r\n\r\n  /* server test */\r\n  //public static API_service      ='http://10.99.1.43:81';\r\n\r\n  //* server staging */\r\n  //public static API_service = \"http://10.99.1.44:82\";\r\n\r\n  public static Role_Admin = 11;\r\n  public static Role_Manager = 12;\r\n  public static Role_Technician = 13;\r\n\r\n  public static GetQuerySeach(\r\n    pagesize: number,\r\n    pagenumber: number,\r\n    itemname: string = null,\r\n    itemid: number = null,\r\n    typeid: number = null,\r\n    note: string = null\r\n  ) {\r\n    let query = new QuerySearch();\r\n    query.itemid = itemid;\r\n    query.name = itemname;\r\n    query.pagesize = pagesize;\r\n    query.pagenumber = pagenumber;\r\n    query.typeid = typeid;\r\n    query.note = note;\r\n\r\n    return query;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatBottomSheetModule } from \"@angular/material/bottom-sheet\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatNativeDateModule, MatRippleModule } from \"@angular/material/core\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    FlexLayoutModule,\r\n    MatFormFieldModule\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","export class FilterModel {\r\n  name: string;\r\n  professionals: Array<number>;\r\n  machineSkills: Array<number>;\r\n  professionalNumber: number;\r\n  machineSkillNumber: number;\r\n  machineMakerId: number;\r\n  makerId: number;\r\n  Industry: number;\r\n  Stationed: number;\r\n  pagesize: number;\r\n  pagenumber: number;\r\n  listStationed: Array<number>;\r\n  listIndustry: Array<number>;\r\n}\r\n","export class Industry{\r\n    IndId:number=0;\r\n    IndustryName:string;\r\n    Description:string;\r\n}","export class MachineSkill {\r\n    MSId:number=0;\r\n    MSCode:string;\r\n    MSName:string;\r\n    Explain:string;\r\n}","\r\nexport class QuerySearch {\r\n  itemid:number;\r\n  name: string;\r\n  pagesize: number;\r\n  pagenumber: number;\r\n  typeid:number;\r\n  startdate:string;\r\n  enddate:string;\r\n  note:string;\r\n}\r\n","export class Maker {\r\n  MaId: number = 0;\r\n  MakerName: string;\r\n  MakerDescription: string;\r\n  Model: string =\"\";\r\n  RelMachineId: number;\r\n}\r\n","import { ProfessionalSkill } from \"./ProfessionalSkill.model\";\r\nimport { MachineSkillAssign } from \"./../ViewModels/MachineSKillAssign.model\";\r\nexport class Technician {\r\n  TechId: number = 0;\r\n  UserName: string;\r\n  DisplayName: string;\r\n  EmailAddress: string;\r\n  Title: string;\r\n  Initials: string;\r\n  ProSkill: number;\r\n  StationId: number;\r\n  Remark: string;\r\n  IndustryId: number;\r\n  CreatedBy: number;\r\n  UpdatedBy: number;\r\n  listAssign: Array<MachineSkillAssign>;\r\n  IndustryName: string;\r\n  StationName: string;\r\n  SkillsName: string;\r\n  ProskillName: string;\r\n  CanEdit: boolean = false;\r\n  Professionals: Array<ProfessionalSkill>;\r\n  Deactive : boolean = false;\r\n}\r\n","export class User {\r\n  UserId:number;\r\n  UserName: string;\r\n  Password: string;\r\n  EmailAddress: string;\r\n  DispplayName:string;\r\n  CountryId:string;\r\n  Initials:string;\r\n  Rights :number;\r\n  Countries: Array<number>;\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CheckboxModule } from \"primeng/checkbox\";\r\nimport { ListboxModule } from \"primeng/listbox\";\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {StepsModule} from 'primeng/steps';\r\nimport {ToastModule} from 'primeng/toast';\r\n@NgModule({\r\n  exports: [ \r\n\tListboxModule,\r\n    InputTextModule,\r\n\t\tButtonModule,\r\n\t\tRadioButtonModule,\r\n\t\tInputTextareaModule,\r\n\t\tDropdownModule,\r\n\t\tToastModule,\r\n\t\tStepsModule],\r\n})\r\nexport class PrimeModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { of as observableOf, Observable } from \"rxjs\";\r\nimport { delay, mergeMap, switchMap } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // Assuming this would be cached somehow from a login call.\r\n  public authTokenStale: string = localStorage.getItem(\"userToken\");\r\n  public authTokenNew: string = localStorage.getItem(\"userToken\");\r\n  public currentToken: string = localStorage.getItem(\"userToken\");\r\n\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentToken = this.authTokenStale;\r\n  }\r\n\r\n  getAuthToken() {\r\n    this.currentToken = localStorage.getItem(\"userToken\");\r\n    return this.currentToken;\r\n  }\r\n\r\n  refreshToken(): Observable<string> {\r\n    /*\r\n            The call that goes in here will use the existing refresh token to call\r\n            a method on the oAuth server (usually called refreshToken) to get a new\r\n            authorization token for the API calls.\r\n        */\r\n    let data =\r\n      \"refresh_token=\" +\r\n      localStorage.getItem(\"refreshToken\") +\r\n      \"&grant_type=refresh_token&client_id=NgAuthApp\";\r\n    this.http\r\n      .post(this.rootUrl + \"/login\", data, {\r\n        headers: {\r\n          \"No-Auth\": \"True\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n      .subscribe((data: any) => {\r\n        localStorage.removeItem(\"userToken\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        localStorage.setItem(\"userToken\", data.access_token);\r\n        localStorage.setItem(\"refreshToken\", data.refresh_token);\r\n        this.authTokenNew = data.access_token;\r\n        this.currentToken = this.authTokenNew;\r\n      });\r\n    return observableOf(this.authTokenNew).pipe(delay(200));\r\n  }\r\n}\r\n","import { FilterMakerComponent } from \"./../../home/pop-up/filter-maker/filter-maker.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ConfirmationDialogComponent } from \"./../../home/pop-up/confirmation/confirmation.component\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { FilterModel } from \"../models/FilterModel.model\";\r\nimport { FilterComponent } from \"../../home/pop-up/filter/filter.component\";\r\nimport { DownloadMachineDialogComponent } from \"../../home/pop-up/download-machine/download-machine.component\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openConfirmDialog(msg) {\r\n    return this.dialog.open(ConfirmationDialogComponent, {\r\n      width: \"390px\",\r\n      disableClose: true,\r\n      data: {\r\n        message: msg,\r\n      },\r\n    });\r\n  }\r\n\r\n  openDownloadMachineDialog() {\r\n    return this.dialog.open(DownloadMachineDialogComponent, {\r\n      width: \"390px\",\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  openDiagnosedDialog(filter: FilterModel) {\r\n    return this.dialog.open(FilterComponent, {\r\n      width: \"550px\",\r\n      disableClose: true,\r\n      position: {\r\n        top: \"100px\",\r\n      },\r\n      data: {\r\n        model: filter,\r\n      },\r\n    });\r\n  }\r\n\r\n  openFilterMachineMakerDialog(filter: FilterModel) {\r\n    return this.dialog.open(FilterMakerComponent, {\r\n      width: \"550px\",\r\n      disableClose: true,\r\n      position: {\r\n        top: \"100px\",\r\n      },\r\n      data: {\r\n        model: filter,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { JsonMachineMaker } from \"./../ViewModels/JsonMachineMaker.model\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { MachinesMaker } from \"../ViewModels/MachinesMaker.model\";\r\nimport { FilterModel } from \"../models/FilterModel.model\";\r\n\r\n@Injectable()\r\nexport class SkillService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  GetListIndustries(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/GetListIndustries\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  GetListIndustriesAll(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesAll\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  DownloadMachinesReport(query: QuerySearch){\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/DownloadMachinesReport\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" },\r\n      responseType: \"blob\", }\r\n    );\r\n  }\r\n\r\n  GetListProskill(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/GetListProskills\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  CheckPermission(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/CheckPermission\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  GetListMachineSKill(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListMachineSkills\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  GetListIndustriesMachine(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesMachine\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetSelectedMachineMaker(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetIndustriesMachineById\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  FilterListMakers(query: FilterModel) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/FilterMachineMaker\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListIndustriesMachineByKey(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/GetListIndustriesMachineByKey\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  AddMachineMaker(model: MachinesMaker) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/AddRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n  DeleteMaker(model: QuerySearch) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/DeleteRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  UpdateMakerIndustry(model: MachinesMaker) {\r\n    var body = JSON.stringify(model);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/UpdateRelIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  SearchMachineMaker(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/SearchMachine\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  SearchMachineMakerByIndustry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/Skill/SearchMachineByIndustry\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchIndustry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"/api/Skill/SearchIndustry\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n}\r\n","import { FilterModel } from \"./../models/FilterModel.model\";\r\nimport { Technician } from \"./../models/technician.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { User } from \"../models/user.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class TechnicianService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserClaims(): Observable<User> {\r\n    return this.http.post<User>(\r\n      this.rootUrl + \"/api/technician/GetUserClaims\",\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" }\r\n    );\r\n  }\r\n\r\n  SearchUserByInitial(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchUserInitital\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchUserInitialByCountry(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchUserInititalByCountry\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  UpdateStatusOfTechnician(query: QuerySearch){\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/UpdateStatusOfTechnician\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  DownloadTechniciansReport(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/DownloadTechnicianReport\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" },\r\n      responseType: \"blob\", }\r\n    );\r\n  }\r\n\r\n  SearchTechnicianByName(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchTechnicianByName\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  FilterListEngineer(query: FilterModel) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/FilterEngineer\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  SearchStationed(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/SearchStationed\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationed(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationed\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationedAll(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationedAll\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListStationedEngineer(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListStationedEngineer\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n  AddTechnicianSkill(technician: Technician) {\r\n    var body = JSON.stringify(technician);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/AddTechnicianSkill\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  UpdateTechnicianSkill(technician: Technician) {\r\n    var body = JSON.stringify(technician);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/UpdateTechnicianSkill\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetListEngineer(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetListEngineers\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n\r\n  GetEngineerDetail(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(\r\n      this.rootUrl + \"/api/technician/GetEngineerDetail\",\r\n      body,\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n}\r\n","import { Industry } from \"./../models/Industry.model\";\r\nimport { FilterModel } from \"./../models/FilterModel.model\";\r\nimport { User } from \"./../models/user.model\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { QuerySearch } from \"../models/QuerySearchModel.model\";\r\nimport { AppSettings } from \"../constant/TSconstands.component\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\nimport { Stationed } from \"../models/Stationed.model\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  readonly rootUrl = AppSettings.API_service;\r\n\r\n  private pagename = new BehaviorSubject<string>(\"DASHBOARD\");\r\n  private userrole = new BehaviorSubject<number>(0);\r\n  public userRole = 13;\r\n  private techFilterModel = new FilterModel();\r\n  private makerFilterModel = new FilterModel();\r\n  cast = this.pagename.asObservable();\r\n  castuserrole = this.userrole.asObservable();\r\n  constructor(private http: HttpClient) {\r\n    this.techFilterModel.listStationed = new Array<number>();\r\n    this.techFilterModel.listIndustry = new Array<number>();\r\n    this.techFilterModel.professionals = new Array<number>();\r\n    this.techFilterModel.machineSkills = new Array<number>();\r\n    this.techFilterModel.makerId = 0;\r\n    this.techFilterModel.pagenumber = 1;\r\n    this.techFilterModel.pagesize = 10;\r\n\r\n    this.makerFilterModel.listStationed = new Array<number>();\r\n    this.makerFilterModel.listIndustry = new Array<number>();\r\n    this.makerFilterModel.professionals = new Array<number>();\r\n    this.makerFilterModel.machineSkills = new Array<number>();\r\n    this.makerFilterModel.pagenumber = 1;\r\n    this.makerFilterModel.pagesize = 10;\r\n  }\r\n\r\n  UpdatePageNumber(val: number) {\r\n    this.techFilterModel.pagenumber = val;\r\n  }\r\n\r\n  UpdatePageNumberOfMachine(val: number) {\r\n    this.makerFilterModel.pagenumber = val;\r\n  }\r\n\r\n  AddStations(selectItem: SelectionModel<Stationed>) {\r\n    selectItem.selected.forEach((e) => {\r\n      this.techFilterModel.listStationed.push(e.StationId);\r\n    });\r\n  }\r\n  AddIndustry(selectItem: SelectionModel<Industry>) {\r\n    selectItem.selected.forEach((e) => {\r\n      this.techFilterModel.listIndustry.push(e.IndId);\r\n    });\r\n  }\r\n\r\n  AddMakerIndustry(ind: SelectionModel<Industry>) {\r\n    ind.selected.forEach((e) => {\r\n      this.makerFilterModel.listIndustry.push(e.IndId);\r\n    });\r\n  }\r\n\r\n  getTechFilter() {\r\n    return this.techFilterModel;\r\n  }\r\n\r\n  AddNewTechFilter(model: FilterModel) {\r\n    this.techFilterModel = model;\r\n  }\r\n\r\n  AddNewMakerFilter(model: FilterModel) {\r\n    this.makerFilterModel = model;\r\n  }\r\n  getMakerFilter() {\r\n    return this.makerFilterModel;\r\n  }\r\n\r\n  AddTechName(name: string) {\r\n    this.techFilterModel.name = name;\r\n  }\r\n\r\n  AddMakerName(name: string) {\r\n    this.makerFilterModel.name = name;\r\n  }\r\n\r\n  SetPageName(pagename): void {\r\n    this.pagename.next(pagename);\r\n  }\r\n\r\n  SetUserRole(userrole): void {\r\n    this.userrole.next(userrole);\r\n  }\r\n\r\n  public getIPAddress() {\r\n    return this.http.get(\"http://api.ipify.org/?format=json\");\r\n  }\r\n\r\n  sendMailLogin(query: QuerySearch) {\r\n    var body = JSON.stringify(query);\r\n    return this.http.post(this.rootUrl + \"api/technician/SendMailLogin\", body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  }\r\n\r\n  userAuthentication(userName, password) {\r\n    let data =\r\n      \"username=\" +\r\n      userName +\r\n      \"&password=\" +\r\n      password +\r\n      \"&grant_type=password&client_id=NgAuthApp\";\r\n    return this.http.post(this.rootUrl + \"/login\", data, {\r\n      headers: {\r\n        \"No-Auth\": \"True\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    });\r\n  }\r\n\r\n  userAuthenticationusingF5token() {\r\n    let data =\r\n      \"refresh_token=\" +\r\n      localStorage.getItem(\"refreshToken\") +\r\n      \"&grant_type=refresh_token&client_id=NgAuthApp\";\r\n    return this.http.post(this.rootUrl + \"/login\", data, {\r\n      headers: {\r\n        \"No-Auth\": \"True\",\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    });\r\n  }\r\n\r\n  getUserClaims(): Observable<User> {\r\n    return this.http.post<User>(this.rootUrl + \"/api/User/GetUserClaims\", {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}