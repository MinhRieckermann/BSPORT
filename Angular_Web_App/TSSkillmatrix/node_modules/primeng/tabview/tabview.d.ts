import { ElementRef, OnDestroy, EventEmitter, AfterContentInit, QueryList, TemplateRef, EmbeddedViewRef, ViewContainerRef, ChangeDetectorRef, AfterViewChecked } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/tooltip';
import * as ɵngcc4 from 'primeng/ripple';
export declare class TabPanel implements AfterContentInit, OnDestroy {
    viewContainer: ViewContainerRef;
    cd: ChangeDetectorRef;
    header: string;
    disabled: boolean;
    closable: boolean;
    headerStyle: any;
    headerStyleClass: string;
    leftIcon: string;
    rightIcon: string;
    cache: boolean;
    tooltip: any;
    tooltipPosition: string;
    tooltipPositionStyle: string;
    tooltipStyleClass: string;
    templates: QueryList<any>;
    constructor(viewContainer: ViewContainerRef, cd: ChangeDetectorRef);
    closed: boolean;
    view: EmbeddedViewRef<any>;
    _selected: boolean;
    loaded: boolean;
    id: string;
    contentTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    ngAfterContentInit(): void;
    get selected(): boolean;
    set selected(val: boolean);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabPanel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TabPanel, "p-tabPanel", never, { "cache": "cache"; "tooltipPosition": "tooltipPosition"; "tooltipPositionStyle": "tooltipPositionStyle"; "selected": "selected"; "header": "header"; "disabled": "disabled"; "closable": "closable"; "headerStyle": "headerStyle"; "headerStyleClass": "headerStyleClass"; "leftIcon": "leftIcon"; "rightIcon": "rightIcon"; "tooltip": "tooltip"; "tooltipStyleClass": "tooltipStyleClass"; }, {}, ["templates"], ["*"]>;
}
export declare class TabView implements AfterContentInit, AfterViewChecked, BlockableUI {
    el: ElementRef;
    cd: ChangeDetectorRef;
    orientation: string;
    style: any;
    styleClass: string;
    controlClose: boolean;
    navbar: ElementRef;
    inkbar: ElementRef;
    tabPanels: QueryList<TabPanel>;
    onChange: EventEmitter<any>;
    onClose: EventEmitter<any>;
    activeIndexChange: EventEmitter<number>;
    initialized: boolean;
    tabs: TabPanel[];
    _activeIndex: number;
    preventActiveIndexPropagation: boolean;
    tabChanged: boolean;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    initTabs(): void;
    open(event: Event, tab: TabPanel): void;
    close(event: Event, tab: TabPanel): void;
    closeTab(tab: TabPanel): void;
    findSelectedTab(): TabPanel;
    findTabIndex(tab: TabPanel): number;
    getBlockableElement(): HTMLElement;
    get activeIndex(): number;
    set activeIndex(val: number);
    updateInkBar(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabView, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TabView, "p-tabView", never, { "orientation": "orientation"; "activeIndex": "activeIndex"; "style": "style"; "styleClass": "styleClass"; "controlClose": "controlClose"; }, { "onChange": "onChange"; "onClose": "onClose"; "activeIndexChange": "activeIndexChange"; }, ["tabPanels"], ["*"]>;
}
export declare class TabViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TabViewModule, [typeof TabView, typeof TabPanel], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.TooltipModule, typeof ɵngcc4.RippleModule], [typeof TabView, typeof TabPanel, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TabViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFidmlldy5kLnRzIiwic291cmNlcyI6WyJ0YWJ2aWV3LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIEFmdGVyQ29udGVudEluaXQsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIEVtYmVkZGVkVmlld1JlZiwgVmlld0NvbnRhaW5lclJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEFmdGVyVmlld0NoZWNrZWQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGFiUGFuZWwgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWY7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIGhlYWRlcjogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIGNsb3NhYmxlOiBib29sZWFuO1xuICAgIGhlYWRlclN0eWxlOiBhbnk7XG4gICAgaGVhZGVyU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGxlZnRJY29uOiBzdHJpbmc7XG4gICAgcmlnaHRJY29uOiBzdHJpbmc7XG4gICAgY2FjaGU6IGJvb2xlYW47XG4gICAgdG9vbHRpcDogYW55O1xuICAgIHRvb2x0aXBQb3NpdGlvbjogc3RyaW5nO1xuICAgIHRvb2x0aXBQb3NpdGlvblN0eWxlOiBzdHJpbmc7XG4gICAgdG9vbHRpcFN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgY2xvc2VkOiBib29sZWFuO1xuICAgIHZpZXc6IEVtYmVkZGVkVmlld1JlZjxhbnk+O1xuICAgIF9zZWxlY3RlZDogYm9vbGVhbjtcbiAgICBsb2FkZWQ6IGJvb2xlYW47XG4gICAgaWQ6IHN0cmluZztcbiAgICBjb250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW47XG4gICAgc2V0IHNlbGVjdGVkKHZhbDogYm9vbGVhbik7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRhYlZpZXcgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdDaGVja2VkLCBCbG9ja2FibGVVSSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIG9yaWVudGF0aW9uOiBzdHJpbmc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY29udHJvbENsb3NlOiBib29sZWFuO1xuICAgIG5hdmJhcjogRWxlbWVudFJlZjtcbiAgICBpbmtiYXI6IEVsZW1lbnRSZWY7XG4gICAgdGFiUGFuZWxzOiBRdWVyeUxpc3Q8VGFiUGFuZWw+O1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBhY3RpdmVJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgdGFiczogVGFiUGFuZWxbXTtcbiAgICBfYWN0aXZlSW5kZXg6IG51bWJlcjtcbiAgICBwcmV2ZW50QWN0aXZlSW5kZXhQcm9wYWdhdGlvbjogYm9vbGVhbjtcbiAgICB0YWJDaGFuZ2VkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIGluaXRUYWJzKCk6IHZvaWQ7XG4gICAgb3BlbihldmVudDogRXZlbnQsIHRhYjogVGFiUGFuZWwpOiB2b2lkO1xuICAgIGNsb3NlKGV2ZW50OiBFdmVudCwgdGFiOiBUYWJQYW5lbCk6IHZvaWQ7XG4gICAgY2xvc2VUYWIodGFiOiBUYWJQYW5lbCk6IHZvaWQ7XG4gICAgZmluZFNlbGVjdGVkVGFiKCk6IFRhYlBhbmVsO1xuICAgIGZpbmRUYWJJbmRleCh0YWI6IFRhYlBhbmVsKTogbnVtYmVyO1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgZ2V0IGFjdGl2ZUluZGV4KCk6IG51bWJlcjtcbiAgICBzZXQgYWN0aXZlSW5kZXgodmFsOiBudW1iZXIpO1xuICAgIHVwZGF0ZUlua0JhcigpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGFiVmlld01vZHVsZSB7XG59XG4iXX0=