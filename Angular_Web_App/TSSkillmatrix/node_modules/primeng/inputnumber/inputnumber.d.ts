import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
import * as ɵngcc3 from 'primeng/button';
export declare const INPUTNUMBER_VALUE_ACCESSOR: any;
export declare class InputNumber implements OnInit, ControlValueAccessor {
    el: ElementRef;
    private cd;
    showButtons: boolean;
    format: boolean;
    buttonLayout: string;
    disabled: boolean;
    inputId: string;
    styleClass: string;
    style: any;
    placeholder: string;
    size: number;
    maxlength: number;
    tabindex: string;
    title: string;
    ariaLabel: string;
    ariaRequired: boolean;
    name: string;
    required: boolean;
    autocomplete: string;
    min: number;
    max: number;
    incrementButtonClass: string;
    decrementButtonClass: string;
    incrementButtonIcon: string;
    decrementButtonIcon: string;
    step: number;
    inputStyle: any;
    inputStyleClass: string;
    input: ElementRef;
    onInput: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    value: number;
    onModelChange: Function;
    onModelTouched: Function;
    focused: boolean;
    initialized: boolean;
    groupChar: string;
    isSpecialChar: boolean;
    timer: any;
    lastValue: string;
    _numeral: any;
    numberFormat: any;
    _decimal: any;
    _group: any;
    _minusSign: any;
    _currency: any;
    _prefix: any;
    _suffix: any;
    _index: any;
    _localeOption: string;
    _localeMatcherOption: string;
    _modeOption: string;
    _currencyOption: string;
    _currencyDisplayOption: string;
    _useGroupingOption: boolean;
    _minFractionDigitsOption: number;
    _maxFractionDigitsOption: number;
    _prefixOption: string;
    _suffixOption: string;
    get locale(): string;
    set locale(localeOption: string);
    get localeMatcher(): string;
    set localeMatcher(localeMatcherOption: string);
    get mode(): string;
    set mode(modeOption: string);
    get currency(): string;
    set currency(currencyOption: string);
    get currencyDisplay(): string;
    set currencyDisplay(currencyDisplayOption: string);
    get useGrouping(): boolean;
    set useGrouping(useGroupingOption: boolean);
    get minFractionDigits(): number;
    set minFractionDigits(minFractionDigitsOption: number);
    get maxFractionDigits(): number;
    set maxFractionDigits(maxFractionDigitsOption: number);
    get prefix(): string;
    set prefix(prefixOption: string);
    get suffix(): string;
    set suffix(suffixOption: string);
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    getOptions(): {
        localeMatcher: string;
        style: string;
        currency: string;
        currencyDisplay: string;
        useGrouping: boolean;
        minimumFractionDigits: number;
        maximumFractionDigits: number;
    };
    constructParser(): void;
    updateConstructParser(): void;
    escapeRegExp(text: any): any;
    getDecimalExpression(): RegExp;
    getGroupingExpression(): RegExp;
    getMinusSignExpression(): RegExp;
    getCurrencyExpression(): RegExp;
    formatValue(value: any): any;
    parseValue(text: any): any;
    repeat(event: any, interval: any, dir: any): void;
    spin(event: any, dir: any): void;
    onUpButtonMouseDown(event: any): void;
    onUpButtonMouseUp(): void;
    onUpButtonMouseLeave(): void;
    onUpButtonKeyDown(event: any): void;
    onUpButtonKeyUp(): void;
    onDownButtonMouseDown(event: any): void;
    onDownButtonMouseUp(): void;
    onDownButtonMouseLeave(): void;
    onDownButtonKeyUp(): void;
    onDownButtonKeyDown(event: any): void;
    onUserInput(event: any): void;
    onInputKeyDown(event: any): void;
    onInputKeyPress(event: any): void;
    onPaste(event: any): void;
    isMinusSign(char: any): boolean;
    isDecimalSign(char: any): boolean;
    insert(event: any, text: any, sign?: {
        isDecimalSign: boolean;
        isMinusSign: boolean;
    }): void;
    insertText(value: any, text: any, start: any, end: any): any;
    deleteRange(value: any, start: any, end: any): any;
    initCursor(): void;
    onInputClick(): void;
    isNumeralChar(char: any): boolean;
    resetRegex(): void;
    updateValue(event: any, valueStr: any, insertedValueStr: any, operation: any): void;
    handleOnInput(event: any, currentValue: any, newValue: any): void;
    isValueChanged(currentValue: any, newValue: any): boolean;
    validateValue(value: any): any;
    updateInput(value: any, insertedValueStr: any, operation: any): void;
    onInputFocus(event: any): void;
    onInputBlur(event: any): void;
    formattedValue(): any;
    updateModel(event: any, value: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    get filled(): boolean;
    clearTimer(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InputNumber, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<InputNumber, "p-inputNumber", never, { "showButtons": "showButtons"; "format": "format"; "buttonLayout": "buttonLayout"; "incrementButtonIcon": "incrementButtonIcon"; "decrementButtonIcon": "decrementButtonIcon"; "step": "step"; "locale": "locale"; "localeMatcher": "localeMatcher"; "mode": "mode"; "currency": "currency"; "currencyDisplay": "currencyDisplay"; "useGrouping": "useGrouping"; "minFractionDigits": "minFractionDigits"; "maxFractionDigits": "maxFractionDigits"; "prefix": "prefix"; "suffix": "suffix"; "disabled": "disabled"; "inputId": "inputId"; "styleClass": "styleClass"; "style": "style"; "placeholder": "placeholder"; "size": "size"; "maxlength": "maxlength"; "tabindex": "tabindex"; "title": "title"; "ariaLabel": "ariaLabel"; "ariaRequired": "ariaRequired"; "name": "name"; "required": "required"; "autocomplete": "autocomplete"; "min": "min"; "max": "max"; "incrementButtonClass": "incrementButtonClass"; "decrementButtonClass": "decrementButtonClass"; "inputStyle": "inputStyle"; "inputStyleClass": "inputStyleClass"; }, { "onInput": "onInput"; "onFocus": "onFocus"; "onBlur": "onBlur"; }, never, never>;
}
export declare class InputNumberModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<InputNumberModule, [typeof InputNumber], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.ButtonModule], [typeof InputNumber]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<InputNumberModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRudW1iZXIuZC50cyIsInNvdXJjZXMiOlsiaW5wdXRudW1iZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBJTlBVVE5VTUJFUl9WQUxVRV9BQ0NFU1NPUjogYW55O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSW5wdXROdW1iZXIgaW1wbGVtZW50cyBPbkluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGNkO1xuICAgIHNob3dCdXR0b25zOiBib29sZWFuO1xuICAgIGZvcm1hdDogYm9vbGVhbjtcbiAgICBidXR0b25MYXlvdXQ6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBpbnB1dElkOiBzdHJpbmc7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBzaXplOiBudW1iZXI7XG4gICAgbWF4bGVuZ3RoOiBudW1iZXI7XG4gICAgdGFiaW5kZXg6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGFyaWFMYWJlbDogc3RyaW5nO1xuICAgIGFyaWFSZXF1aXJlZDogYm9vbGVhbjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG4gICAgYXV0b2NvbXBsZXRlOiBzdHJpbmc7XG4gICAgbWluOiBudW1iZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgaW5jcmVtZW50QnV0dG9uQ2xhc3M6IHN0cmluZztcbiAgICBkZWNyZW1lbnRCdXR0b25DbGFzczogc3RyaW5nO1xuICAgIGluY3JlbWVudEJ1dHRvbkljb246IHN0cmluZztcbiAgICBkZWNyZW1lbnRCdXR0b25JY29uOiBzdHJpbmc7XG4gICAgc3RlcDogbnVtYmVyO1xuICAgIGlucHV0U3R5bGU6IGFueTtcbiAgICBpbnB1dFN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBpbnB1dDogRWxlbWVudFJlZjtcbiAgICBvbklucHV0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHZhbHVlOiBudW1iZXI7XG4gICAgb25Nb2RlbENoYW5nZTogRnVuY3Rpb247XG4gICAgb25Nb2RlbFRvdWNoZWQ6IEZ1bmN0aW9uO1xuICAgIGZvY3VzZWQ6IGJvb2xlYW47XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgZ3JvdXBDaGFyOiBzdHJpbmc7XG4gICAgaXNTcGVjaWFsQ2hhcjogYm9vbGVhbjtcbiAgICB0aW1lcjogYW55O1xuICAgIGxhc3RWYWx1ZTogc3RyaW5nO1xuICAgIF9udW1lcmFsOiBhbnk7XG4gICAgbnVtYmVyRm9ybWF0OiBhbnk7XG4gICAgX2RlY2ltYWw6IGFueTtcbiAgICBfZ3JvdXA6IGFueTtcbiAgICBfbWludXNTaWduOiBhbnk7XG4gICAgX2N1cnJlbmN5OiBhbnk7XG4gICAgX3ByZWZpeDogYW55O1xuICAgIF9zdWZmaXg6IGFueTtcbiAgICBfaW5kZXg6IGFueTtcbiAgICBfbG9jYWxlT3B0aW9uOiBzdHJpbmc7XG4gICAgX2xvY2FsZU1hdGNoZXJPcHRpb246IHN0cmluZztcbiAgICBfbW9kZU9wdGlvbjogc3RyaW5nO1xuICAgIF9jdXJyZW5jeU9wdGlvbjogc3RyaW5nO1xuICAgIF9jdXJyZW5jeURpc3BsYXlPcHRpb246IHN0cmluZztcbiAgICBfdXNlR3JvdXBpbmdPcHRpb246IGJvb2xlYW47XG4gICAgX21pbkZyYWN0aW9uRGlnaXRzT3B0aW9uOiBudW1iZXI7XG4gICAgX21heEZyYWN0aW9uRGlnaXRzT3B0aW9uOiBudW1iZXI7XG4gICAgX3ByZWZpeE9wdGlvbjogc3RyaW5nO1xuICAgIF9zdWZmaXhPcHRpb246IHN0cmluZztcbiAgICBnZXQgbG9jYWxlKCk6IHN0cmluZztcbiAgICBzZXQgbG9jYWxlKGxvY2FsZU9wdGlvbjogc3RyaW5nKTtcbiAgICBnZXQgbG9jYWxlTWF0Y2hlcigpOiBzdHJpbmc7XG4gICAgc2V0IGxvY2FsZU1hdGNoZXIobG9jYWxlTWF0Y2hlck9wdGlvbjogc3RyaW5nKTtcbiAgICBnZXQgbW9kZSgpOiBzdHJpbmc7XG4gICAgc2V0IG1vZGUobW9kZU9wdGlvbjogc3RyaW5nKTtcbiAgICBnZXQgY3VycmVuY3koKTogc3RyaW5nO1xuICAgIHNldCBjdXJyZW5jeShjdXJyZW5jeU9wdGlvbjogc3RyaW5nKTtcbiAgICBnZXQgY3VycmVuY3lEaXNwbGF5KCk6IHN0cmluZztcbiAgICBzZXQgY3VycmVuY3lEaXNwbGF5KGN1cnJlbmN5RGlzcGxheU9wdGlvbjogc3RyaW5nKTtcbiAgICBnZXQgdXNlR3JvdXBpbmcoKTogYm9vbGVhbjtcbiAgICBzZXQgdXNlR3JvdXBpbmcodXNlR3JvdXBpbmdPcHRpb246IGJvb2xlYW4pO1xuICAgIGdldCBtaW5GcmFjdGlvbkRpZ2l0cygpOiBudW1iZXI7XG4gICAgc2V0IG1pbkZyYWN0aW9uRGlnaXRzKG1pbkZyYWN0aW9uRGlnaXRzT3B0aW9uOiBudW1iZXIpO1xuICAgIGdldCBtYXhGcmFjdGlvbkRpZ2l0cygpOiBudW1iZXI7XG4gICAgc2V0IG1heEZyYWN0aW9uRGlnaXRzKG1heEZyYWN0aW9uRGlnaXRzT3B0aW9uOiBudW1iZXIpO1xuICAgIGdldCBwcmVmaXgoKTogc3RyaW5nO1xuICAgIHNldCBwcmVmaXgocHJlZml4T3B0aW9uOiBzdHJpbmcpO1xuICAgIGdldCBzdWZmaXgoKTogc3RyaW5nO1xuICAgIHNldCBzdWZmaXgoc3VmZml4T3B0aW9uOiBzdHJpbmcpO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgZ2V0T3B0aW9ucygpOiB7XG4gICAgICAgIGxvY2FsZU1hdGNoZXI6IHN0cmluZztcbiAgICAgICAgc3R5bGU6IHN0cmluZztcbiAgICAgICAgY3VycmVuY3k6IHN0cmluZztcbiAgICAgICAgY3VycmVuY3lEaXNwbGF5OiBzdHJpbmc7XG4gICAgICAgIHVzZUdyb3VwaW5nOiBib29sZWFuO1xuICAgICAgICBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IG51bWJlcjtcbiAgICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiBudW1iZXI7XG4gICAgfTtcbiAgICBjb25zdHJ1Y3RQYXJzZXIoKTogdm9pZDtcbiAgICB1cGRhdGVDb25zdHJ1Y3RQYXJzZXIoKTogdm9pZDtcbiAgICBlc2NhcGVSZWdFeHAodGV4dDogYW55KTogYW55O1xuICAgIGdldERlY2ltYWxFeHByZXNzaW9uKCk6IFJlZ0V4cDtcbiAgICBnZXRHcm91cGluZ0V4cHJlc3Npb24oKTogUmVnRXhwO1xuICAgIGdldE1pbnVzU2lnbkV4cHJlc3Npb24oKTogUmVnRXhwO1xuICAgIGdldEN1cnJlbmN5RXhwcmVzc2lvbigpOiBSZWdFeHA7XG4gICAgZm9ybWF0VmFsdWUodmFsdWU6IGFueSk6IGFueTtcbiAgICBwYXJzZVZhbHVlKHRleHQ6IGFueSk6IGFueTtcbiAgICByZXBlYXQoZXZlbnQ6IGFueSwgaW50ZXJ2YWw6IGFueSwgZGlyOiBhbnkpOiB2b2lkO1xuICAgIHNwaW4oZXZlbnQ6IGFueSwgZGlyOiBhbnkpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25Nb3VzZURvd24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25VcEJ1dHRvbk1vdXNlVXAoKTogdm9pZDtcbiAgICBvblVwQnV0dG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25LZXlEb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25LZXlVcCgpOiB2b2lkO1xuICAgIG9uRG93bkJ1dHRvbk1vdXNlRG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRvd25CdXR0b25Nb3VzZVVwKCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIG9uRG93bkJ1dHRvbktleVVwKCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uS2V5RG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBvblVzZXJJbnB1dChldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0S2V5RG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0S2V5UHJlc3MoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25QYXN0ZShldmVudDogYW55KTogdm9pZDtcbiAgICBpc01pbnVzU2lnbihjaGFyOiBhbnkpOiBib29sZWFuO1xuICAgIGlzRGVjaW1hbFNpZ24oY2hhcjogYW55KTogYm9vbGVhbjtcbiAgICBpbnNlcnQoZXZlbnQ6IGFueSwgdGV4dDogYW55LCBzaWduPzoge1xuICAgICAgICBpc0RlY2ltYWxTaWduOiBib29sZWFuO1xuICAgICAgICBpc01pbnVzU2lnbjogYm9vbGVhbjtcbiAgICB9KTogdm9pZDtcbiAgICBpbnNlcnRUZXh0KHZhbHVlOiBhbnksIHRleHQ6IGFueSwgc3RhcnQ6IGFueSwgZW5kOiBhbnkpOiBhbnk7XG4gICAgZGVsZXRlUmFuZ2UodmFsdWU6IGFueSwgc3RhcnQ6IGFueSwgZW5kOiBhbnkpOiBhbnk7XG4gICAgaW5pdEN1cnNvcigpOiB2b2lkO1xuICAgIG9uSW5wdXRDbGljaygpOiB2b2lkO1xuICAgIGlzTnVtZXJhbENoYXIoY2hhcjogYW55KTogYm9vbGVhbjtcbiAgICByZXNldFJlZ2V4KCk6IHZvaWQ7XG4gICAgdXBkYXRlVmFsdWUoZXZlbnQ6IGFueSwgdmFsdWVTdHI6IGFueSwgaW5zZXJ0ZWRWYWx1ZVN0cjogYW55LCBvcGVyYXRpb246IGFueSk6IHZvaWQ7XG4gICAgaGFuZGxlT25JbnB1dChldmVudDogYW55LCBjdXJyZW50VmFsdWU6IGFueSwgbmV3VmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgaXNWYWx1ZUNoYW5nZWQoY3VycmVudFZhbHVlOiBhbnksIG5ld1ZhbHVlOiBhbnkpOiBib29sZWFuO1xuICAgIHZhbGlkYXRlVmFsdWUodmFsdWU6IGFueSk6IGFueTtcbiAgICB1cGRhdGVJbnB1dCh2YWx1ZTogYW55LCBpbnNlcnRlZFZhbHVlU3RyOiBhbnksIG9wZXJhdGlvbjogYW55KTogdm9pZDtcbiAgICBvbklucHV0Rm9jdXMoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dEJsdXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZm9ybWF0dGVkVmFsdWUoKTogYW55O1xuICAgIHVwZGF0ZU1vZGVsKGV2ZW50OiBhbnksIHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIGdldCBmaWxsZWQoKTogYm9vbGVhbjtcbiAgICBjbGVhclRpbWVyKCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJbnB1dE51bWJlck1vZHVsZSB7XG59XG4iXX0=